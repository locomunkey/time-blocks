{"version":3,"sources":["app-context.js","auth-screen/auth-error-messages.js","components/time-blocks.jsx","utils/goal-utils.js","auth-screen/auth-screen-container.jsx","App.js","auth-screen/index.js","auth-screen/auth-screen-renderer.jsx","components/timer.jsx","timer-screen/timer-screen-renderer.jsx","timer-screen/timer-screen-container.jsx","goals-screen/goals-renderer.jsx","goals-screen/goals-container.jsx","settings-screen/settings-screen-renderer.jsx","settings-screen/settings-screen-container.jsx","log-screen/log-screen-renderer.jsx","log-screen/log-screen-container.jsx","index.js"],"names":["AppContext","React","createContext","ErrorMessage","Unexpected","PasswordMismatch","InvalidLogin","FatalError","BlockProgress","progressPercent","marks","style","position","height","width","marginRight","marginTop","backgroundColor","Math","max","ceil","map","mark","left","top","getBlockProgress","block","hours","minutes","seconds","TimeBlock","isGoal","completed","TimeBlocks","earnedBlocks","currentBlock","goal","blockGoal","GoalUtils","getTodaysBlockGoal","length","display","flexWrap","flexDirection","Array","from","parsedGoal","everyday","mon","tue","wed","thu","fri","sat","sun","weekdays","weekends","dayOfWeek","moment","format","toLowerCase","parsedGoalBlocks","parseInt","isNaN","AuthScreenContainer","firebase","global","state","error","_onSignup","email","password","authService","props","signUp","_goToHome","errorMessage","setState","_onSignin","console","log","signIn","history","replace","this","onSignup","onSignin","Component","AuthScreen","useHistory","FIREBASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseService","config","username","fetchBlocks","a","dateFormat","blocks","collection","firestore","where","get","forEach","doc","push","id","data","todaysBlocks","filter","startTime","isSame","startedBlocks","fetchGoals","goals","addTimeBlock","add","addGoal","updateGoal","update","setCurrentUser","user","uid","initializeApp","analytics","AuthService","operations","SignIn","SignUp","signInListeners","signUpListeners","getCurrentUser","auth","currentUser","onSuccess","onError","createUserWithEmailAndPassword","then","_triggerListeners","catch","errorCode","code","message","signInWithEmailAndPassword","signOut","onAuthStateChanged","cb","onSignIn","onSignUp","operation","callbacks","_setAuthPersistence","setPersistence","Auth","Persistence","LOCAL","App","render","authLoading","className","Provider","value","remoteService","service","Dimensions","alignItems","path","to","borderTop","bottom","justifyContent","window","location","search","paddingHorizontal","color","fontSize","_setCurrentUser","SignupScreenRenderer","isSignup","repeatPassword","_renderButtons","_renderSignupButtons","_renderSigninButtons","styles","button","onPress","buttonText","subButton","_onEmailChange","e","target","_onPasswordChange","_onRepeatPasswordChange","maxWidth","appTitle","subText","textInput","placeholder","onChange","autoFocus","keyboardType","autoCompleteType","secureTextEntry","StyleSheet","create","marginBottom","paddingVertical","border","Timer","intervalTimer","componentDidMount","setInterval","_onIntervalFire","componentWillUnmount","clearInterval","running","onFinish","isCountUp","onTick","result","countUpOneSecond","countDownOneSecond","n","z","join","commonStyles","small","pad","getDerivedStateFromProps","paused","TimerScreenRenderer","onTimerTick","onTimerModify","onTimerFinish","onTimerStart","onTimerStop","View","paddingBottom","paddingTop","minHeight","onModify","Text","textAlign","fontStyle","fontWeight","useLocation","marginVertical","TouchableOpacity","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","TimerScreenContainer","isDistracted","setHours","setMinutes","setSeconds","dHours","dMinutes","dSeconds","distractions","workdayStartTime","workdayEndTime","_getNumHourlyBlocksBetweenTimes","endTime","duration","diff","asHours","_fetchBlocks","_fetchGoals","_startBlock","createdAt","toISOString","_endBlock","stopped","_logTimeBlock","_onTimerTick","_onTimerModify","_onTimerFinish","_renderEarnedBlocks","elapsedHours","elapsedMinutes","elapsedSeconds","TimerScreen","Consumer","GoalMode","Days","BlurContent","blur","children","opacity","GoalsScreenRenderer","_onClearEveryday","onChangeGoal","onChangeGoalMode","_onClearWeekdays","_onClearWeekends","_onClickSection","goalMode","_onClearCustom","_renderDay","day","autoFocusInput","form","formLabel","text","formInput","_renderTextInput","_onSetValue","clearButton","shouldAutoFocus","TextInput","formTextInput","event","formType","parsedValue","_unsetAllWithOverride","override","onSaveGoal","TouchableWithoutFeedback","marginHorizontal","TouchableHighlight","borderBottom","right","container","titleText","paddingLeft","paddingRight","GoalsScreenContainer","_onChangeGoal","_onChangeGoalMode","_onSaveGoal","_getCurrentGoal","GoalsScreen","SettingsScreenRenderer","onSignOut","screenTitle","settingItem","centeredSetting","SettingsScreenContainer","_onSignOut","SettingsScreen","LogItem","earnedBlocksCount","goalCount","goalPercent","date","marginLeft","toFixed","LogScreenRenderer","days","overflow","LogScreenContainer","_fetchGoal","_getDays","startDate","endDate","dayMoment","dayKey","isBefore","isAfter","Object","keys","sort","b","_getContiguousDays","dayList","currentDay","LogScreen","AppRegistry","registerComponent","runApplication","initialProps","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.1cd65a15.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext({});\nexport default AppContext;\n","export const ErrorMessage = {\n  Unexpected: \"Something went wrong\",\n  PasswordMismatch: \"Please make sure the passwords match\",\n  InvalidLogin: \"Invalid login. Please try again\",\n  FatalError: \"Fatal error\"\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport GoalUtils from \"../utils/goal-utils\";\n\nconst BlockProgress = ({ progressPercent, marks }) => (\n  <div style={{ position: \"relative\", height: 13, width: 13, marginRight: 2, marginTop: 2, backgroundColor: \"gray\" }}>\n    <div style={{ width: `${Math.max(Math.ceil(progressPercent), 3)}%`, backgroundColor: \"rgb(97,196,85)\", height: \"100%\" }} />\n    {marks && marks.map(mark => (\n      <div style={{ position: \"absolute\", left: `${mark}%`, height: \"100%\", width: 2, top: 0, backgroundColor: \"red\" }} />  \n    ))}\n  </div>\n);\n\nconst getBlockProgress = block => 100 - (block.hours * 60 + block.minutes + (block.seconds/60.0))/60.0 * 100;\n\nconst TimeBlock = ({ block, isGoal }) => block && !block.completed\n  ? <BlockProgress progressPercent={getBlockProgress(block)} isGoal={isGoal} />\n  : (\n    <View style={{\n      width: 13,\n      height: 13,\n      marginRight: 2,\n      marginTop: 2,\n      backgroundColor: block\n        ? \"rgb(97,196,85)\"\n        : \"gray\"\n    }} />\n  );\n\nconst TimeBlocks = ({ earnedBlocks, currentBlock, goal }) => {\n  const blockGoal = Math.max(\n    GoalUtils.getTodaysBlockGoal(goal) - earnedBlocks.length - (currentBlock ? 1 : 0),\n    0\n  );\n  return (\n    <View style={{ display: \"flex\", flexWrap: \"wrap\", flexDirection: \"row\" }}>\n      {earnedBlocks.map(block => <TimeBlock block={block} />)}\n      {currentBlock && <TimeBlock block={currentBlock} isGoal={blockGoal - 1 > 0} />}\n      {Array.from(new Array(blockGoal)).map(() => <TimeBlock isGoal />)}\n    </View>\n  );\n};\n\nexport default TimeBlocks;\n","import moment from \"moment\";\n\nexport default class GoalUtils {\n  static getTodaysBlockGoal(goal) {\n    if (!goal) {\n      return 0;\n    }\n    let parsedGoal = goal;\n    if (goal.everyday !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        mon: goal.everyday,\n        tue: goal.everyday,\n        wed: goal.everyday,\n        thu: goal.everyday,\n        fri: goal.everyday,\n        sat: goal.everyday,\n        sun: goal.everyday\n      };\n    }\n    if (goal.weekdays !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        mon: goal.weekdays,\n        tue: goal.weekdays,\n        wed: goal.weekdays,\n        thu: goal.weekdays,\n        fri: goal.weekdays\n      };\n    }\n    if (goal.weekends !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        sat: goal.weekends,\n        sun: goal.weekends\n      }\n    }\n    const dayOfWeek = moment().format(\"ddd\").toLowerCase();\n    const parsedGoalBlocks = parseInt(parsedGoal[dayOfWeek]);\n    return isNaN(parsedGoalBlocks) ? 0 : parsedGoalBlocks;\n  }\n}\n","import React from \"react\";\nimport AppContext from \"../app-context\";\nimport { useHistory } from \"react-router-dom\";\nimport { SignupScreenRenderer } from \"./auth-screen-renderer\";\nimport { ErrorMessage } from \"./auth-error-messages\";\n\nclass AuthScreenContainer extends React.Component {\n  firebase = global.firebase;\n\n  state = {\n    error: null\n  };\n\n  render() {\n    const { error } = this.state;\n    return (\n      <SignupScreenRenderer\n        onSignup={this._onSignup}\n        onSignin={this._onSignin}\n        error={error}\n      />\n    );\n  }\n\n  _onSignup = (email, password) => {\n    const { authService } = this.props;\n    if (email.length === 0 || password.length === 0) {\n      return;\n    }\n    if (authService) {\n      authService.signUp(\n        email,\n        password,\n        this._goToHome,\n        errorMessage => this.setState({ error: errorMessage })\n      );\n    }\n  };\n\n  _onSignin = (email, password) => {\n    const { authService } = this.props;\n    console.log(\">>>> signdnfjsn\", authService )\n    if (authService) {\n\n      authService.signIn(\n        email,\n        password,\n        this._goToHome,\n        () => this.setState({ error: ErrorMessage.InvalidLogin })\n      );\n    }\n  }\n\n  _goToHome = () => {\n    const { history } = this.props;\n    if (!history) {\n      this.setState({ error: ErrorMessage.FatalError });\n    }\n    history.replace(\"/\");\n  }\n}\n\nexport const AuthScreen = props => {\n  const history = useHistory();\n  return (\n    <AppContext>\n      {({ authService }) => <AuthScreenContainer {...props} authService={authService} history={history} />}\n    </AppContext>\n  );\n};\n","import React from \"react\";\nimport { View, Text, Dimensions, TouchableOpacity }from \"react-native\";\nimport moment from \"moment\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport './App.css';\nimport AppContext from \"./app-context\";\nimport { TimerScreen } from \"./timer-screen\";\nimport { GoalsScreen } from \"./goals-screen\";\nimport { LogScreen } from \"./log-screen\";\nimport { AuthScreen } from \"./auth-screen\";\nimport { SettingsScreen } from \"./settings-screen\";\n\nconst FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyCBZrwH6IoMDo-jW2Ydu00z0FJMK3wQdTI\",\n  authDomain: \"timeblocks-bb1cc.firebaseapp.com\",\n  databaseURL: \"https://timeblocks-bb1cc.firebaseio.com\",\n  projectId: \"timeblocks-bb1cc\",\n  storageBucket: \"timeblocks-bb1cc.appspot.com\",\n  messagingSenderId: \"689367456633\",\n  appId: \"1:689367456633:web:6cb0b27d54e4c45f9bada8\",\n  measurementId: \"G-92KBT48GWG\"\n};\n\nclass FirebaseService {\n  firebase = global.firebase;\n\n  constructor(config, username = null) {\n    // Initialize Firebase\n    this.firebase.initializeApp(config);\n    this.firebase.analytics();\n    this.username = username;\n  }\n\n  fetchBlocks = async () => {\n    const dateFormat = \"DD MM YYYY\";\n    if (this.firebase && this.username) {\n      const blocks = [];\n      const collection = this.firebase.firestore().collection(\"blocks\")\n      const snapshot = await (this.username\n        ? collection.where(\"username\", \"==\", this.username).get()\n        : collection.get());\n      snapshot.forEach(doc => blocks.push({ id: doc.id, ...doc.data() }));\n      console.log(`Log: Fetched ${blocks.length} blocks`, blocks);\n      const todaysBlocks = blocks\n        .filter(block => moment(moment(block.startTime).format(dateFormat)).isSame(moment().format(dateFormat)));\n      const startedBlocks = blocks.filter(block => !block.completed);\n      const earnedBlocks = blocks.filter(block => block.completed);\n      console.log(`Log: Filtered ${startedBlocks.length} started blocks`, startedBlocks);\n      console.log(`Log: Filtered ${earnedBlocks.length} earned blocks`, earnedBlocks);\n      return { startedBlocks, earnedBlocks, todaysBlocks };\n    }\n    return null;\n  };\n\n  fetchGoals = async () => {\n    if (this.firebase && this.username) {\n      const goals = [];\n      const collection = this.firebase.firestore().collection(\"goals\")\n      const snapshot = await (this.username\n        ? collection.where(\"username\", \"==\", this.username).get()\n        : collection.get());\n      snapshot.forEach(doc => goals.push({ ...doc.data(), id: doc.id }));\n      console.log(`Log: Fetched ${goals.length} goals`, goals);\n      return goals;\n    }\n    return null;\n  };\n\n  addTimeBlock = block => {\n    if (this.firebase && this.username) {\n      this.firebase.firestore()\n        .collection(\"blocks\")\n        .add({\n          ...block,\n          username: this.username\n        });\n    }\n  };\n\n  addGoal = async goal => {\n    if (this.firebase && this.username) {\n      await this.firebase.firestore()\n        .collection(\"goals\")\n        .add({ ...goal, username: this.username });\n    }\n  }\n\n  updateGoal = async goal => {\n    if (this.firebase && this.username) {\n      await this.firebase.firestore()\n        .collection(\"goals\")\n        .doc(goal.id)\n        .update({ ...goal, username: this.username });\n    }\n  };\n\n  setCurrentUser = user => {\n    if (user) {\n      this.user = user;\n      this.username = user.uid;\n    }\n  };\n}\n\nclass AuthService {\n  firebase = global.firebase;\n  operations = {\n    SignIn: \"SignIn\",\n    SignUp: \"SignUp\"\n  };\n  signInListeners = [];\n  signUpListeners = [];\n\n  constructor() {\n    this.currentUser = this.firebase.auth().currentUser;\n    this._setAuthPersistence();\n  }\n\n  getCurrentUser = () => this.firebase.auth().currentUser;\n\n  signUp = (email, password, onSuccess = () => {}, onError = () => {}) => {\n    if (this.firebase) {\n      this.firebase.auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(data => {\n          console.log(\"Log: Auth - Signup success\");\n          this._triggerListeners(this.operations.SignUp, data);\n          if (onSuccess) {\n            onSuccess(data);\n          }\n        })\n        .catch(error => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          console.log(`Error: Auth Signup - (${errorCode}) ${errorMessage}`);\n          if (onError) {\n            onError(errorMessage);\n          }\n        });\n    }\n  };\n\n  signIn = (email, password, onSuccess = () => {}, onError = () => {}) => {\n    if (this.firebase) {\n      this.firebase.auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(data => {\n          console.log(\"Log: Auth - Signin success\");\n          this._triggerListeners(this.operations.SignIn, data);\n          if (onSuccess) {\n            onSuccess(data);\n          }\n        })\n        .catch(error => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          console.log(`Error: Auth Signin - (${errorCode}) ${errorMessage}`);\n          if (onError) {\n            onError(errorMessage);\n          }\n        });\n    }\n  }\n\n  signOut = () => {\n    if (this.firebase) {\n      this.firebase.auth().signOut().then(function() {\n        console.log('Log: Auth - Signed Out');\n      }, function(error) {\n        console.error('Error: Auth - Sign Out Error', error);\n      });\n    }\n  };\n\n  onAuthStateChanged = cb => {\n    if (this.firebase) {\n      this.firebase.auth().onAuthStateChanged(user => cb(user));\n    }\n  };\n\n  onSignIn = cb => this.signInListeners.push(cb);\n\n  onSignUp = cb => this.signUpListeners.push(cb);\n\n  _triggerListeners = (operation, data = null) => {\n    var callbacks = [];\n    switch (operation) {\n      case this.operations.SignUp:\n        callbacks = this.signUpListeners;\n        break;\n      case this.operations.SignIn:\n        callbacks = this.signInListeners;\n        break;\n      default:\n        break;\n    }\n    for (const cb of callbacks) {\n      cb(data);\n    }\n  };\n\n  _setAuthPersistence = () => {\n    if (this.firebase) {\n      this.firebase.auth()\n        .setPersistence(this.firebase.auth.Auth.Persistence.LOCAL)\n        .then(() => console.log(\"Log: Auth persistence set\"))\n        .catch(error => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          console.log(`Error: Auth Persistence - (${errorCode}) ${errorMessage}`);\n        });\n    }\n  }\n}\n\nclass App extends React.Component {\n  firebase = global.firebase;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      authLoading: true\n    };\n  }\n\n  componentWillMount() {\n    this.service = new FirebaseService(FIREBASE_CONFIG);\n    this.authService = new AuthService();\n    this.authService.onAuthStateChanged(user => {\n      console.log(\"Auth: Logged in user\", user.uid);\n      this._setCurrentUser(user);\n      this.setState({ authLoading: false });\n    });\n  }\n\n  render = () => {\n    const { currentUser, authLoading } = this.state;\n    if (authLoading) {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <View style={{ width: \"100%\", height: \"100%\", backgroundColor: \"black\" }} />\n          </div>\n        </div>\n      );\n    }\n    return (\n      <AppContext.Provider value={{\n        remoteService: this.service,\n        authService: this.authService,\n        currentUser\n      }}>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <Router>\n              <View style={{ height: Dimensions.get(\"window\").height - 60, width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\n                <Switch>\n                  <Route path=\"/log\">\n                    <LogScreen />\n                  </Route>\n                  <Route path=\"/goals\">\n                    <GoalsScreen />\n                  </Route>\n                  <Route path=\"/settings\">\n                    <SettingsScreen />\n                  </Route>\n                  <Route path=\"/auth\">\n                    <AuthScreen />\n                  </Route>\n                  <Route path=\"/\">\n                    <TimerScreen />\n                  </Route>\n                </Switch>\n              </View>\n              {currentUser === null\n                ? <Redirect to=\"/auth\" />\n                : <Redirect to=\"/\" />\n              }\n              {currentUser !== null ? (\n                <View style={{\n                  borderTop: \"1px solid rgb(38,38,38)\",\n                  width: \"100%\",\n                  position: \"absolute\",\n                  bottom: 0,\n                  backgroundColor: \"black\",\n                  height: 60,\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}>\n                  <View style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                  }}>\n                    <Link to={`log${window.location.search}`}>\n                      <View style={{ height: \"100%\", paddingHorizontal: 10, width: 80 }}>\n                        <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                          Log\n                        </Text>\n                      </View>\n                    </Link>\n                    <Link to={`/${window.location.search}`}>\n                      <View style={{ height: \"100%\", paddingHorizontal: 10, width: 80 }}>\n                        <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                          Focus\n                        </Text>\n                      </View>\n                    </Link>\n                    <Link to={`goals${window.location.search}`}>\n                      <View style={{ height: \"100%\", paddingHorizontal: 10, width: 80 }}>\n                        <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                          Goals\n                        </Text>\n                      </View>\n                    </Link>\n                    <Link to={`settings${window.location.search}`}>\n                      <View style={{ height: \"100%\", paddingHorizontal: 10, width: 80 }}>\n                        <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                          Settings\n                        </Text>\n                      </View>\n                    </Link>\n                  </View>\n                </View>\n              ) : null}\n            </Router>\n          </div>\n        </div>\n      </AppContext.Provider>\n    );\n  };\n\n  _setCurrentUser = currentUser => {\n    if (currentUser && currentUser.email) {\n      this.setState({ currentUser: currentUser.email });\n      this.service.setCurrentUser(currentUser);\n    } else {\n      this.setState({ currentUser: null });\n    }\n  };\n}\n\nexport default App;\n","export { AuthScreen } from \"./auth-screen-container\";","import React from \"react\";\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { ErrorMessage } from \"./auth-error-messages\";\n\nexport class SignupScreenRenderer extends React.Component {\n  state = {\n    isSignup: true,\n    email: null,\n    password: null,\n    repeatPassword: null,\n    errorMessage: \"\"\n  };\n\n  static getDerivedStateFromProps(props) {\n    const { error } = props;\n    if (error) {\n      return { errorMessage: error };\n    }\n    return null;\n  }\n\n  render() {\n    const { email, isSignup, errorMessage } = this.state;\n    return (\n      <View style={{ width: \"100%\", maxWidth: 267 }}>\n        <Text style={styles.appTitle}>TimeBlocks</Text>\n        <Text style={styles.subText}>\n          {isSignup\n            ? \"Create a new account\"\n            : \"Login to your account\"\n          }\n        </Text>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Email address\"\n          value={email}\n          onChange={this._onEmailChange}\n          autoFocus\n          keyboardType={\"email-address\"}\n        />\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Password\"\n          onChange={this._onPasswordChange}\n          autoCompleteType=\"password\"\n          secureTextEntry\n        />\n        {isSignup && (\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"Repeat password\"\n            onChange={this._onRepeatPasswordChange}\n            autoCompleteType=\"password\"\n            secureTextEntry\n          />\n        )}\n        <View style={{ height: 30 }}>\n          <Text style={styles.errorMessage}>\n            {errorMessage}\n          </Text>\n        </View>\n        {this._renderButtons()}\n      </View>\n    );\n  }\n\n  _renderButtons = () => this.state.isSignup\n    ? this._renderSignupButtons()\n    : this._renderSigninButtons();\n\n  _renderSignupButtons = () => (\n    <View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={this._onSignup}\n      >\n        <Text style={styles.buttonText}>Create Account</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.subButton}\n        onPress={() => this.setState({ isSignup: !this.state.isSignup })}\n      >\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  _renderSigninButtons = () => (\n    <View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={this._onSignin}\n      >\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.subButton}\n        onPress={() => this.setState({ isSignup: !this.state.isSignup })}\n      >\n        <Text style={styles.buttonText}>Create Account</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  _onSignup = () => {\n    const { onSignup } = this.props;\n    const { email, password, repeatPassword } = this.state;\n    if (!onSignup) {\n      return this.setState({ errorMessage: ErrorMessage.Unexpected });\n    }\n    if (password !== repeatPassword) {\n      return this.setState({ errorMessage: ErrorMessage.PasswordMismatch });\n    }\n    onSignup(email, password);\n    this.setState({ errorMessage: \"\" });\n  };\n\n  _onSignin = () => {\n    const { onSignin } = this.props;\n    const { email, password } = this.state;\n    if (!onSignin) {\n      return this.setState({ errorMessage: ErrorMessage.Unexpected });\n    }\n    onSignin(email, password);\n    this.setState({ errorMessage: \"\" });\n  };\n\n  _onEmailChange = e => {\n    if (e && e.target && e.target.value) {\n      this.setState({ email: e.target.value });\n    }\n    this.setState({ errorMessage: \"\" });\n  };\n\n  _onPasswordChange = e => {\n    if (e && e.target && e.target.value) {\n      this.setState({ password: e.target.value });\n    }\n    this.setState({ errorMessage: \"\" });\n  };\n\n  _onRepeatPasswordChange = e => {\n    if (e && e.target) {\n      this.setState({ repeatPassword: e.target.value });\n    }\n    this.setState({ errorMessage: \"\" });\n  };\n}\n\nconst styles = StyleSheet.create({\n  appTitle: {\n    color: \"white\",\n    fontSize: 30,\n    marginTop: 70,\n    marginBottom: 30\n  },\n  buttonText: {\n    color: \"white\"\n  },\n  subText: {\n    color: \"rgb(153, 153, 153)\"\n  },\n  textInput: {\n    color: \"white\",\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    marginTop: 20,\n    border: \"1px solid rgb(38,38,38)\"\n  },\n  button: {\n    fontSize: 16,\n    marginTop: 10,\n    paddingVertical: 10,\n    backgroundColor: \"rgb(209,63,87)\"\n  },\n  subButton: {\n    fontSize: 14,\n    marginTop: 10,\n    paddingVertical: 10\n  },\n  errorMessage: {\n    color: \"rgb(209,63,87)\",\n    marginTop: 10\n  }\n})\n","import React from \"react\";\n\nexport default class Timer extends React.Component {\n  intervalTimer = null;\n\n  constructor(props) {\n    super(props);\n    const { hours, minutes, seconds } = props;\n    this.state = {\n      hours,\n      minutes,\n      seconds,\n      running: false\n    };\n  }\n\n  componentDidMount = () => {\n    if (!this.intervalTimer) {\n      this.intervalTimer = setInterval(this._onIntervalFire, 1000);\n    }\n  };\n\n  componentWillUnmount = () => clearInterval(this.intervalTimer);\n\n  static getDerivedStateFromProps = ({ hours, minutes, seconds, running, paused }) => {\n    if (!running && !paused) {\n      return {\n        hours,\n        minutes,\n        seconds,\n        running\n      };\n    }\n    return { running };\n  };\n\n  pad(n, z) {\n    z = z || '0';\n    n = n + '';\n    return n.length >= 2 ? n : new Array(2 - n.length + 1).join(z) + n;\n  }\n\n  render() {\n    const { hours, minutes, seconds } = this.state;\n    const commonStyles = {\n      color: \"#ccc\"\n    };\n    return (\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\n        <span style={this.props.small ? { fontSize: 20, ...commonStyles } : { fontSize: 40, ...commonStyles }}>\n          {this.pad(hours)} : {this.pad(minutes)} : {this.pad(seconds)}\n        </span>\n      </div>\n    );\n  }\n\n  _onIntervalFire = () => {\n    const { hours, minutes, seconds, running } = this.state;\n    const { onFinish, isCountUp, onTick } = this.props;\n    if (!running) {\n      return;\n    }\n\n    const result = isCountUp\n      ? countUpOneSecond(hours, minutes, seconds)\n      : countDownOneSecond(hours, minutes, seconds);\n    if (!result) {\n      this.setState({ running: false });\n      onFinish && onFinish();\n    }\n\n    this.setState({\n      hours: result.hours,\n      minutes: result.minutes,\n      seconds: result.seconds\n    }, () => {\n      const { hours, minutes, seconds } = this.state;\n      onTick && onTick(hours, minutes, seconds);\n    });\n  }\n};\n\nfunction countDownOneSecond (hours, minutes, seconds) {\n  if (seconds === 0) {\n    if (minutes === 0) {\n      if (hours === 0) {\n        // Count down finished\n        return null;\n      }\n      return {\n        hours: hours - 1,\n        minutes: 59,\n        seconds: 59\n      };\n    }\n    return {\n      hours,\n      minutes: minutes - 1,\n      seconds: 59\n    };\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds: seconds - 1\n  };\n}\n\nfunction countUpOneSecond (hours, minutes, seconds) {\n  if (seconds === 59) {\n    if (minutes === 59) {\n      if (hours === 59) {\n        // Counter finished\n        return null;\n      }\n      return {\n        hours: hours + 1,\n        minutes: 0,\n        seconds: 0\n      };\n    }\n    return {\n      hours,\n      minutes: minutes + 1,\n      seconds: 0\n    };\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds: seconds + 1\n  };\n}\n","import React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport Timer from \"../components/timer\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport GoalUtils from \"../utils/goal-utils\";\nimport { Link , useLocation } from \"react-router-dom\";\n\nconst isDistracted = false;\n\nconst TimerScreenRenderer = ({\n  onTimerTick,\n  onTimerModify,\n  onTimerFinish,\n  onTimerStart,\n  onTimerStop,\n  running,\n  earnedBlocks,\n  currentBlock,\n  goal\n}) => (\n  <View style={{ display: \"flex\", flexDirection: \"column\", maxWidth: 267, backgroundColor: \"black\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <View style={{ paddingHorizontal: 20, border: \"1px solid rgb(38,38,38)\", paddingBottom: 15, paddingTop: 5, minHeight: 177 }}>\n      <Timer\n        hours={1}\n        minutes={0}\n        seconds={0}\n        running={running}\n        paused={isDistracted}\n        onTick={onTimerTick}\n        onModify={onTimerModify}\n        onFinish={onTimerFinish}\n      />\n      <Text style={{ color: \"#999999\", textAlign: \"left\", fontStyle: \"oblique\", fontSize: 13 }}>\n        {\"Focus on your task for 1 hour to earn \"}\n        <Text style={{ color: \"white\", fontStyle: \"oblique\" }}>{\"1 block\"}</Text>\n        <Text style={{ fontWeight: \"bold\", color: \"white\", fontStyle: \"normal\" }}>{\" ( \"}</Text>\n        <View style={{ height: 10, width: 10, backgroundColor: \"rgb(97,196,85)\" }} />\n        <Text style={{ fontWeight: \"bold\", color: \"white\", fontStyle: \"normal\" }}>{\" )\"}</Text>\n      </Text>\n\n      <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginTop: 10 }}>\n        <Text style={{ color: \"#999999\" }}>Today's Goal ( </Text>\n        <Link to={`/goals${useLocation().search}`} style={{ marginBottom: 5 }}>\n          <Text style={{ color: \"rgb(209,63,87)\",  }}>\n            Set\n          </Text>\n        </Link>\n        <Text style={{ color: \"#999999\" }}> )</Text>\n      </View>\n\n      <View style={{ display: \"flex\", height: 50, justifyContent: \"center\", alignItems: \"center\" }}>\n        {\n          (running || isDistracted) || (GoalUtils.getTodaysBlockGoal(goal) !== 0)\n            ? (\n              <TimeBlocks\n                earnedBlocks={earnedBlocks}\n                currentBlock={currentBlock}\n                goal={goal}\n              />\n            ) : (\n              <View style={{ width: \"100%\", justifyContent: \"center\" }}>\n                <Text style={{ color: \"#999999\" }}>No goal</Text>\n              </View>\n            )\n        }\n      </View>\n    </View>\n    <View style={{ marginVertical: 40 }}>\n      <TouchableOpacity\n        style={{ \n          backgroundColor: running || isDistracted\n            ? \"rgb(28,35,54)\"\n            : \"rgb(209,63,87)\",\n          borderRadius: 80,\n          width: 80,\n          height: 80,\n          display: \"flex\",\n          justifyContent: \"center\",\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 1,\n          elevation: 2\n        }}\n        onPress={running || isDistracted ? onTimerStop : onTimerStart}\n      >\n        <Text style={{ fontWeight: \"bold\", marginBottom: 2, color: \"white\" }}>\n          {running || isDistracted ? \"Give up\" : \"Start\"}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  </View>\n);\n\nexport default TimerScreenRenderer;\n\n// _renderDistractionTimer = () => (\n//   <Timer\n//     hours={0}\n//     minutes={0}\n//     seconds={0}\n//     isCountUp\n//     small\n//     onTick={(dHours, dMinutes, dSeconds) => this.setState({ dHours, dMinutes, dSeconds })}\n//     running={isDistracted}\n//     onFinish={this._onDistractionFinish}\n//   />\n// );\n// _renderDistractions = () => (\n//   <div style={{ fontSize: 16 }}>\n//     <p style={{ fontSize: 22 }}>Distractions</p>\n//     {this.state.distractions.length === 0 && <p>No distractions</p>}\n//     {this.state.distractions.map(({ elapsedHours, elapsedMinutes, elapsedSeconds, createdAt }) => (\n//       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n//         <p>At {moment(createdAt).format('hh:mm:ss')}</p>\n//         <p>{elapsedHours} : {elapsedMinutes} : {elapsedSeconds}</p>\n//       </div>\n//     ))}\n//   </div>\n// );\n// _onLogDistraction = () => this.setState({\n//   distractions: [\n//     {\n//       createdAt: moment().toISOString(),\n//       hours: this.state.hours,\n//       minutes: this.state.minutes,\n//       seconds: this.state.seconds,\n//       elapsedHours: 0,\n//       elapsedMinutes: 0,\n//       elapsedSeconds: 0\n//     },\n//     ...this.state.distractions\n//   ]\n// });\n// _onDistractionStart = () => this.setState({ running: false, isDistracted: true });\n// _onDistractionFinish = () => {\n//   const { dHours, dMinutes, dSeconds } = this.state;\n//   this._logDistraction(dHours, dMinutes, dSeconds);\n//   this._resetDistraction();\n//   this.setState({ running: true });\n// };\n// _resetDistraction = () => this.setState({ dHours: 0, dMinutes: 0, dSeconds: 0, isDistracted: false });\n// _logDistraction = (hours, minutes, seconds) => {\n//   const { distractions } = this.state;\n//   const newDistraction = {\n//     createdAt: moment().toISOString(),\n//     hours,\n//     minutes,\n//     seconds,\n//     elapsedHours: hours,\n//     elapsedMinutes: minutes,\n//     elapsedSeconds: seconds\n//   };\n//   this.setState({ distractions: [newDistraction, ...distractions] });\n// };\n","import React from \"react\";\nimport moment from \"moment\";\nimport TimerScreenRenderer from \"./timer-screen-renderer\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport AppContext from \"../app-context\";\n\nclass TimerScreenContainer extends React.Component {\n  state = {\n    hours: 1,\n    minutes: 0,\n    seconds: 0,\n    running: false,\n    isDistracted: false,\n    currentBlock: null,\n    setHours: 1,\n    setMinutes: 0,\n    setSeconds: 0,\n    earnedBlocks: [],\n    goal: null,\n    // Below not used\n    dHours: 0,\n    dMinutes: 0,\n    dSeconds: 0,\n    distractions: [],\n    workdayStartTime: null,\n    workdayEndTime: null\n  };\n\n  componentDidMount() {\n    this._fetchBlocks();\n    this._fetchGoals();\n  }\n\n  render() {\n    const {\n      running,\n      currentBlock,\n      earnedBlocks,\n      goal\n    } = this.state;\n    return (\n      <TimerScreenRenderer\n        onTimerStart={this._startBlock}\n        onTimerStop={() => this._endBlock(false /* completed */, true /* stopped */)}\n        onTimerTick={this._onTimerTick}\n        onTimerModify={this._onTimerModify}\n        onTimerFinish={this._onTimerFinish}\n        running={running}\n        currentBlock={currentBlock}\n        earnedBlocks={earnedBlocks}\n        goal={goal}\n      />\n    );\n  }\n\n  _getNumHourlyBlocksBetweenTimes = (startTime, endTime) => moment.duration(moment(endTime).diff(startTime)).asHours();\n\n  _fetchBlocks = async () => {\n    const { remoteService } = this.props;\n    const { todaysBlocks } = await remoteService.fetchBlocks();\n    if (todaysBlocks) {\n      this.setState({ earnedBlocks: todaysBlocks.filter(block => block.completed) });\n    }\n  };\n\n  _fetchGoals = async () => {\n    const { remoteService } = this.props;\n    const goals = await remoteService.fetchGoals();\n    if (goals && goals.length) {\n      this.setState({ goal: goals[0] });\n    }\n  };\n\n  _startBlock = () => {\n    const { running, isDistracted, distractions } = this.state;\n    if (!isDistracted) {\n      this.setState({\n        running: !running,\n        distractions: !running ? [] : distractions,\n        currentBlock: {\n          hours: 1,\n          minutes: 0,\n          seconds: 0,\n          createdAt: moment().toISOString(),\n          startTime: moment().toISOString(),\n          endTime: null,\n          completed: false\n        }\n      });\n    }\n  };\n\n  _endBlock = (completed = false, stopped = false) => {\n    const {\n      hours,\n      minutes,\n      seconds\n      // setHours\n      // setMinutes,\n      // setSeconds\n    } = this.state;\n    this.setState({ running: false, isDistracted: false });\n    this._logTimeBlock(\n      hours,\n      59 - minutes,\n      59 - seconds,\n      completed,\n      stopped\n    );\n  };\n\n  _onTimerTick = (hours, minutes, seconds) => this.setState({\n    hours,\n    minutes,\n    seconds,\n    currentBlock: {\n      ...this.state.currentBlock,\n      hours,\n      minutes,\n      seconds\n    }\n  });\n\n  _onTimerModify = ({ hours, minutes, seconds }) => this.setState({\n    hours,\n    minutes,\n    seconds,\n    setHours: hours,\n    setMinutes: minutes,\n    setSeconds: seconds\n  });\n\n  _onTimerFinish = () => this._endBlock(true /* completed */, false /* stopped */);\n\n  _renderEarnedBlocks = blocks => <TimeBlocks blocks={blocks} />;\n\n  _logTimeBlock = (elapsedHours, elapsedMinutes, elapsedSeconds, completed = false, stopped=false) => {\n    const { setHours, setMinutes, setSeconds, currentBlock, goal } = this.state;\n    const { remoteService } = this.props;\n    if (remoteService) {\n      remoteService.addTimeBlock({\n        ...currentBlock,\n        hours: setHours,\n        minutes: setMinutes,\n        seconds: setSeconds,\n        elapsedHours,\n        elapsedMinutes,\n        elapsedSeconds,\n        goal,\n        endTime: moment().toISOString(),\n        distractions: this.state.distractions,\n        completed,\n        stopped\n      });\n    }\n  };\n\n  // _renderDistractions = () => (\n  //   <div style={{ fontSize: 16 }}>\n  //     <p style={{ fontSize: 22 }}>Distractions</p>\n  //     {this.state.distractions.length === 0 && <p>No distractions</p>}\n  //     {this.state.distractions.map(({ elapsedHours, elapsedMinutes, elapsedSeconds, createdAt }) => (\n  //       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n  //         <p>At {moment(createdAt).format('hh:mm:ss')}</p>\n  //         <p>{elapsedHours} : {elapsedMinutes} : {elapsedSeconds}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  // _onStartTimeChange = workdayStartTime => this.setState({ workdayStartTime });\n  // _onEndTimeChange = workdayEndTime => this.setState({ workdayEndTime });\n}\n\nexport const TimerScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <TimerScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n);\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  TouchableHighlight\n} from \"react-native\";\n\nconst GoalMode = {\n  Everyday: \"Everyday\",\n  WeekdayWeekEnd: \"WeekdayWeekend\",\n  Custom: \"Custom\"\n};\n\nconst Days = {\n  \"mon\": \"Monday\",\n  \"tue\": \"Tuesday\",\n  \"wed\": \"Wednesday\",\n  \"thu\": \"Tuesday\",\n  \"fri\": \"Friday\",\n  \"sat\": \"Saturday\",\n  \"sun\": \"Sunday\"\n};\n\nconst BlurContent = ({ blur, children }) => (\n  <View style={{ opacity: blur ? 0.3 : 1 }}>\n    {children}\n  </View>\n);\n\n\nexport class GoalsScreenRenderer extends React.Component {\n  render() {\n    const { goalMode, goal, onChangeGoalMode, onSaveGoal } = this.props;\n    return (\n      <TouchableWithoutFeedback onPress={() => onChangeGoalMode(null)}>\n        <View style={{ width: \"100%\" }}>\n          <Text style={{ color: \"rgb(204, 204, 204)\", fontSize: 30, textAlign: \"center\", marginVertical: 15, marginHorizontal: 40, fontWeight: \"bold\" }}>\n            Log\n          </Text>\n          <View style={{ paddingTop: 10, width: \"100%\", display: \"flex\", alignItems: \"center\", marginHorizontal: 5 }}>\n            <View style={{ maxWidth: 267, height: \"100%\", width: \"100%\" }}>\n              <BlurContent blur={goalMode !== GoalMode.Everyday}>\n                <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Everyday)}>\n                  <View style={styles.form}>\n                    <View style={styles.formLabel}>\n                      <Text style={styles.text}>Everyday</Text>\n                    </View>\n                    <View style={styles.formInput}>\n                      {this._renderTextInput(\n                        goal.everyday,\n                        GoalMode.Everyday,\n                        e => this._onSetValue(e, \"everyday\"),\n                        true /* shouldAutoFocus */\n                      )}\n                    </View>\n                    <TouchableHighlight\n                      style={styles.clearButton}\n                      onPress={this._onClearEveryday}\n                    >\n                      <Text style={styles.text}>Clear</Text>\n                    </TouchableHighlight>\n                  </View>\n                </TouchableWithoutFeedback>\n              </BlurContent>\n\n              <View style={{ marginTop: 10, marginBottom: 10 }}>\n                <Text>OR</Text>\n              </View>\n\n              <BlurContent blur={goalMode !== GoalMode.WeekdayWeekEnd}>\n                <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.WeekdayWeekEnd)}>\n                  <View>\n                    <View style={styles.form}>\n                      <View style={styles.formLabel}>\n                        <Text style={styles.text}>Weekdays</Text>\n                      </View>\n                      <View style={styles.formInput}>\n                        {this._renderTextInput(\n                          goal.weekdays,\n                          GoalMode.WeekdayWeekEnd,\n                          e => this._onSetValue(e, \"weekdays\"),\n                          true /* shouldAutoFocus */\n                        )}\n                      </View>\n                      <TouchableHighlight\n                        style={styles.clearButton}\n                        onPress={this._onClearWeekdays}\n                      >\n                        <Text style={styles.text}>Clear</Text>\n                      </TouchableHighlight>\n                    </View>\n                    <View style={styles.form}>\n                      <View style={styles.formLabel}>\n                        <Text style={styles.text}>Weekends</Text>\n                      </View>\n                      <View style={styles.formInput}>\n                        {this._renderTextInput(\n                          goal.weekends,\n                          GoalMode.WeekdayWeekEnd,\n                          e => this._onSetValue(e, \"weekends\")\n                        )}\n                      </View>\n                      <TouchableHighlight\n                        style={styles.clearButton}\n                        onPress={this._onClearWeekends}\n                      >\n                        <Text style={styles.text}>Clear</Text>\n                      </TouchableHighlight>\n                    </View>\n                  </View>\n                </TouchableWithoutFeedback>\n              </BlurContent>\n\n              <View style={{ width: \"100%\", height: 1, borderBottom: \"1px solid black\", marginTop: 10 }} />\n\n              <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Custom)}>\n                <View>\n                  <View style={{ display: \"flex\", flexDirection: \"row\", marginVertical: 10, justifyContent: \"center\", position: \"relative\" }}>\n                    <Text style={styles.text}>Set Goals</Text>\n                    <TouchableHighlight\n                      style={{ position: \"absolute\", right: 0, width: \"20%\" }}\n                      onPress={this._onClearCustom}\n                    >\n                      <Text style={styles.text}>Clear</Text>\n                    </TouchableHighlight>\n                  </View>\n                  <View>\n                  {this._renderDay(\"mon\", true)}\n                  {this._renderDay(\"tue\")}\n                  {this._renderDay(\"wed\")}\n                  {this._renderDay(\"thu\")}\n                  {this._renderDay(\"fri\")}\n                  {this._renderDay(\"sat\")}\n                  {this._renderDay(\"sun\")}\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n\n              <TouchableHighlight style={{ marginVertical: 30 }} onPress={onSaveGoal}>\n                <View style={{ backgroundColor: \"rgb(209,63,87)\", paddingVertical: 5 }}>\n                  <Text style={styles.text}>Save</Text>\n                </View>\n              </TouchableHighlight>\n            </View>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n\n  _onClearEveryday = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearEveryday: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      everyday: null,\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null,\n      sat: null,\n      sun: null\n    });\n  }\n\n  _onClearWeekdays = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearWeekdays: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      weekdays: null,\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null\n    });\n  }\n\n  _onClearWeekends = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearWeekends: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      weekends: null,\n      sat: null,\n      sun: null\n    });\n  }\n\n  _onClickSection = goalMode => {\n    const { onChangeGoalMode } = this.props;\n    if (!onChangeGoalMode) {\n      return;\n    }\n    onChangeGoalMode(goalMode);\n  }\n\n  _onClearCustom = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearCustom: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoal({\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null,\n      sat: null,\n      sun: null\n    });\n    onChangeGoalMode(null);\n  }\n\n  _renderDay = (day, autoFocusInput = false) => {\n    const { goal } = this.props;\n    return (\n      <View style={styles.form}>\n        <View style={styles.formLabel}>\n          <Text style={styles.text}>{Days[day]}</Text>\n        </View>\n        <View style={styles.formInput}>\n          {this._renderTextInput(\n            goal[day],\n            GoalMode.Custom,\n            e => this._onSetValue(e, day),\n            autoFocusInput\n          )}\n        </View>\n        <View style={styles.clearButton} />\n      </View>\n    )\n  };\n\n  _renderTextInput = (value, goalMode, onChange, shouldAutoFocus = false) => (\n    goalMode === this.props.goalMode\n      ? <TextInput value={value} style={styles.formTextInput} onChange={onChange} autoFocus={shouldAutoFocus} keyboardType={\"numeric\"} />\n      : <Text style={styles.text}>{value !== null ? value : \"Not set\"}</Text>\n  );\n\n  _onSetValue = (event, formType) => {\n    const { onChangeGoal } = this.props;\n    if (!onChangeGoal) {\n      return;\n    }\n    const value = event && event.target && event.target.value;\n    if (!formType) {\n      return;\n    }\n    const parsedValue = value.length === 0 || isNaN(parseInt(value)) ? null : parseInt(value);\n    switch (formType) {\n      case \"everyday\":\n        onChangeGoal({\n          everyday: parsedValue,\n          mon: parsedValue,\n          tue: parsedValue,\n          wed: parsedValue,\n          thu: parsedValue,\n          fri: parsedValue,\n          sat: parsedValue,\n          sun: parsedValue\n        });\n        break;\n      case \"weekdays\":\n        onChangeGoal({\n          weekdays: parsedValue,\n          mon: parsedValue,\n          tue: parsedValue,\n          wed: parsedValue,\n          thu: parsedValue,\n          fri: parsedValue\n        });\n        break;\n      case \"weekends\":\n        onChangeGoal({\n          weekends: parsedValue,\n          sat: parsedValue,\n          sun: parsedValue\n        });\n        break;\n      default:\n        onChangeGoal({ [formType]: parsedValue });\n        break;\n    }\n  }\n\n  _unsetAllWithOverride = override => this.props.onChangeGoal && this.props.onChangeGoal({\n    everyday: null,\n    weekdays: null,\n    weekends: null,\n    ...override || {}\n  });\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: 267,\n    height: \"100%\",\n    backgroundColor: \"black\",\n    paddingVertical: 20\n  },\n  titleText: {\n    color: \"white\",\n    fontSize: 26,\n    marginVertical: 10\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  formLabel: {\n    width: \"50%\",\n    textAlign: \"left\",\n    paddingLeft: 10\n  },\n  formInput: {\n    width: \"30%\",\n    paddingRight: 10\n  },\n  clearButton: {\n    width: \"20%\"\n  },\n  formTextInput: {\n    color: \"white\",\n    textAlign: \"center\",\n    borderBottom: \"1px solid black\"\n  },\n  text: {\n    color: \"white\"\n  }\n});\n\n// return (\n//   <TouchableWithoutFeedback onPress={() => onChangeGoalMode(null)}>\n//     <View style={styles.container}>\n//       <Text style={styles.titleText}>Goals</Text>\n//       <BlurContent blur={goalMode !== GoalMode.Everyday}>\n//         <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Everyday)}>\n//           <View style={styles.form}>\n//             <View style={styles.formLabel}>\n//               <Text style={styles.text}>Everyday</Text>\n//             </View>\n//             <View style={styles.formInput}>\n//               {this._renderTextInput(\n//                 goal.everyday,\n//                 GoalMode.Everyday,\n//                 e => this._onSetValue(e, \"everyday\"),\n//                 true /* shouldAutoFocus */\n//               )}\n//             </View>\n//             <TouchableHighlight\n//               style={styles.clearButton}\n//               onPress={this._onClearEveryday}\n//             >\n//               <Text style={styles.text}>Clear</Text>\n//             </TouchableHighlight>\n//           </View>\n//         </TouchableWithoutFeedback>\n//       </BlurContent>\n\n//       <View style={{ marginTop: 10, marginBottom: 10 }}>\n//         <Text>OR</Text>\n//       </View>\n\n//       <BlurContent blur={goalMode !== GoalMode.WeekdayWeekEnd}>\n//         <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.WeekdayWeekEnd)}>\n//           <View>\n//             <View style={styles.form}>\n//               <View style={styles.formLabel}>\n//                 <Text style={styles.text}>Weekdays</Text>\n//               </View>\n//               <View style={styles.formInput}>\n//                 {this._renderTextInput(\n//                   goal.weekdays,\n//                   GoalMode.WeekdayWeekEnd,\n//                   e => this._onSetValue(e, \"weekdays\"),\n//                   true /* shouldAutoFocus */\n//                 )}\n//               </View>\n//               <TouchableHighlight\n//                 style={styles.clearButton}\n//                 onPress={this._onClearWeekdays}\n//               >\n//                 <Text style={styles.text}>Clear</Text>\n//               </TouchableHighlight>\n//             </View>\n//             <View style={styles.form}>\n//               <View style={styles.formLabel}>\n//                 <Text style={styles.text}>Weekends</Text>\n//               </View>\n//               <View style={styles.formInput}>\n//                 {this._renderTextInput(\n//                   goal.weekends,\n//                   GoalMode.WeekdayWeekEnd,\n//                   e => this._onSetValue(e, \"weekends\")\n//                 )}\n//               </View>\n//               <TouchableHighlight\n//                 style={styles.clearButton}\n//                 onPress={this._onClearWeekends}\n//               >\n//                 <Text style={styles.text}>Clear</Text>\n//               </TouchableHighlight>\n//             </View>\n//           </View>\n//         </TouchableWithoutFeedback>\n//       </BlurContent>\n\n//       <View style={{ width: \"100%\", height: 1, borderBottom: \"1px solid black\", marginTop: 10 }} />\n\n//       <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Custom)}>\n//         <View>\n//           <View style={{ display: \"flex\", flexDirection: \"row\", marginVertical: 10, justifyContent: \"center\", position: \"relative\" }}>\n//             <Text style={styles.text}>Set Goals</Text>\n//             <TouchableHighlight\n//               style={{ position: \"absolute\", right: 0, width: \"20%\" }}\n//               onPress={this._onClearCustom}\n//             >\n//               <Text style={styles.text}>Clear</Text>\n//             </TouchableHighlight>\n//           </View>\n//           <View>\n//           {this._renderDay(\"mon\", true)}\n//           {this._renderDay(\"tue\")}\n//           {this._renderDay(\"wed\")}\n//           {this._renderDay(\"thu\")}\n//           {this._renderDay(\"fri\")}\n//           {this._renderDay(\"sat\")}\n//           {this._renderDay(\"sun\")}\n//           </View>\n//         </View>\n//       </TouchableWithoutFeedback>\n\n//       <TouchableHighlight style={{ marginVertical: 30 }} onPress={onSaveGoal}>\n//         <View style={{ backgroundColor: \"rgb(209,63,87)\", paddingVertical: 5 }}>\n//           <Text style={styles.text}>Save</Text>\n//         </View>\n//       </TouchableHighlight>\n//     </View>\n//   </TouchableWithoutFeedback>\n// )\n","import React from \"react\";\nimport AppContext from \"../app-context\";\nimport { GoalsScreenRenderer } from \"./goals-renderer\";\n\nclass GoalsScreenContainer extends React.Component {\n  state = {\n    goals: [],\n    id: null,\n    goalMode: null,\n    everyday: null,\n    weekdays: null,\n    weekends: null,\n    mon: null,\n    tue: null,\n    wed: null,\n    thu: null,\n    fri: null,\n    sat: null,\n    sun: null\n  };\n\n  componentDidMount() {\n    this._fetchGoals();\n  }\n\n  render = () => {\n    const {\n      goalMode,\n      everyday,\n      weekdays,\n      weekends,\n      mon,\n      tue,\n      wed,\n      thu,\n      fri,\n      sat,\n      sun\n    } = this.state;\n    return (\n      <GoalsScreenRenderer\n        goalMode={goalMode}\n        goal={{\n          everyday,\n          weekdays,\n          weekends,\n          mon,\n          tue,\n          wed,\n          thu,\n          fri,\n          sat,\n          sun\n        }}\n        onChangeGoal={this._onChangeGoal}\n        onChangeGoalMode={this._onChangeGoalMode}\n        onSaveGoal={this._onSaveGoal}\n      />\n    );\n  }\n\n  _getCurrentGoal = () => ({\n    id: this.state.id,\n    everyday: this.state.everyday,\n    weekdays: this.state.weekdays,\n    weekends: this.state.weekends,\n    mon: this.state.mon,\n    tue: this.state.tue,\n    wed: this.state.wed,\n    thu: this.state.thu,\n    fri: this.state.fri,\n    sat: this.state.sat,\n    sun: this.state.sun\n  });\n\n  _onSaveGoal = () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      if (this.state.id) {\n        remoteService.updateGoal(this._getCurrentGoal());\n      } else {\n        remoteService.addGoal(this._getCurrentGoal());\n      }\n    }\n  }\n\n  _fetchGoals = async () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      const goals = await remoteService.fetchGoals();\n      if (goals && goals.length > 0) {\n        console.log(\">>>\", goals[0])\n        this.setState({ goals, ...goals[0] });\n      }\n    }\n  }\n\n  _onChangeGoalMode = goalMode => this.setState({ goalMode });\n\n  _onChangeGoal = goal => this.setState({ ...goal });\n}\n\nexport const GoalsScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <GoalsScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n);\n","import React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\n\nexport const SettingsScreenRenderer = ({ onSignOut }) => (\n  <View style={styles.container}>\n    <Text style={styles.screenTitle}>Settings</Text>\n    <View style={styles.settingItem}>\n      <View style={styles.centeredSetting}>\n        <TouchableOpacity onPress={onSignOut}>\n          <View><Text style={styles.text}>Sign out</Text></View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    maxWidth: 267\n  },\n  screenTitle: {\n    color: \"rgb(204, 204, 204)\",\n    fontSize: 30,\n    textAlign: \"center\",\n    marginVertical: 15,\n    marginHorizontal: 40,\n    fontWeight: \"bold\"\n  },\n  centeredSetting: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  },\n  text: {\n    color: \"white\"\n  }\n});\n","import React from \"react\";\nimport AppContext from \"../app-context\";\nimport { SettingsScreenRenderer } from \"./settings-screen-renderer\";\n\nclass SettingsScreenContainer extends React.Component {\n  render = () => <SettingsScreenRenderer onSignOut={this._onSignOut} />;\n\n  _onSignOut = () => {\n    const { authService } = this.props;\n    if (authService) {\n      authService.signOut();\n    }\n  }\n}\n\nexport const SettingsScreen = props => (\n  <AppContext.Consumer>\n    {({ authService }) => <SettingsScreenContainer {...props} authService={authService} />}\n  </AppContext.Consumer>\n);","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text, Dimensions } from \"react-native\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport GoalUtils from \"../utils/goal-utils\";\n\nconst LogItem = ({ day, goal }) => {\n  const earnedBlocks = day.blocks.filter(block => block.completed);\n  const earnedBlocksCount = earnedBlocks.length * 1.0\n  const goalCount = GoalUtils.getTodaysBlockGoal(goal);\n  const goalPercent = day.blocks && day.blocks.length > 0\n    ? (earnedBlocksCount / (goalCount > 0 ? goalCount : 1)) * 100\n    : 0;\n  return (\n    <View style={{ height: 90, borderBottom: \"1px solid rgb(38,38,38)\", paddingTop: 10, width: \"100%\", display: \"flex\", alignItems: \"center\", marginHorizontal: 5 }}>\n      <View style={{ maxWidth: 267, height: \"100%\", width: \"100%\" }}>\n        <View style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}>\n          <Text style={{ color: \"white\", fontSize: 17 }}>{moment(day.date).format(\"D MMMM YYYY\")}</Text>\n          <Text style={{ color: \"white\", fontSize: 10 }}>Sessions: {day.blocks && day.blocks.length > 0 ? day.blocks.length : \"N/A\"}</Text>\n        </View>\n        <View style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\", justifyContent: \"space-between\", marginTop: 10 }}>\n          <View style={{ display: \"flex\", width: \"75%\" }}>\n            <TimeBlocks earnedBlocks={earnedBlocks} goal={goal} />\n          </View>\n          <View style={{ display: \"flex\", alignItems: \"center\", marginLeft: 5 }}>\n            <Text style={{ color: \"white\", fontSize: 16 }}>{goalPercent.toFixed(0)}%</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport const LogScreenRenderer = ({ days, goal }) => (\n  <View style={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: Dimensions.get(\"window\").height - 60,\n    overflow: \"scroll\",\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    paddingBottom: 60\n  }}>\n    {days.map(day => <LogItem day={day} goal={goal} />)}\n  </View>\n);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text } from \"react-native\";\nimport AppContext from \"../app-context\";\nimport { LogScreenRenderer } from \"./log-screen-renderer\";\n\nclass LogScreenContainer extends React.Component {\n  state = {\n    startedBlocks: [],\n    earnedBlocks: [],\n    goal: null\n  };\n\n  async componentDidMount() {\n    this._fetchBlocks();\n    this._fetchGoal();\n  }\n\n  render() {\n    const { startedBlocks, earnedBlocks, goal } = this.state;\n    return (\n      <View style={{ width: \"100%\" }}>\n        <Text style={{ color: \"rgb(204, 204, 204)\", fontSize: 30, textAlign: \"center\", marginVertical: 15, marginHorizontal: 40, fontWeight: \"bold\" }}>\n          Log\n        </Text>\n        <LogScreenRenderer\n          days={this._getDays([...startedBlocks, ...earnedBlocks])}\n          goal={goal}\n        />\n      </View>\n    );\n  }\n\n  _fetchBlocks = async () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      const { startedBlocks, earnedBlocks } = await remoteService.fetchBlocks();\n      this.setState({ startedBlocks, earnedBlocks });\n    }\n  }\n\n  _fetchGoal = async () => {\n    const { remoteService } = this.props;\n    const goals = await remoteService.fetchGoals();\n    if (goals && goals.length > 0) {\n      this.setState({ goal: goals[0] });\n    }\n  };\n\n  _getDays = blocks => {\n    const days = {};\n    let startDate = null;\n    let endDate = null;\n\n    for (const block of blocks) {\n      const dayMoment = moment(block.startTime);\n      const dayKey = dayMoment.format(\"DD MM YYYY\");\n      const day = days[dayKey];\n\n      // Group blocks by day\n      if (day) {\n        day.blocks.push(block);\n      } else {\n        days[dayKey] = { date: block.startTime, blocks: [block] };\n      }\n\n      // Set lowest and highest days\n      if (!startDate) {\n        startDate = block.startTime;\n      }\n      if (!endDate) {\n        endDate = block.startTime;\n      }\n      if (dayMoment.isBefore(moment(startDate))) {\n        startDate = block.startTime;\n      }\n      if (dayMoment.isAfter(moment(startDate))) {\n        endDate = block.startTime;\n      }\n    }\n\n    const sortedDates = Object.keys(days).sort((a,b) => moment(a, \"DD MM YYY\") - moment(b, \"DD MM YYYY\"));\n    return sortedDates.map(date => days[date]);\n  }\n\n  _getContiguousDays = (startDate, endDate) => {\n    const dayList = [];\n    let currentDay = moment(startDate);\n    while (currentDay.format(\"DD MM YYYY\") !== moment(endDate).format(\"DD MM YYYY\")) {\n      dayList.push(currentDay.format(\"DD MM YYYY\"));\n      currentDay = currentDay.add(1, \"days\");\n    }\n    return dayList;\n  }\n}\n\nexport const LogScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <LogScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppRegistry } from 'react-native';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nAppRegistry.registerComponent('App', () => App);\n\nAppRegistry.runApplication('App', {\n  initialProps: {},\n  rootTag: document.getElementById('root')\n});\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}