{"version":3,"sources":["app-context.js","components/time-blocks.jsx","utils/goal-utils.js","App.js","components/timer.jsx","timer-screen/timer-screen-renderer.jsx","timer-screen/timer-screen-container.jsx","log-screen/log-screen-renderer.jsx","log-screen/log-screen-container.jsx","goals-screen/goals-renderer.jsx","goals-screen/goals-container.jsx","index.js"],"names":["AppContext","React","createContext","BlockProgress","progressPercent","marks","style","position","height","width","marginRight","marginTop","backgroundColor","Math","max","ceil","map","mark","left","top","getBlockProgress","block","hours","minutes","seconds","TimeBlock","isGoal","completed","TimeBlocks","earnedBlocks","currentBlock","goal","blockGoal","GoalUtils","getTodaysBlockGoal","length","display","flexWrap","flexDirection","Array","from","parsedGoal","everyday","mon","tue","wed","thu","fri","sat","sun","weekdays","weekends","dayOfWeek","moment","format","toLowerCase","parsedGoalBlocks","parseInt","isNaN","FIREBASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","firebase","global","render","Provider","value","remoteService","fetchBlocks","_fetchBlocks","fetchGoals","_fetchGoals","updateGoal","_updateGoal","addTimeBlock","_addTimeBlock","className","basename","Dimensions","get","alignItems","path","borderTop","bottom","justifyContent","to","window","location","search","paddingHorizontal","color","fontSize","a","dateFormat","blocks","collection","firestore","username","_getUsername","where","forEach","doc","push","id","data","console","log","todaysBlocks","filter","startTime","isSame","startedBlocks","goals","add","update","URLSearchParams","this","initializeApp","analytics","Component","Timer","props","intervalTimer","componentDidMount","setInterval","_onIntervalFire","componentWillUnmount","clearInterval","state","running","onFinish","isCountUp","onTick","result","countUpOneSecond","countDownOneSecond","setState","n","z","join","commonStyles","marginBottom","small","pad","getDerivedStateFromProps","paused","TimerScreenRenderer","onTimerTick","onTimerModify","onTimerFinish","onTimerStart","onTimerStop","View","maxWidth","border","paddingBottom","paddingTop","minHeight","onModify","Text","textAlign","fontStyle","fontWeight","useLocation","marginVertical","TouchableOpacity","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","onPress","TimerScreenContainer","isDistracted","setHours","setMinutes","setSeconds","dHours","dMinutes","dSeconds","distractions","workdayStartTime","workdayEndTime","_getNumHourlyBlocksBetweenTimes","endTime","duration","diff","asHours","_startBlock","createdAt","toISOString","_endBlock","stopped","_logTimeBlock","_onTimerTick","_onTimerModify","_onTimerFinish","_renderEarnedBlocks","elapsedHours","elapsedMinutes","elapsedSeconds","TimerScreen","Consumer","LogItem","day","earnedBlocksCount","goalCount","goalPercent","borderBottom","marginHorizontal","date","marginLeft","toFixed","LogScreenRenderer","days","overflow","LogScreenContainer","_fetchGoal","_getDays","startDate","endDate","dayMoment","dayKey","isBefore","isAfter","Object","keys","sort","b","_getContiguousDays","dayList","currentDay","LogScreen","GoalMode","Days","BlurContent","blur","children","opacity","GoalsScreenRenderer","_onClearEveryday","onChangeGoal","onChangeGoalMode","_onClearWeekdays","_onClearWeekends","_onClickSection","goalMode","_onClearCustom","_renderDay","autoFocusInput","styles","form","formLabel","text","formInput","_renderTextInput","e","_onSetValue","clearButton","onChange","shouldAutoFocus","TextInput","formTextInput","autoFocus","keyboardType","event","formType","target","parsedValue","_unsetAllWithOverride","override","onSaveGoal","TouchableWithoutFeedback","TouchableHighlight","right","paddingVertical","StyleSheet","create","container","titleText","paddingLeft","paddingRight","GoalsScreenContainer","_onChangeGoal","_onChangeGoalMode","_onSaveGoal","_getCurrentGoal","GoalsScreen","AppRegistry","registerComponent","runApplication","initialProps","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.b47924a8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext({});\nexport default AppContext;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport GoalUtils from \"../utils/goal-utils\";\n\nconst BlockProgress = ({ progressPercent, marks }) => (\n  <div style={{ position: \"relative\", height: 13, width: 13, marginRight: 2, marginTop: 2, backgroundColor: \"gray\" }}>\n    <div style={{ width: `${Math.max(Math.ceil(progressPercent), 3)}%`, backgroundColor: \"rgb(97,196,85)\", height: \"100%\" }} />\n    {marks && marks.map(mark => (\n      <div style={{ position: \"absolute\", left: `${mark}%`, height: \"100%\", width: 2, top: 0, backgroundColor: \"red\" }} />  \n    ))}\n  </div>\n);\n\nconst getBlockProgress = block => 100 - (block.hours * 60 + block.minutes + (block.seconds/60.0))/60.0 * 100;\n\nconst TimeBlock = ({ block, isGoal }) => block && !block.completed\n  ? <BlockProgress progressPercent={getBlockProgress(block)} isGoal={isGoal} />\n  : (\n    <View style={{\n      width: 13,\n      height: 13,\n      marginRight: 2,\n      marginTop: 2,\n      backgroundColor: block\n        ? \"rgb(97,196,85)\"\n        : \"gray\"\n    }} />\n  );\n\nconst TimeBlocks = ({ earnedBlocks, currentBlock, goal }) => {\n  const blockGoal = Math.max(\n    GoalUtils.getTodaysBlockGoal(goal) - earnedBlocks.length - (currentBlock ? 1 : 0),\n    0\n  );\n  return (\n    <View style={{ display: \"flex\", flexWrap: \"wrap\", flexDirection: \"row\" }}>\n      {earnedBlocks.map(block => <TimeBlock block={block} />)}\n      {currentBlock && <TimeBlock block={currentBlock} isGoal={blockGoal - 1 > 0} />}\n      {Array.from(new Array(blockGoal)).map(() => <TimeBlock isGoal />)}\n    </View>\n  );\n};\n\nexport default TimeBlocks;\n","import moment from \"moment\";\n\nexport default class GoalUtils {\n  static getTodaysBlockGoal(goal) {\n    if (!goal) {\n      return 0;\n    }\n    let parsedGoal = goal;\n    if (goal.everyday !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        mon: goal.everyday,\n        tue: goal.everyday,\n        wed: goal.everyday,\n        thu: goal.everyday,\n        fri: goal.everyday,\n        sat: goal.everyday,\n        sun: goal.everyday\n      };\n    }\n    if (goal.weekdays !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        mon: goal.weekdays,\n        tue: goal.weekdays,\n        wed: goal.weekdays,\n        thu: goal.weekdays,\n        fri: goal.weekdays\n      };\n    }\n    if (goal.weekends !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        sat: goal.weekends,\n        sun: goal.weekends\n      }\n    }\n    const dayOfWeek = moment().format(\"ddd\").toLowerCase();\n    const parsedGoalBlocks = parseInt(parsedGoal[dayOfWeek]);\n    return isNaN(parsedGoalBlocks) ? 0 : parsedGoalBlocks;\n  }\n}\n","import React from \"react\";\nimport { View, Text, Dimensions }from \"react-native\";\nimport moment from \"moment\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport { TimerScreen } from \"./timer-screen\";\nimport { GoalsScreen } from \"./goals-screen\";\nimport { LogScreen } from \"./log-screen\";\nimport AppContext from \"./app-context\";\n\nconst FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyCBZrwH6IoMDo-jW2Ydu00z0FJMK3wQdTI\",\n  authDomain: \"timeblocks-bb1cc.firebaseapp.com\",\n  databaseURL: \"https://timeblocks-bb1cc.firebaseio.com\",\n  projectId: \"timeblocks-bb1cc\",\n  storageBucket: \"timeblocks-bb1cc.appspot.com\",\n  messagingSenderId: \"689367456633\",\n  appId: \"1:689367456633:web:6cb0b27d54e4c45f9bada8\",\n  measurementId: \"G-92KBT48GWG\"\n};\n\nclass App extends React.Component {\n  firebase = global.firebase;\n\n  componentWillMount() {\n    // Initialize Firebase\n    this.firebase.initializeApp(FIREBASE_CONFIG);\n    this.firebase.analytics();\n  }\n\n  render = () => (\n    <AppContext.Provider value={{\n      remoteService: {\n        fetchBlocks: this._fetchBlocks,\n        fetchGoals: this._fetchGoals,\n        updateGoal: this._updateGoal,\n        addTimeBlock: this._addTimeBlock\n      }\n    }}>\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Router basename=\"time-blocks\">\n            <View style={{ height: Dimensions.get(\"window\").height - 60, width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\n              <Switch>\n                <Route path=\"/log\">\n                  <LogScreen />\n                </Route>\n                <Route path=\"/goals\">\n                  <GoalsScreen />\n                </Route>\n                <Route path=\"/\">\n                  <TimerScreen />\n                </Route>\n              </Switch>\n            </View>\n            <View style={{\n              borderTop: \"1px solid rgb(38,38,38)\",\n              width: \"100%\",\n              position: \"absolute\",\n              bottom: 0,\n              backgroundColor: \"black\",\n              height: 60,\n              display: \"flex\",\n              alignItems: \"center\"\n            }}>\n              <View style={{\n                width: \"100%\",\n                height: \"100%\",\n                // maxWidth: 267,\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n              }}>\n                <Link to={`log${window.location.search}`}>\n                  <View style={{ height: \"100%\", paddingHorizontal: 10, width: 70 }}>\n                    <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                      Log\n                    </Text>\n                  </View>\n                </Link>\n                <Link to={`/${window.location.search}`}>\n                  <View style={{ height: \"100%\", paddingHorizontal: 10, width: 70 }}>\n                    <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                      Focus\n                    </Text>\n                  </View>\n                </Link>\n                <Link to={`goals${window.location.search}`}>\n                  <View style={{ height: \"100%\", paddingHorizontal: 10, width: 70 }}>\n                    <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                      Goals\n                    </Text>\n                  </View>\n                </Link>\n              </View>\n            </View>\n          </Router>\n        </div>\n      </div>\n    </AppContext.Provider>\n  );\n\n  _fetchBlocks = async () => {\n    const dateFormat = \"DD MM YYYY\";\n    if (this.firebase) {\n      const blocks = [];\n      const collection = this.firebase.firestore().collection(\"blocks\");\n      const username = this._getUsername();\n      const snapshot = await (username\n        ? collection.where(\"username\", \"==\", username).get()\n        : collection.get());\n      snapshot.forEach(doc => blocks.push({ id: doc.id, ...doc.data() }));\n      console.log(`Log: Fetched ${blocks.length} blocks`, blocks);\n      const todaysBlocks = blocks\n        .filter(block => moment(moment(block.startTime).format(dateFormat)).isSame(moment().format(dateFormat)));\n      const startedBlocks = blocks.filter(block => !block.completed);\n      const earnedBlocks = blocks.filter(block => block.completed);\n      console.log(`Log: Filtered ${startedBlocks.length} started blocks`, startedBlocks);\n      console.log(`Log: Filtered ${earnedBlocks.length} earned blocks`, earnedBlocks);\n      return { startedBlocks, earnedBlocks, todaysBlocks };\n    }\n    return null;\n  }\n\n  _fetchGoals = async () => {\n    if (this.firebase) {\n      const goals = [];\n      const collection = this.firebase.firestore().collection(\"goals\");\n      const username = this._getUsername();\n      const snapshot = await (username\n        ? collection.where(\"username\", \"==\", username).get()\n        : collection.get());\n      snapshot.forEach(doc => goals.push({ id: doc.id, ...doc.data() }));\n      console.log(`Log: Fetched ${goals.length} goals`, goals);\n      return goals;\n    }\n    return null;\n  }\n\n  _addTimeBlock = block => {\n    const username = this._getUsername();\n    if (this.firebase) {\n      this.firebase.firestore().collection(\"blocks\").add({\n        ...block,\n        username\n      });\n    }\n  }\n\n  _updateGoal = async goal => {\n    if (this.firebase) {\n      const username = this._getUsername();\n      await this.firebase.firestore()\n        .collection(\"goals\")\n        .doc(goal.id)\n        .update({ ...goal, username: username });\n    }\n  }\n\n  _getUsername = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(\"username\");\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nexport default class Timer extends React.Component {\n  intervalTimer = null;\n\n  constructor(props) {\n    super(props);\n    const { hours, minutes, seconds } = props;\n    this.state = {\n      hours,\n      minutes,\n      seconds,\n      running: false\n    };\n  }\n\n  componentDidMount = () => {\n    if (!this.intervalTimer) {\n      this.intervalTimer = setInterval(this._onIntervalFire, 1000);\n    }\n  };\n\n  componentWillUnmount = () => clearInterval(this.intervalTimer);\n\n  static getDerivedStateFromProps = ({ hours, minutes, seconds, running, paused }) => {\n    if (!running && !paused) {\n      return {\n        hours,\n        minutes,\n        seconds,\n        running\n      };\n    }\n    return { running };\n  };\n\n  pad(n, z) {\n    z = z || '0';\n    n = n + '';\n    return n.length >= 2 ? n : new Array(2 - n.length + 1).join(z) + n;\n  }\n\n  render() {\n    const { hours, minutes, seconds } = this.state;\n    const commonStyles = {\n      color: \"#ccc\"\n    };\n    return (\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\n        <span style={this.props.small ? { fontSize: 20, ...commonStyles } : { fontSize: 40, ...commonStyles }}>\n          {this.pad(hours)} : {this.pad(minutes)} : {this.pad(seconds)}\n        </span>\n      </div>\n    );\n  }\n\n  _onIntervalFire = () => {\n    const { hours, minutes, seconds, running } = this.state;\n    const { onFinish, isCountUp, onTick } = this.props;\n    if (!running) {\n      return;\n    }\n\n    const result = isCountUp\n      ? countUpOneSecond(hours, minutes, seconds)\n      : countDownOneSecond(hours, minutes, seconds);\n    if (!result) {\n      this.setState({ running: false });\n      onFinish && onFinish();\n    }\n\n    this.setState({\n      hours: result.hours,\n      minutes: result.minutes,\n      seconds: result.seconds\n    }, () => {\n      const { hours, minutes, seconds } = this.state;\n      onTick && onTick(hours, minutes, seconds);\n    });\n  }\n};\n\nfunction countDownOneSecond (hours, minutes, seconds) {\n  if (seconds === 0) {\n    if (minutes === 0) {\n      if (hours === 0) {\n        // Count down finished\n        return null;\n      }\n      return {\n        hours: hours - 1,\n        minutes: 59,\n        seconds: 59\n      };\n    }\n    return {\n      hours,\n      minutes: minutes - 1,\n      seconds: 59\n    };\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds: seconds - 1\n  };\n}\n\nfunction countUpOneSecond (hours, minutes, seconds) {\n  if (seconds === 59) {\n    if (minutes === 59) {\n      if (hours === 59) {\n        // Counter finished\n        return null;\n      }\n      return {\n        hours: hours + 1,\n        minutes: 0,\n        seconds: 0\n      };\n    }\n    return {\n      hours,\n      minutes: minutes + 1,\n      seconds: 0\n    };\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds: seconds + 1\n  };\n}\n","import React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport Timer from \"../components/timer\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport GoalUtils from \"../utils/goal-utils\";\nimport { Link , useLocation } from \"react-router-dom\";\n\nconst isDistracted = false;\n\nconst TimerScreenRenderer = ({\n  onTimerTick,\n  onTimerModify,\n  onTimerFinish,\n  onTimerStart,\n  onTimerStop,\n  running,\n  earnedBlocks,\n  currentBlock,\n  goal\n}) => (\n  <View style={{ display: \"flex\", flexDirection: \"column\", maxWidth: 267, backgroundColor: \"black\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <View style={{ paddingHorizontal: 20, border: \"1px solid rgb(38,38,38)\", paddingBottom: 15, paddingTop: 5, minHeight: 177 }}>\n      <Timer\n        hours={1}\n        minutes={0}\n        seconds={0}\n        running={running}\n        paused={isDistracted}\n        onTick={onTimerTick}\n        onModify={onTimerModify}\n        onFinish={onTimerFinish}\n      />\n      <Text style={{ color: \"#999999\", textAlign: \"left\", fontStyle: \"oblique\", fontSize: 13 }}>\n        {\"Focus on your task for 1 hour to earn \"}\n        <Text style={{ color: \"white\", fontStyle: \"oblique\" }}>{\"1 block\"}</Text>\n        <Text style={{ fontWeight: \"bold\", color: \"white\", fontStyle: \"normal\" }}>{\" ( \"}</Text>\n        <View style={{ height: 10, width: 10, backgroundColor: \"rgb(97,196,85)\" }} />\n        <Text style={{ fontWeight: \"bold\", color: \"white\", fontStyle: \"normal\" }}>{\" )\"}</Text>\n      </Text>\n\n      <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginTop: 10 }}>\n        <Text style={{ color: \"#999999\" }}>Today's Goal ( </Text>\n        <Link to={`/goals${useLocation().search}`} style={{ marginBottom: 5 }}>\n          <Text style={{ color: \"rgb(209,63,87)\",  }}>\n            Set\n          </Text>\n        </Link>\n        <Text style={{ color: \"#999999\" }}> )</Text>\n      </View>\n\n      <View style={{ display: \"flex\", height: 50, justifyContent: \"center\", alignItems: \"center\" }}>\n        {\n          (running || isDistracted) || (GoalUtils.getTodaysBlockGoal(goal) !== 0)\n            ? (\n              <TimeBlocks\n                earnedBlocks={earnedBlocks}\n                currentBlock={currentBlock}\n                goal={goal}\n              />\n            ) : (\n              <View style={{ width: \"100%\", justifyContent: \"center\" }}>\n                <Text style={{ color: \"#999999\" }}>No goal</Text>\n              </View>\n            )\n        }\n      </View>\n    </View>\n    <View style={{ marginVertical: 40 }}>\n      <TouchableOpacity\n        style={{ \n          backgroundColor: running || isDistracted\n            ? \"rgb(28,35,54)\"\n            : \"rgb(209,63,87)\",\n          borderRadius: 80,\n          width: 80,\n          height: 80,\n          display: \"flex\",\n          justifyContent: \"center\",\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 1,\n          elevation: 2\n        }}\n        onPress={running || isDistracted ? onTimerStop : onTimerStart}\n      >\n        <Text style={{ fontWeight: \"bold\", marginBottom: 2, color: \"white\" }}>\n          {running || isDistracted ? \"Give up\" : \"Start\"}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  </View>\n);\n\nexport default TimerScreenRenderer;\n\n// _renderDistractionTimer = () => (\n//   <Timer\n//     hours={0}\n//     minutes={0}\n//     seconds={0}\n//     isCountUp\n//     small\n//     onTick={(dHours, dMinutes, dSeconds) => this.setState({ dHours, dMinutes, dSeconds })}\n//     running={isDistracted}\n//     onFinish={this._onDistractionFinish}\n//   />\n// );\n// _renderDistractions = () => (\n//   <div style={{ fontSize: 16 }}>\n//     <p style={{ fontSize: 22 }}>Distractions</p>\n//     {this.state.distractions.length === 0 && <p>No distractions</p>}\n//     {this.state.distractions.map(({ elapsedHours, elapsedMinutes, elapsedSeconds, createdAt }) => (\n//       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n//         <p>At {moment(createdAt).format('hh:mm:ss')}</p>\n//         <p>{elapsedHours} : {elapsedMinutes} : {elapsedSeconds}</p>\n//       </div>\n//     ))}\n//   </div>\n// );\n// _onLogDistraction = () => this.setState({\n//   distractions: [\n//     {\n//       createdAt: moment().toISOString(),\n//       hours: this.state.hours,\n//       minutes: this.state.minutes,\n//       seconds: this.state.seconds,\n//       elapsedHours: 0,\n//       elapsedMinutes: 0,\n//       elapsedSeconds: 0\n//     },\n//     ...this.state.distractions\n//   ]\n// });\n// _onDistractionStart = () => this.setState({ running: false, isDistracted: true });\n// _onDistractionFinish = () => {\n//   const { dHours, dMinutes, dSeconds } = this.state;\n//   this._logDistraction(dHours, dMinutes, dSeconds);\n//   this._resetDistraction();\n//   this.setState({ running: true });\n// };\n// _resetDistraction = () => this.setState({ dHours: 0, dMinutes: 0, dSeconds: 0, isDistracted: false });\n// _logDistraction = (hours, minutes, seconds) => {\n//   const { distractions } = this.state;\n//   const newDistraction = {\n//     createdAt: moment().toISOString(),\n//     hours,\n//     minutes,\n//     seconds,\n//     elapsedHours: hours,\n//     elapsedMinutes: minutes,\n//     elapsedSeconds: seconds\n//   };\n//   this.setState({ distractions: [newDistraction, ...distractions] });\n// };\n","import React from \"react\";\nimport moment from \"moment\";\nimport TimerScreenRenderer from \"./timer-screen-renderer\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport AppContext from \"../app-context\";\n\nclass TimerScreenContainer extends React.Component {\n  state = {\n    hours: 1,\n    minutes: 0,\n    seconds: 0,\n    running: false,\n    isDistracted: false,\n    currentBlock: null,\n    setHours: 1,\n    setMinutes: 0,\n    setSeconds: 0,\n    earnedBlocks: [],\n    goal: null,\n    // Below not used\n    dHours: 0,\n    dMinutes: 0,\n    dSeconds: 0,\n    distractions: [],\n    workdayStartTime: null,\n    workdayEndTime: null\n  };\n\n  componentDidMount() {\n    this._fetchBlocks();\n    this._fetchGoals();\n  }\n\n  render() {\n    const {\n      running,\n      currentBlock,\n      earnedBlocks,\n      goal\n    } = this.state;\n    return (\n      <TimerScreenRenderer\n        onTimerStart={this._startBlock}\n        onTimerStop={() => this._endBlock(false /* completed */, true /* stopped */)}\n        onTimerTick={this._onTimerTick}\n        onTimerModify={this._onTimerModify}\n        onTimerFinish={this._onTimerFinish}\n        running={running}\n        currentBlock={currentBlock}\n        earnedBlocks={earnedBlocks}\n        goal={goal}\n      />\n    );\n  }\n\n  _getNumHourlyBlocksBetweenTimes = (startTime, endTime) => moment.duration(moment(endTime).diff(startTime)).asHours();\n\n  _fetchBlocks = async () => {\n    const { remoteService } = this.props;\n    const { todaysBlocks } = await remoteService.fetchBlocks();\n    if (todaysBlocks) {\n      this.setState({ earnedBlocks: todaysBlocks.filter(block => block.completed) });\n    }\n  };\n\n  _fetchGoals = async () => {\n    const { remoteService } = this.props;\n    const goals = await remoteService.fetchGoals();\n    if (goals && goals.length) {\n      this.setState({ goal: goals[0] });\n    }\n  };\n\n  _startBlock = () => {\n    const { running, isDistracted, distractions } = this.state;\n    if (!isDistracted) {\n      this.setState({\n        running: !running,\n        distractions: !running ? [] : distractions,\n        currentBlock: {\n          hours: 1,\n          minutes: 0,\n          seconds: 0,\n          createdAt: moment().toISOString(),\n          startTime: moment().toISOString(),\n          endTime: null,\n          completed: false\n        }\n      });\n    }\n  };\n\n  _endBlock = (completed = false, stopped = false) => {\n    const {\n      hours,\n      minutes,\n      seconds\n      // setHours\n      // setMinutes,\n      // setSeconds\n    } = this.state;\n    this.setState({ running: false, isDistracted: false });\n    this._logTimeBlock(\n      hours,\n      59 - minutes,\n      59 - seconds,\n      completed,\n      stopped\n    );\n  };\n\n  _onTimerTick = (hours, minutes, seconds) => this.setState({\n    hours,\n    minutes,\n    seconds,\n    currentBlock: {\n      ...this.state.currentBlock,\n      hours,\n      minutes,\n      seconds\n    }\n  });\n\n  _onTimerModify = ({ hours, minutes, seconds }) => this.setState({\n    hours,\n    minutes,\n    seconds,\n    setHours: hours,\n    setMinutes: minutes,\n    setSeconds: seconds\n  });\n\n  _onTimerFinish = () => this._endBlock(true /* completed */, false /* stopped */);\n\n  _renderEarnedBlocks = blocks => <TimeBlocks blocks={blocks} />;\n\n  _logTimeBlock = (elapsedHours, elapsedMinutes, elapsedSeconds, completed = false, stopped=false) => {\n    const { setHours, setMinutes, setSeconds, currentBlock, goal } = this.state;\n    const { remoteService } = this.props;\n    if (remoteService) {\n      remoteService.addTimeBlock({\n        ...currentBlock,\n        hours: setHours,\n        minutes: setMinutes,\n        seconds: setSeconds,\n        elapsedHours,\n        elapsedMinutes,\n        elapsedSeconds,\n        goal,\n        endTime: moment().toISOString(),\n        distractions: this.state.distractions,\n        completed,\n        stopped\n      });\n    }\n  };\n\n  // _renderDistractions = () => (\n  //   <div style={{ fontSize: 16 }}>\n  //     <p style={{ fontSize: 22 }}>Distractions</p>\n  //     {this.state.distractions.length === 0 && <p>No distractions</p>}\n  //     {this.state.distractions.map(({ elapsedHours, elapsedMinutes, elapsedSeconds, createdAt }) => (\n  //       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n  //         <p>At {moment(createdAt).format('hh:mm:ss')}</p>\n  //         <p>{elapsedHours} : {elapsedMinutes} : {elapsedSeconds}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  // _onStartTimeChange = workdayStartTime => this.setState({ workdayStartTime });\n  // _onEndTimeChange = workdayEndTime => this.setState({ workdayEndTime });\n}\n\nexport const TimerScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <TimerScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n)\n","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text, Dimensions } from \"react-native\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport GoalUtils from \"../utils/goal-utils\";\n\nconst LogItem = ({ day, goal }) => {\n  const earnedBlocks = day.blocks.filter(block => block.completed);\n  const earnedBlocksCount = earnedBlocks.length * 1.0\n  const goalCount = GoalUtils.getTodaysBlockGoal(goal);\n  const goalPercent = day.blocks && day.blocks.length > 0\n    ? (earnedBlocksCount / (goalCount > 0 ? goalCount : 1)) * 100\n    : 0;\n  return (\n    <View style={{ height: 90, borderBottom: \"1px solid rgb(38,38,38)\", paddingTop: 10, width: \"100%\", display: \"flex\", alignItems: \"center\", marginHorizontal: 5 }}>\n      <View style={{ maxWidth: 267, height: \"100%\", width: \"100%\" }}>\n        <View style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}>\n          <Text style={{ color: \"white\", fontSize: 17 }}>{moment(day.date).format(\"D MMMM YYYY\")}</Text>\n          <Text style={{ color: \"white\", fontSize: 10 }}>Sessions: {day.blocks && day.blocks.length > 0 ? day.blocks.length : \"N/A\"}</Text>\n        </View>\n        <View style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\", justifyContent: \"space-between\", marginTop: 10 }}>\n          <View style={{ display: \"flex\", width: \"75%\" }}>\n            <TimeBlocks earnedBlocks={earnedBlocks} goal={goal} />\n          </View>\n          <View style={{ display: \"flex\", alignItems: \"center\", marginLeft: 5 }}>\n            <Text style={{ color: \"white\", fontSize: 16 }}>{goalPercent.toFixed(0)}%</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport const LogScreenRenderer = ({ days, goal }) => (\n  <View style={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: Dimensions.get(\"window\").height - 60,\n    overflow: \"scroll\",\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    paddingBottom: 60\n  }}>\n    {days.map(day => <LogItem day={day} goal={goal} />)}\n  </View>\n);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text } from \"react-native\";\nimport AppContext from \"../app-context\";\nimport { LogScreenRenderer } from \"./log-screen-renderer\";\n\nclass LogScreenContainer extends React.Component {\n  state = {\n    startedBlocks: [],\n    earnedBlocks: [],\n    goal: null\n  };\n\n  async componentDidMount() {\n    this._fetchBlocks();\n    this._fetchGoal();\n  }\n\n  render() {\n    const { startedBlocks, earnedBlocks, goal } = this.state;\n    return (\n      <View style={{ width: \"100%\" }}>\n        <Text style={{ color: \"rgb(204, 204, 204)\", fontSize: 30, textAlign: \"center\", marginVertical: 15, marginHorizontal: 40, fontWeight: \"bold\" }}>\n          Log\n        </Text>\n        <LogScreenRenderer\n          days={this._getDays([...startedBlocks, ...earnedBlocks])}\n          goal={goal}\n        />\n      </View>\n    );\n  }\n\n  _fetchBlocks = async () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      const { startedBlocks, earnedBlocks } = await remoteService.fetchBlocks();\n      this.setState({ startedBlocks, earnedBlocks });\n    }\n  }\n\n  _fetchGoal = async () => {\n    const { remoteService } = this.props;\n    const goals = await remoteService.fetchGoals();\n    if (goals && goals.length > 0) {\n      this.setState({ goal: goals[0] });\n    }\n  };\n\n  _getDays = blocks => {\n    const days = {};\n    let startDate = null;\n    let endDate = null;\n\n    for (const block of blocks) {\n      const dayMoment = moment(block.startTime);\n      const dayKey = dayMoment.format(\"DD MM YYYY\");\n      const day = days[dayKey];\n\n      // Group blocks by day\n      if (day) {\n        day.blocks.push(block);\n      } else {\n        days[dayKey] = { date: block.startTime, blocks: [block] };\n      }\n\n      // Set lowest and highest days\n      if (!startDate) {\n        startDate = block.startTime;\n      }\n      if (!endDate) {\n        endDate = block.startTime;\n      }\n      if (dayMoment.isBefore(moment(startDate))) {\n        startDate = block.startTime;\n      }\n      if (dayMoment.isAfter(moment(startDate))) {\n        endDate = block.startTime;\n      }\n    }\n\n    const sortedDates = Object.keys(days).sort((a,b) => moment(a, \"DD MM YYY\") - moment(b, \"DD MM YYYY\"));\n    return sortedDates.map(date => days[date]);\n  }\n\n  _getContiguousDays = (startDate, endDate) => {\n    const dayList = [];\n    let currentDay = moment(startDate);\n    while (currentDay.format(\"DD MM YYYY\") !== moment(endDate).format(\"DD MM YYYY\")) {\n      dayList.push(currentDay.format(\"DD MM YYYY\"));\n      currentDay = currentDay.add(1, \"days\");\n    }\n    return dayList;\n  }\n}\n\nexport const LogScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <LogScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n)\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  TouchableHighlight\n} from \"react-native\";\n\nconst GoalMode = {\n  Everyday: \"Everyday\",\n  WeekdayWeekEnd: \"WeekdayWeekend\",\n  Custom: \"Custom\"\n};\n\nconst Days = {\n  \"mon\": \"Monday\",\n  \"tue\": \"Tuesday\",\n  \"wed\": \"Wednesday\",\n  \"thu\": \"Tuesday\",\n  \"fri\": \"Friday\",\n  \"sat\": \"Saturday\",\n  \"sun\": \"Sunday\"\n};\n\nconst BlurContent = ({ blur, children }) => (\n  <View style={{ opacity: blur ? 0.3 : 1 }}>\n    {children}\n  </View>\n);\n\n\nexport class GoalsScreenRenderer extends React.Component {\n  render() {\n    const { goalMode, goal, onChangeGoalMode, onSaveGoal } = this.props;\n    return (\n      <TouchableWithoutFeedback onPress={() => onChangeGoalMode(null)}>\n        <View style={{ width: \"100%\" }}>\n          <Text style={{ color: \"rgb(204, 204, 204)\", fontSize: 30, textAlign: \"center\", marginVertical: 15, marginHorizontal: 40, fontWeight: \"bold\" }}>\n            Log\n          </Text>\n          <View style={{ paddingTop: 10, width: \"100%\", display: \"flex\", alignItems: \"center\", marginHorizontal: 5 }}>\n            <View style={{ maxWidth: 267, height: \"100%\", width: \"100%\" }}>\n              <BlurContent blur={goalMode !== GoalMode.Everyday}>\n                <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Everyday)}>\n                  <View style={styles.form}>\n                    <View style={styles.formLabel}>\n                      <Text style={styles.text}>Everyday</Text>\n                    </View>\n                    <View style={styles.formInput}>\n                      {this._renderTextInput(\n                        goal.everyday,\n                        GoalMode.Everyday,\n                        e => this._onSetValue(e, \"everyday\"),\n                        true /* shouldAutoFocus */\n                      )}\n                    </View>\n                    <TouchableHighlight\n                      style={styles.clearButton}\n                      onPress={this._onClearEveryday}\n                    >\n                      <Text style={styles.text}>Clear</Text>\n                    </TouchableHighlight>\n                  </View>\n                </TouchableWithoutFeedback>\n              </BlurContent>\n\n              <View style={{ marginTop: 10, marginBottom: 10 }}>\n                <Text>OR</Text>\n              </View>\n\n              <BlurContent blur={goalMode !== GoalMode.WeekdayWeekEnd}>\n                <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.WeekdayWeekEnd)}>\n                  <View>\n                    <View style={styles.form}>\n                      <View style={styles.formLabel}>\n                        <Text style={styles.text}>Weekdays</Text>\n                      </View>\n                      <View style={styles.formInput}>\n                        {this._renderTextInput(\n                          goal.weekdays,\n                          GoalMode.WeekdayWeekEnd,\n                          e => this._onSetValue(e, \"weekdays\"),\n                          true /* shouldAutoFocus */\n                        )}\n                      </View>\n                      <TouchableHighlight\n                        style={styles.clearButton}\n                        onPress={this._onClearWeekdays}\n                      >\n                        <Text style={styles.text}>Clear</Text>\n                      </TouchableHighlight>\n                    </View>\n                    <View style={styles.form}>\n                      <View style={styles.formLabel}>\n                        <Text style={styles.text}>Weekends</Text>\n                      </View>\n                      <View style={styles.formInput}>\n                        {this._renderTextInput(\n                          goal.weekends,\n                          GoalMode.WeekdayWeekEnd,\n                          e => this._onSetValue(e, \"weekends\")\n                        )}\n                      </View>\n                      <TouchableHighlight\n                        style={styles.clearButton}\n                        onPress={this._onClearWeekends}\n                      >\n                        <Text style={styles.text}>Clear</Text>\n                      </TouchableHighlight>\n                    </View>\n                  </View>\n                </TouchableWithoutFeedback>\n              </BlurContent>\n\n              <View style={{ width: \"100%\", height: 1, borderBottom: \"1px solid black\", marginTop: 10 }} />\n\n              <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Custom)}>\n                <View>\n                  <View style={{ display: \"flex\", flexDirection: \"row\", marginVertical: 10, justifyContent: \"center\", position: \"relative\" }}>\n                    <Text style={styles.text}>Set Goals</Text>\n                    <TouchableHighlight\n                      style={{ position: \"absolute\", right: 0, width: \"20%\" }}\n                      onPress={this._onClearCustom}\n                    >\n                      <Text style={styles.text}>Clear</Text>\n                    </TouchableHighlight>\n                  </View>\n                  <View>\n                  {this._renderDay(\"mon\", true)}\n                  {this._renderDay(\"tue\")}\n                  {this._renderDay(\"wed\")}\n                  {this._renderDay(\"thu\")}\n                  {this._renderDay(\"fri\")}\n                  {this._renderDay(\"sat\")}\n                  {this._renderDay(\"sun\")}\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n\n              <TouchableHighlight style={{ marginVertical: 30 }} onPress={onSaveGoal}>\n                <View style={{ backgroundColor: \"rgb(209,63,87)\", paddingVertical: 5 }}>\n                  <Text style={styles.text}>Save</Text>\n                </View>\n              </TouchableHighlight>\n            </View>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n\n  _onClearEveryday = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearEveryday: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      everyday: null,\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null,\n      sat: null,\n      sun: null\n    });\n  }\n\n  _onClearWeekdays = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearWeekdays: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      weekdays: null,\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null\n    });\n  }\n\n  _onClearWeekends = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearWeekends: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      weekends: null,\n      sat: null,\n      sun: null\n    });\n  }\n\n  _onClickSection = goalMode => {\n    const { onChangeGoalMode } = this.props;\n    if (!onChangeGoalMode) {\n      return;\n    }\n    onChangeGoalMode(goalMode);\n  }\n\n  _onClearCustom = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearCustom: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoal({\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null,\n      sat: null,\n      sun: null\n    });\n    onChangeGoalMode(null);\n  }\n\n  _renderDay = (day, autoFocusInput = false) => {\n    const { goal } = this.props;\n    return (\n      <View style={styles.form}>\n        <View style={styles.formLabel}>\n          <Text style={styles.text}>{Days[day]}</Text>\n        </View>\n        <View style={styles.formInput}>\n          {this._renderTextInput(\n            goal[day],\n            GoalMode.Custom,\n            e => this._onSetValue(e, day),\n            autoFocusInput\n          )}\n        </View>\n        <View style={styles.clearButton} />\n      </View>\n    )\n  };\n\n  _renderTextInput = (value, goalMode, onChange, shouldAutoFocus = false) => (\n    goalMode === this.props.goalMode\n      ? <TextInput value={value} style={styles.formTextInput} onChange={onChange} autoFocus={shouldAutoFocus} keyboardType={\"numeric\"} />\n      : <Text style={styles.text}>{value !== null ? value : \"Not set\"}</Text>\n  );\n\n  _onSetValue = (event, formType) => {\n    const { onChangeGoal } = this.props;\n    if (!onChangeGoal) {\n      return;\n    }\n    const value = event && event.target && event.target.value;\n    if (!formType) {\n      return;\n    }\n    const parsedValue = value.length === 0 || isNaN(parseInt(value)) ? null : parseInt(value);\n    switch (formType) {\n      case \"everyday\":\n        onChangeGoal({\n          everyday: parsedValue,\n          mon: parsedValue,\n          tue: parsedValue,\n          wed: parsedValue,\n          thu: parsedValue,\n          fri: parsedValue,\n          sat: parsedValue,\n          sun: parsedValue\n        });\n        break;\n      case \"weekdays\":\n        onChangeGoal({\n          weekdays: parsedValue,\n          mon: parsedValue,\n          tue: parsedValue,\n          wed: parsedValue,\n          thu: parsedValue,\n          fri: parsedValue\n        });\n        break;\n      case \"weekends\":\n        onChangeGoal({\n          weekends: parsedValue,\n          sat: parsedValue,\n          sun: parsedValue\n        });\n        break;\n      default:\n        onChangeGoal({ [formType]: parsedValue });\n        break;\n    }\n  }\n\n  _unsetAllWithOverride = override => this.props.onChangeGoal && this.props.onChangeGoal({\n    everyday: null,\n    weekdays: null,\n    weekends: null,\n    ...override || {}\n  });\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: 267,\n    height: \"100%\",\n    backgroundColor: \"black\",\n    paddingVertical: 20\n  },\n  titleText: {\n    color: \"white\",\n    fontSize: 26,\n    marginVertical: 10\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  formLabel: {\n    width: \"50%\",\n    textAlign: \"left\",\n    paddingLeft: 10\n  },\n  formInput: {\n    width: \"30%\",\n    paddingRight: 10\n  },\n  clearButton: {\n    width: \"20%\"\n  },\n  formTextInput: {\n    color: \"white\",\n    textAlign: \"center\",\n    borderBottom: \"1px solid black\"\n  },\n  text: {\n    color: \"white\"\n  }\n});\n\n// return (\n//   <TouchableWithoutFeedback onPress={() => onChangeGoalMode(null)}>\n//     <View style={styles.container}>\n//       <Text style={styles.titleText}>Goals</Text>\n//       <BlurContent blur={goalMode !== GoalMode.Everyday}>\n//         <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Everyday)}>\n//           <View style={styles.form}>\n//             <View style={styles.formLabel}>\n//               <Text style={styles.text}>Everyday</Text>\n//             </View>\n//             <View style={styles.formInput}>\n//               {this._renderTextInput(\n//                 goal.everyday,\n//                 GoalMode.Everyday,\n//                 e => this._onSetValue(e, \"everyday\"),\n//                 true /* shouldAutoFocus */\n//               )}\n//             </View>\n//             <TouchableHighlight\n//               style={styles.clearButton}\n//               onPress={this._onClearEveryday}\n//             >\n//               <Text style={styles.text}>Clear</Text>\n//             </TouchableHighlight>\n//           </View>\n//         </TouchableWithoutFeedback>\n//       </BlurContent>\n\n//       <View style={{ marginTop: 10, marginBottom: 10 }}>\n//         <Text>OR</Text>\n//       </View>\n\n//       <BlurContent blur={goalMode !== GoalMode.WeekdayWeekEnd}>\n//         <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.WeekdayWeekEnd)}>\n//           <View>\n//             <View style={styles.form}>\n//               <View style={styles.formLabel}>\n//                 <Text style={styles.text}>Weekdays</Text>\n//               </View>\n//               <View style={styles.formInput}>\n//                 {this._renderTextInput(\n//                   goal.weekdays,\n//                   GoalMode.WeekdayWeekEnd,\n//                   e => this._onSetValue(e, \"weekdays\"),\n//                   true /* shouldAutoFocus */\n//                 )}\n//               </View>\n//               <TouchableHighlight\n//                 style={styles.clearButton}\n//                 onPress={this._onClearWeekdays}\n//               >\n//                 <Text style={styles.text}>Clear</Text>\n//               </TouchableHighlight>\n//             </View>\n//             <View style={styles.form}>\n//               <View style={styles.formLabel}>\n//                 <Text style={styles.text}>Weekends</Text>\n//               </View>\n//               <View style={styles.formInput}>\n//                 {this._renderTextInput(\n//                   goal.weekends,\n//                   GoalMode.WeekdayWeekEnd,\n//                   e => this._onSetValue(e, \"weekends\")\n//                 )}\n//               </View>\n//               <TouchableHighlight\n//                 style={styles.clearButton}\n//                 onPress={this._onClearWeekends}\n//               >\n//                 <Text style={styles.text}>Clear</Text>\n//               </TouchableHighlight>\n//             </View>\n//           </View>\n//         </TouchableWithoutFeedback>\n//       </BlurContent>\n\n//       <View style={{ width: \"100%\", height: 1, borderBottom: \"1px solid black\", marginTop: 10 }} />\n\n//       <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Custom)}>\n//         <View>\n//           <View style={{ display: \"flex\", flexDirection: \"row\", marginVertical: 10, justifyContent: \"center\", position: \"relative\" }}>\n//             <Text style={styles.text}>Set Goals</Text>\n//             <TouchableHighlight\n//               style={{ position: \"absolute\", right: 0, width: \"20%\" }}\n//               onPress={this._onClearCustom}\n//             >\n//               <Text style={styles.text}>Clear</Text>\n//             </TouchableHighlight>\n//           </View>\n//           <View>\n//           {this._renderDay(\"mon\", true)}\n//           {this._renderDay(\"tue\")}\n//           {this._renderDay(\"wed\")}\n//           {this._renderDay(\"thu\")}\n//           {this._renderDay(\"fri\")}\n//           {this._renderDay(\"sat\")}\n//           {this._renderDay(\"sun\")}\n//           </View>\n//         </View>\n//       </TouchableWithoutFeedback>\n\n//       <TouchableHighlight style={{ marginVertical: 30 }} onPress={onSaveGoal}>\n//         <View style={{ backgroundColor: \"rgb(209,63,87)\", paddingVertical: 5 }}>\n//           <Text style={styles.text}>Save</Text>\n//         </View>\n//       </TouchableHighlight>\n//     </View>\n//   </TouchableWithoutFeedback>\n// )\n","import React from \"react\";\nimport AppContext from \"../app-context\";\nimport { GoalsScreenRenderer } from \"./goals-renderer\";\n\nclass GoalsScreenContainer extends React.Component {\n  state = {\n    goals: [],\n    id: null,\n    goalMode: null,\n    everyday: null,\n    weekdays: null,\n    weekends: null,\n    mon: null,\n    tue: null,\n    wed: null,\n    thu: null,\n    fri: null,\n    sat: null,\n    sun: null\n  };\n\n  componentDidMount() {\n    this._fetchGoals();\n  }\n\n  render = () => {\n    const {\n      goalMode,\n      everyday,\n      weekdays,\n      weekends,\n      mon,\n      tue,\n      wed,\n      thu,\n      fri,\n      sat,\n      sun\n    } = this.state;\n    return (\n      <GoalsScreenRenderer\n        goalMode={goalMode}\n        goal={{\n          everyday,\n          weekdays,\n          weekends,\n          mon,\n          tue,\n          wed,\n          thu,\n          fri,\n          sat,\n          sun\n        }}\n        onChangeGoal={this._onChangeGoal}\n        onChangeGoalMode={this._onChangeGoalMode}\n        onSaveGoal={this._onSaveGoal}\n      />\n    );\n  }\n\n  _getCurrentGoal = () => ({\n    id: this.state.id,\n    everyday: this.state.everyday,\n    weekdays: this.state.weekdays,\n    weekends: this.state.weekends,\n    mon: this.state.mon,\n    tue: this.state.tue,\n    wed: this.state.wed,\n    thu: this.state.thu,\n    fri: this.state.fri,\n    sat: this.state.sat,\n    sun: this.state.sun\n  });\n\n  _onSaveGoal = () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      console.log(\"Devan\", this._getCurrentGoal())\n      remoteService.updateGoal(this._getCurrentGoal())\n    }\n  }\n\n  _fetchGoals = async () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      const goals = await remoteService.fetchGoals();\n      if (goals && goals.length > 0) {\n        this.setState({ goals, ...goals[0] });\n      }\n    }\n  }\n\n  _onChangeGoalMode = goalMode => this.setState({ goalMode });\n\n  _onChangeGoal = goal => this.setState({ ...goal });\n}\n\nexport const GoalsScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <GoalsScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppRegistry } from 'react-native';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nAppRegistry.registerComponent('App', () => App);\n\nAppRegistry.runApplication('App', {\n  initialProps: {},\n  rootTag: document.getElementById('root')\n});\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}