{"version":3,"sources":["app-context.js","components/time-blocks.jsx","utils/goal-utils.js","App.js","components/timer.jsx","timer-screen/timer-screen-renderer.jsx","timer-screen/timer-screen-container.jsx","log-screen/log-screen-renderer.jsx","log-screen/log-screen-container.jsx","goals-screen/goals-renderer.jsx","goals-screen/goals-container.jsx","index.js"],"names":["AppContext","React","createContext","BlockProgress","progressPercent","marks","style","position","height","width","marginRight","marginTop","backgroundColor","Math","max","ceil","map","mark","left","top","getBlockProgress","block","hours","minutes","seconds","TimeBlock","isGoal","completed","TimeBlocks","earnedBlocks","currentBlock","goal","blockGoalCount","blockGoal","GoalUtils","getTodaysBlockGoal","length","display","flexWrap","justifyContent","flexDirection","Array","from","parsedGoal","everyday","mon","tue","wed","thu","fri","sat","sun","weekdays","weekends","parsedGoalBlocks","parseInt","moment","format","toLowerCase","isNaN","FIREBASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","firebase","global","state","init","render","Provider","value","remoteService","fetchBlocks","_fetchBlocks","fetchGoals","_fetchGoals","updateGoal","_updateGoal","addTimeBlock","_addTimeBlock","className","Dimensions","get","alignItems","path","borderTop","bottom","to","window","location","search","paddingHorizontal","color","fontSize","a","dateFormat","startedBlocks","collection","firestore","username","where","forEach","doc","push","id","data","console","log","filter","startTime","isSame","goals","URLSearchParams","add","update","this","initializeApp","analytics","setState","urlParams","Component","Timer","props","intervalTimer","componentDidMount","setInterval","_onIntervalFire","componentWillUnmount","clearInterval","running","onFinish","isCountUp","onTick","result","countUpOneSecond","countDownOneSecond","n","z","join","commonStyles","marginBottom","small","pad","getDerivedStateFromProps","paused","TimerScreenRenderer","onTimerTick","onTimerModify","onTimerFinish","onTimerStart","onTimerStop","View","maxWidth","border","paddingBottom","paddingTop","minHeight","onModify","Text","textAlign","fontStyle","fontWeight","useLocation","marginVertical","TouchableOpacity","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","onPress","TimerScreenContainer","isDistracted","setHours","setMinutes","setSeconds","dHours","dMinutes","dSeconds","distractions","workdayStartTime","workdayEndTime","_getNumHourlyBlocksBetweenTimes","endTime","duration","diff","asHours","_startBlock","createdAt","toISOString","_endBlock","_logTimeBlock","_onTimerTick","_onTimerModify","_onTimerFinish","_renderEarnedBlocks","blocks","elapsedHours","elapsedMinutes","elapsedSeconds","TimerScreen","Consumer","LogScreenRenderer","days","overflow","day","borderBottom","date","LogScreenContainer","_fetchGoal","_getDays","startDate","endDate","dayMoment","dayKey","isBefore","isAfter","Object","keys","sort","b","_getContiguousDays","dayList","currentDay","marginHorizontal","LogScreen","GoalMode","Days","BlurContent","blur","children","opacity","GoalsScreenRenderer","_onClearEveryday","onChangeGoal","onChangeGoalMode","_onClearWeekdays","_onClearWeekends","_onClickSection","goalMode","_onClearCustom","_renderDay","autoFocusInput","styles","form","formLabel","text","formInput","_renderTextInput","e","_onSetValue","clearButton","onChange","shouldAutoFocus","TextInput","formTextInput","autoFocus","keyboardType","event","formType","target","parsedValue","_unsetAllWithOverride","override","onSaveGoal","TouchableWithoutFeedback","container","titleText","TouchableHighlight","right","paddingVertical","StyleSheet","create","paddingLeft","paddingRight","GoalsScreenContainer","_onChangeGoal","_onChangeGoalMode","_onSaveGoal","_getCurrentGoal","GoalsScreen","AppRegistry","registerComponent","runApplication","initialProps","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.76cbf3da.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext({});\nexport default AppContext;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport GoalUtils from \"../utils/goal-utils\";\n\nconst BlockProgress = ({ progressPercent, marks }) => (\n  <div style={{ position: \"relative\", height: 13, width: 13, marginRight: 2, marginTop: 2, backgroundColor: \"gray\" }}>\n    <div style={{ width: `${Math.max(Math.ceil(progressPercent), 3)}%`, backgroundColor: \"rgb(97,196,85)\", height: \"100%\" }} />\n    {marks && marks.map(mark => (\n      <div style={{ position: \"absolute\", left: `${mark}%`, height: \"100%\", width: 2, top: 0, backgroundColor: \"red\" }} />  \n    ))}\n  </div>\n);\n\nconst getBlockProgress = block => 100 - (block.hours * 60 + block.minutes + (block.seconds/60.0))/60.0 * 100;\n\nconst TimeBlock = ({ block, isGoal }) => block && !block.completed\n  ? <BlockProgress progressPercent={getBlockProgress(block)} isGoal={isGoal} />\n  : (\n    <View style={{\n      width: 13,\n      height: 13,\n      marginRight: 2,\n      marginTop: 2,\n      backgroundColor: block\n        ? \"rgb(97,196,85)\"\n        : \"gray\"\n    }} />\n  );\n\nconst TimeBlocks = ({ earnedBlocks, currentBlock, goal, blockGoalCount }) => {\n  const blockGoal = Math.max(\n    (blockGoalCount || GoalUtils.getTodaysBlockGoal(goal)) - earnedBlocks.length - (currentBlock ? 1 : 0),\n    0\n  );\n  return (\n    <View style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", flexDirection: \"row\", marginTop: 15, width: \"100%\" }}>\n      {earnedBlocks.map(block => <TimeBlock block={block} />)}\n      {currentBlock && <TimeBlock block={currentBlock} isGoal={blockGoal - 1 > 0} />}\n      {Array.from(new Array(blockGoal)).map(() => <TimeBlock isGoal/>)}\n    </View>\n  );\n};\n\nexport default TimeBlocks;\n","import moment from \"moment\";\n\nexport default class GoalUtils {\n  static getTodaysBlockGoal(goal) {\n    if (!goal) {\n      return 0;\n    }\n    let parsedGoal = goal;\n    if (goal.everyday) {\n      parsedGoal = {\n        ...parsedGoal,\n        mon: goal.everyday,\n        tue: goal.everyday,\n        wed: goal.everyday,\n        thu: goal.everyday,\n        fri: goal.everyday,\n        sat: goal.everyday,\n        sun: goal.everyday\n      };\n    }\n    if (goal.weekdays) {\n      parsedGoal = {\n        ...parsedGoal,\n        mon: goal.everyday,\n        tue: goal.everyday,\n        wed: goal.everyday,\n        thu: goal.everyday,\n        fri: goal.everyday\n      };\n    }\n    if (goal.weekends) {\n      parsedGoal = {\n        ...parsedGoal,\n        sat: goal.everyday,\n        sun: goal.everyday\n      }\n    }\n    const parsedGoalBlocks = parseInt(parsedGoal[moment().format(\"ddd\").toLowerCase()]);\n    return isNaN(parsedGoalBlocks) ? 0 : parsedGoalBlocks;\n  }\n}\n","import React from \"react\";\nimport { View, Text, Dimensions }from \"react-native\";\nimport moment from \"moment\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport { TimerScreen } from \"./timer-screen\";\nimport { GoalsScreen } from \"./goals-screen\";\nimport { LogScreen } from \"./log-screen\";\nimport AppContext from \"./app-context\";\n\nconst FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyCBZrwH6IoMDo-jW2Ydu00z0FJMK3wQdTI\",\n  authDomain: \"timeblocks-bb1cc.firebaseapp.com\",\n  databaseURL: \"https://timeblocks-bb1cc.firebaseio.com\",\n  projectId: \"timeblocks-bb1cc\",\n  storageBucket: \"timeblocks-bb1cc.appspot.com\",\n  messagingSenderId: \"689367456633\",\n  appId: \"1:689367456633:web:6cb0b27d54e4c45f9bada8\",\n  measurementId: \"G-92KBT48GWG\"\n};\n\nclass App extends React.Component {\n  firebase = global.firebase;\n\n  state = {\n    init: false\n  };\n\n  componentWillMount() {\n    // Initialize Firebase\n    if (!this.state.init) {\n      this.firebase.initializeApp(FIREBASE_CONFIG);\n      this.firebase.analytics();\n      this.setState({ init: true });\n    }\n  }\n\n  componentDidMount() {\n    const urlParams = new URLSearchParams(window.location.search);\n    this.username = urlParams.get(\"username\");\n  }\n\n  render = () => (\n    <AppContext.Provider value={{\n      remoteService: {\n        fetchBlocks: this._fetchBlocks,\n        fetchGoals: this._fetchGoals,\n        updateGoal: this._updateGoal,\n        addTimeBlock: this._addTimeBlock\n      }\n    }}>\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Router>\n            <View style={{ height: Dimensions.get(\"window\").height - 60, width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\n              <Switch>\n                <Route path=\"/log\">\n                  <LogScreen />\n                </Route>\n                <Route path=\"/goals\">\n                  <GoalsScreen />\n                </Route>\n                <Route path=\"/\">\n                  <TimerScreen />\n                </Route>\n              </Switch>\n            </View>\n            <View style={{\n              borderTop: \"1px solid rgb(38,38,38)\",\n              width: \"100%\",\n              position: \"absolute\",\n              bottom: 0,\n              backgroundColor: \"black\",\n              height: 60,\n              display: \"flex\",\n              alignItems: \"center\"\n            }}>\n              <View style={{\n                width: \"100%\",\n                height: \"100%\",\n                // maxWidth: 267,\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n              }}>\n                <Link to={`/log${window.location.search}`}>\n                  <View style={{ height: \"100%\", paddingHorizontal: 10, width: 70 }}>\n                    <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                      Log\n                    </Text>\n                  </View>\n                </Link>\n                <Link to={`/${window.location.search}`}>\n                  <View style={{ height: \"100%\", paddingHorizontal: 10, width: 70 }}>\n                    <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                      Focus\n                    </Text>\n                  </View>\n                </Link>\n                <Link to={`/goals${window.location.search}`}>\n                  <View style={{ height: \"100%\", paddingHorizontal: 10, width: 70 }}>\n                    <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                      Goals\n                    </Text>\n                  </View>\n                </Link>\n              </View>\n            </View>\n          </Router>\n        </div>\n      </div>\n    </AppContext.Provider>\n  );\n\n  _fetchBlocks = async () => {\n    const dateFormat = \"DD MM YYYY\";\n    if (this.firebase) {\n      const startedBlocks = [];\n      const collection = this.firebase.firestore().collection(\"blocks\");\n      const snapshot = await (this.username\n        ? collection.where(\"username\", \"==\", this.username).get()\n        : collection.get());\n      snapshot.forEach(doc => startedBlocks.push({ id: doc.id, ...doc.data() }));\n      console.log(`Log: Fetched ${startedBlocks.length} blocks`, startedBlocks);\n      const earnedBlocks = startedBlocks\n        .filter(block => moment(moment(block.startTime).format(dateFormat)).isSame(moment().format(dateFormat)))\n        .filter(block => block.completed);\n      console.log(`Log: Filtered ${earnedBlocks.length} earned blocks`, earnedBlocks);\n      return { startedBlocks, earnedBlocks };\n    }\n    return null;\n  }\n\n  _fetchGoals = async () => {\n    if (this.firebase) {\n      const goals = [];\n      const collection = this.firebase.firestore().collection(\"goals\");\n      const snapshot = await (this.username\n        ? collection.where(\"username\", \"==\", this.username).get()\n        : collection.get());\n      snapshot.forEach(doc => goals.push({ id: doc.id, ...doc.data() }));\n      console.log(`Log: Fetched ${goals.length} goals`, goals);\n      return goals;\n    }\n    return null;\n  }\n\n  _addTimeBlock = block => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const username = urlParams.get(\"username\");\n    if (this.firebase) {\n      this.firebase.firestore().collection(\"blocks\").add({\n        ...block,\n        completed: true,\n        username\n      });\n    }\n  }\n\n  _updateGoal = async goal => {\n    if (this.firebase) {\n      await this.firebase.firestore()\n        .collection(\"goals\")\n        .doc(goal.id)\n        .update({ ...goal, username: this.username });\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nexport default class Timer extends React.Component {\n  intervalTimer = null;\n\n  constructor(props) {\n    super(props);\n    const { hours, minutes, seconds } = props;\n    this.state = {\n      hours,\n      minutes,\n      seconds,\n      running: false\n    };\n  }\n\n  componentDidMount = () => {\n    if (!this.intervalTimer) {\n      this.intervalTimer = setInterval(this._onIntervalFire, 1000);\n    }\n  };\n\n  componentWillUnmount = () => clearInterval(this.intervalTimer);\n\n  static getDerivedStateFromProps = ({ hours, minutes, seconds, running, paused }) => {\n    if (!running && !paused) {\n      return {\n        hours,\n        minutes,\n        seconds,\n        running\n      };\n    }\n    return { running };\n  };\n\n  pad(n, z) {\n    z = z || '0';\n    n = n + '';\n    return n.length >= 2 ? n : new Array(2 - n.length + 1).join(z) + n;\n  }\n\n  render() {\n    const { hours, minutes, seconds } = this.state;\n    const commonStyles = {\n      color: \"#ccc\"\n    };\n    return (\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\n        <span style={this.props.small ? { fontSize: 20, ...commonStyles } : { fontSize: 40, ...commonStyles }}>\n          {this.pad(hours)} : {this.pad(minutes)} : {this.pad(seconds)}\n        </span>\n      </div>\n    );\n  }\n\n  _onIntervalFire = () => {\n    const { hours, minutes, seconds, running } = this.state;\n    const { onFinish, isCountUp, onTick } = this.props;\n    if (!running) {\n      return;\n    }\n\n    const result = isCountUp\n      ? countUpOneSecond(hours, minutes, seconds)\n      : countDownOneSecond(hours, minutes, seconds);\n    if (!result) {\n      this.setState({ running: false });\n      onFinish && onFinish();\n    }\n\n    this.setState({\n      hours: result.hours,\n      minutes: result.minutes,\n      seconds: result.seconds\n    }, () => {\n      const { hours, minutes, seconds } = this.state;\n      onTick && onTick(hours, minutes, seconds);\n    });\n  }\n};\n\nfunction countDownOneSecond (hours, minutes, seconds) {\n  if (seconds === 0) {\n    if (minutes === 0) {\n      if (hours === 0) {\n        // Count down finished\n        return null;\n      }\n      return {\n        hours: hours - 1,\n        minutes: 59,\n        seconds: 59\n      };\n    }\n    return {\n      hours,\n      minutes: minutes - 1,\n      seconds: 59\n    };\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds: seconds - 1\n  };\n}\n\nfunction countUpOneSecond (hours, minutes, seconds) {\n  if (seconds === 59) {\n    if (minutes === 59) {\n      if (hours === 59) {\n        // Counter finished\n        return null;\n      }\n      return {\n        hours: hours + 1,\n        minutes: 0,\n        seconds: 0\n      };\n    }\n    return {\n      hours,\n      minutes: minutes + 1,\n      seconds: 0\n    };\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds: seconds + 1\n  };\n}\n","import React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport Timer from \"../components/timer\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport GoalUtils from \"../utils/goal-utils\";\nimport { Link , useLocation } from \"react-router-dom\";\n\nconst isDistracted = false;\n\nconst TimerScreenRenderer = ({\n  onTimerTick,\n  onTimerModify,\n  onTimerFinish,\n  onTimerStart,\n  onTimerStop,\n  running,\n  earnedBlocks,\n  currentBlock,\n  goal\n}) => (\n  <View style={{ display: \"flex\", flexDirection: \"column\", maxWidth: 267, backgroundColor: \"black\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <View style={{ paddingHorizontal: 20, border: \"1px solid rgb(38,38,38)\", paddingBottom: 15, paddingTop: 5, minHeight: 177 }}>\n      <Timer\n        hours={1}\n        minutes={0}\n        seconds={0}\n        running={running}\n        paused={isDistracted}\n        onTick={onTimerTick}\n        onModify={onTimerModify}\n        onFinish={onTimerFinish}\n      />\n      <Text style={{ color: \"#999999\", textAlign: \"left\", fontStyle: \"oblique\", fontSize: 13 }}>\n        {\"Focus on your task for 1 hour to earn \"}\n        <Text style={{ color: \"white\", fontStyle: \"oblique\" }}>{\"1 block\"}</Text>\n        <Text style={{ fontWeight: \"bold\", color: \"white\", fontStyle: \"normal\" }}>{\" ( \"}</Text>\n        <View style={{ height: 10, width: 10, backgroundColor: \"rgb(97,196,85)\" }} />\n        <Text style={{ fontWeight: \"bold\", color: \"white\", fontStyle: \"normal\" }}>{\" )\"}</Text>\n      </Text>\n\n      <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginTop: 10 }}>\n        <Text style={{ color: \"#999999\" }}>Today's Goal ( </Text>\n        <Link to={`/goals${useLocation().search}`} style={{ marginBottom: 5 }}>\n          <Text style={{ color: \"rgb(209,63,87)\",  }}>\n            Set\n          </Text>\n        </Link>\n        <Text style={{ color: \"#999999\" }}> )</Text>\n      </View>\n\n      <View style={{ display: \"flex\", flexDirection: \"row\", height: 50 }}>\n        {\n          (running || isDistracted) || (GoalUtils.getTodaysBlockGoal(goal) !== 0)\n            ? (\n              <TimeBlocks\n                earnedBlocks={earnedBlocks}\n                currentBlock={currentBlock}\n                goal={goal}\n              />\n            ) : (\n              <View style={{ width: \"100%\", justifyContent: \"center\" }}>\n                <Text style={{ color: \"#999999\" }}>No goal</Text>\n              </View>\n            )\n        }\n      </View>\n    </View>\n    <View style={{ marginVertical: 40 }}>\n      <TouchableOpacity\n        style={{ \n          backgroundColor: running || isDistracted\n            ? \"rgb(28,35,54)\"\n            : \"rgb(209,63,87)\",\n          borderRadius: 80,\n          width: 80,\n          height: 80,\n          display: \"flex\",\n          justifyContent: \"center\",\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 1,\n          elevation: 2\n        }}\n        onPress={running || isDistracted ? onTimerStop : onTimerStart}\n      >\n        <Text style={{ fontWeight: \"bold\", marginBottom: 2, color: \"white\" }}>\n          {running || isDistracted ? \"Give up\" : \"Start\"}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  </View>\n);\n\nexport default TimerScreenRenderer;\n\n// _renderDistractionTimer = () => (\n//   <Timer\n//     hours={0}\n//     minutes={0}\n//     seconds={0}\n//     isCountUp\n//     small\n//     onTick={(dHours, dMinutes, dSeconds) => this.setState({ dHours, dMinutes, dSeconds })}\n//     running={isDistracted}\n//     onFinish={this._onDistractionFinish}\n//   />\n// );\n// _renderDistractions = () => (\n//   <div style={{ fontSize: 16 }}>\n//     <p style={{ fontSize: 22 }}>Distractions</p>\n//     {this.state.distractions.length === 0 && <p>No distractions</p>}\n//     {this.state.distractions.map(({ elapsedHours, elapsedMinutes, elapsedSeconds, createdAt }) => (\n//       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n//         <p>At {moment(createdAt).format('hh:mm:ss')}</p>\n//         <p>{elapsedHours} : {elapsedMinutes} : {elapsedSeconds}</p>\n//       </div>\n//     ))}\n//   </div>\n// );\n// _onLogDistraction = () => this.setState({\n//   distractions: [\n//     {\n//       createdAt: moment().toISOString(),\n//       hours: this.state.hours,\n//       minutes: this.state.minutes,\n//       seconds: this.state.seconds,\n//       elapsedHours: 0,\n//       elapsedMinutes: 0,\n//       elapsedSeconds: 0\n//     },\n//     ...this.state.distractions\n//   ]\n// });\n// _onDistractionStart = () => this.setState({ running: false, isDistracted: true });\n// _onDistractionFinish = () => {\n//   const { dHours, dMinutes, dSeconds } = this.state;\n//   this._logDistraction(dHours, dMinutes, dSeconds);\n//   this._resetDistraction();\n//   this.setState({ running: true });\n// };\n// _resetDistraction = () => this.setState({ dHours: 0, dMinutes: 0, dSeconds: 0, isDistracted: false });\n// _logDistraction = (hours, minutes, seconds) => {\n//   const { distractions } = this.state;\n//   const newDistraction = {\n//     createdAt: moment().toISOString(),\n//     hours,\n//     minutes,\n//     seconds,\n//     elapsedHours: hours,\n//     elapsedMinutes: minutes,\n//     elapsedSeconds: seconds\n//   };\n//   this.setState({ distractions: [newDistraction, ...distractions] });\n// };\n","import React from \"react\";\nimport moment from \"moment\";\nimport TimerScreenRenderer from \"./timer-screen-renderer\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport AppContext from \"../app-context\";\nimport GoalUtils from \"../utils/goal-utils\";\n\nclass TimerScreenContainer extends React.Component {\n  state = {\n    hours: 1,\n    minutes: 0,\n    seconds: 0,\n    running: false,\n    isDistracted: false,\n    currentBlock: null,\n    setHours: 1,\n    setMinutes: 0,\n    setSeconds: 0,\n    earnedBlocks: [],\n    // Below not used\n    dHours: 0,\n    dMinutes: 0,\n    dSeconds: 0,\n    distractions: [],\n    workdayStartTime: null,\n    workdayEndTime: null\n  };\n\n  componentDidMount() {\n    this._fetchBlocks();\n    this._fetchGoals();\n  }\n\n  render() {\n    const {\n      running,\n      currentBlock,\n      earnedBlocks,\n      goal\n    } = this.state;\n    return (\n      <TimerScreenRenderer\n        onTimerStart={this._startBlock}\n        onTimerStop={() => this._endBlock()}\n        onTimerTick={this._onTimerTick}\n        onTimerModify={this._onTimerModify}\n        onTimerFinish={this._onTimerFinish}\n        running={running}\n        currentBlock={currentBlock}\n        earnedBlocks={earnedBlocks}\n        goal={goal}\n      />\n    );\n  }\n\n  _getNumHourlyBlocksBetweenTimes = (startTime, endTime) => moment.duration(moment(endTime).diff(startTime)).asHours();\n\n  _fetchBlocks = async () => {\n    const { remoteService } = this.props;\n    const { earnedBlocks } = await remoteService.fetchBlocks();\n    if (earnedBlocks) {\n      this.setState({ earnedBlocks });\n    }\n  };\n\n  _fetchGoals = async () => {\n    const { remoteService } = this.props;\n    const goals = await remoteService.fetchGoals();\n    if (goals && goals.length) {\n      this.setState({ goal: goals[0] });\n    }\n  };\n\n  _startBlock = () => {\n    const { running, isDistracted, distractions } = this.state;\n    if (!isDistracted) {\n      this.setState({\n        running: !running,\n        distractions: !running ? [] : distractions,\n        currentBlock: {\n          hours: 1,\n          minutes: 0,\n          seconds: 0,\n          createdAt: moment().toISOString(),\n          startTime: moment().toISOString(),\n          endTime: null,\n          completed: false\n        }\n      });\n    }\n  };\n\n  _endBlock = (completed = false) => {\n    const {\n      hours,\n      minutes,\n      seconds\n      // setHours\n      // setMinutes,\n      // setSeconds\n    } = this.state;\n    this.setState({ running: false, isDistracted: false });\n    this._logTimeBlock(\n      hours,\n      59 - minutes,\n      59 - seconds,\n      completed\n    );\n  };\n\n  _onTimerTick = (hours, minutes, seconds) => this.setState({\n    hours,\n    minutes,\n    seconds,\n    currentBlock: {\n      ...this.state.currentBlock,\n      hours,\n      minutes,\n      seconds\n    }\n  });\n\n  _onTimerModify = ({ hours, minutes, seconds }) => this.setState({\n    hours,\n    minutes,\n    seconds,\n    setHours: hours,\n    setMinutes: minutes,\n    setSeconds: seconds\n  });\n\n  _onTimerFinish = () => this._endBlock(true);\n\n  _renderEarnedBlocks = blocks => <TimeBlocks blocks={blocks} />;\n\n  _logTimeBlock = (elapsedHours, elapsedMinutes, elapsedSeconds, completed = false) => {\n    const { setHours, setMinutes, setSeconds, currentBlock } = this.state;\n    const { remoteService } = this.props;\n    if (remoteService) {\n      remoteService.addTimeBlock({\n        ...currentBlock,\n        hours: setHours,\n        minutes: setMinutes,\n        seconds: setSeconds,\n        elapsedHours,\n        elapsedMinutes,\n        elapsedSeconds,\n        endTime: moment().toISOString(),\n        distractions: this.state.distractions,\n        completed\n      });\n    }\n  };\n\n  // _renderDistractions = () => (\n  //   <div style={{ fontSize: 16 }}>\n  //     <p style={{ fontSize: 22 }}>Distractions</p>\n  //     {this.state.distractions.length === 0 && <p>No distractions</p>}\n  //     {this.state.distractions.map(({ elapsedHours, elapsedMinutes, elapsedSeconds, createdAt }) => (\n  //       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n  //         <p>At {moment(createdAt).format('hh:mm:ss')}</p>\n  //         <p>{elapsedHours} : {elapsedMinutes} : {elapsedSeconds}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  // _onStartTimeChange = workdayStartTime => this.setState({ workdayStartTime });\n  // _onEndTimeChange = workdayEndTime => this.setState({ workdayEndTime });\n}\n\nexport const TimerScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <TimerScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n)\n","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text, Dimensions } from \"react-native\";\nimport TimeBlocks from \"../components/time-blocks\";\n\nexport class LogScreenRenderer extends React.Component {\n  render() {\n    const { days, goal } = this.props;\n    return (\n      <View style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: Dimensions.get(\"window\").height - 60,\n        overflow: \"scroll\",\n        width: \"100%\",\n        alignItems: \"center\",\n        backgroundColor: \"black\",\n        paddingBottom: 60\n      }}>\n        {days.map(day => (\n          <View style={{ height: 70, borderBottom: \"1px solid rgb(38,38,38)\", paddingTop: 10, width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\n            <View style={{ maxWidth: 267 }}>\n              <Text style={{ color: \"white\"}}>{moment(day.date).format(\"D MMMM YYYY\")}</Text>\n              <TimeBlocks earnedBlocks={day.blocks.filter(block => block.completed)} goal={goal} />\n            </View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text } from \"react-native\";\nimport AppContext from \"../app-context\";\nimport { LogScreenRenderer } from \"./log-screen-renderer\";\n\nclass LogScreenContainer extends React.Component {\n  state = {\n    startedBlocks: [],\n    earnedBlocks: [],\n    goal: null\n  };\n\n  async componentDidMount() {\n    this._fetchBlocks();\n    this._fetchGoal();\n  }\n\n  render() {\n    const { startedBlocks, earnedBlocks, goal } = this.state;\n    return (\n      <View style={{ width: \"100%\" }}>\n        <Text style={{ color: \"rgb(204, 204, 204)\", fontSize: 30, textAlign: \"center\", marginVertical: 15, marginHorizontal: 40, fontWeight: \"bold\" }}>\n          Log\n        </Text>\n        <LogScreenRenderer\n          days={this._getDays([...startedBlocks, ...earnedBlocks])}\n          goal={goal}\n        />\n      </View>\n    );\n  }\n\n  _fetchBlocks = async () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      const { startedBlocks, earnedBlocks } = await remoteService.fetchBlocks();\n      this.setState({ startedBlocks, earnedBlocks });\n    }\n  }\n\n  _fetchGoal = async () => {\n    const { remoteService } = this.props;\n    const goals = await remoteService.fetchGoals();\n    if (goals && goals.length) {\n      this.setState({ goal: goals[0] });\n    }\n  };\n\n  _getDays = blocks => {\n    const days = {};\n    let startDate = null;\n    let endDate = null;\n\n    for (const block of blocks) {\n      const dayMoment = moment(block.startTime);\n      const dayKey = dayMoment.format(\"DD MM YYYY\");\n      const day = days[dayKey];\n\n      // Group blocks by day\n      if (day) {\n        day.blocks.push(block);\n      } else {\n        days[dayKey] = { date: block.startTime, blocks: [block] };\n      }\n\n      // Set lowest and highest days\n      if (!startDate) {\n        startDate = block.startTime;\n      }\n      if (!endDate) {\n        endDate = block.startTime;\n      }\n      if (dayMoment.isBefore(moment(startDate))) {\n        startDate = block.startTime;\n      }\n      if (dayMoment.isAfter(moment(startDate))) {\n        endDate = block.startTime;\n      }\n    }\n\n    const sortedDates = Object.keys(days).sort((a,b) => moment(a, \"DD MM YYY\") - moment(b, \"DD MM YYYY\"));\n    return sortedDates.map(date => days[date]);\n  }\n\n  _getContiguousDays = (startDate, endDate) => {\n    const dayList = [];\n    let currentDay = moment(startDate);\n    while (currentDay.format(\"DD MM YYYY\") !== moment(endDate).format(\"DD MM YYYY\")) {\n      dayList.push(currentDay.format(\"DD MM YYYY\"));\n      currentDay = currentDay.add(1, \"days\");\n    }\n    return dayList;\n  }\n}\n\nexport const LogScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <LogScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n)\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  TouchableHighlight\n} from \"react-native\";\n\nconst GoalMode = {\n  Everyday: \"Everyday\",\n  WeekdayWeekEnd: \"WeekdayWeekend\",\n  Custom: \"Custom\"\n};\n\nconst Days = {\n  \"mon\": \"Monday\",\n  \"tue\": \"Tuesday\",\n  \"wed\": \"Wednesday\",\n  \"thu\": \"Tuesday\",\n  \"fri\": \"Friday\",\n  \"sat\": \"Saturday\",\n  \"sun\": \"Sunday\"\n};\n\nconst BlurContent = ({ blur, children }) => (\n  <View style={{ opacity: blur ? 0.3 : 1 }}>\n    {children}\n  </View>\n);\n\n\nexport class GoalsScreenRenderer extends React.Component {\n  render() {\n    const { goalMode, goal, onChangeGoalMode, onSaveGoal } = this.props;\n    return (\n      <TouchableWithoutFeedback onPress={() => onChangeGoalMode(null)}>\n        <View style={styles.container}>\n          <Text style={styles.titleText}>Goals</Text>\n          <BlurContent blur={goalMode !== GoalMode.Everyday}>\n            <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Everyday)}>\n              <View style={styles.form}>\n                <View style={styles.formLabel}>\n                  <Text style={styles.text}>Everyday</Text>\n                </View>\n                <View style={styles.formInput}>\n                  {this._renderTextInput(\n                    goal.everyday,\n                    GoalMode.Everyday,\n                    e => this._onSetValue(e, \"everyday\"),\n                    true /* shouldAutoFocus */\n                  )}\n                </View>\n                <TouchableHighlight\n                  style={styles.clearButton}\n                  onPress={this._onClearEveryday}\n                >\n                  <Text style={styles.text}>Clear</Text>\n                </TouchableHighlight>\n              </View>\n            </TouchableWithoutFeedback>\n          </BlurContent>\n\n          <View style={{ marginTop: 10, marginBottom: 10 }}>\n            <Text>OR</Text>\n          </View>\n\n          <BlurContent blur={goalMode !== GoalMode.WeekdayWeekEnd}>\n            <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.WeekdayWeekEnd)}>\n              <View>\n                <View style={styles.form}>\n                  <View style={styles.formLabel}>\n                    <Text style={styles.text}>Weekdays</Text>\n                  </View>\n                  <View style={styles.formInput}>\n                    {this._renderTextInput(\n                      goal.weekdays,\n                      GoalMode.WeekdayWeekEnd,\n                      e => this._onSetValue(e, \"weekdays\"),\n                      true /* shouldAutoFocus */\n                    )}\n                  </View>\n                  <TouchableHighlight\n                    style={styles.clearButton}\n                    onPress={this._onClearWeekdays}\n                  >\n                    <Text style={styles.text}>Clear</Text>\n                  </TouchableHighlight>\n                </View>\n                <View style={styles.form}>\n                  <View style={styles.formLabel}>\n                    <Text style={styles.text}>Weekends</Text>\n                  </View>\n                  <View style={styles.formInput}>\n                    {this._renderTextInput(\n                      goal.weekends,\n                      GoalMode.WeekdayWeekEnd,\n                      e => this._onSetValue(e, \"weekends\")\n                    )}\n                  </View>\n                  <TouchableHighlight\n                    style={styles.clearButton}\n                    onPress={this._onClearWeekends}\n                  >\n                    <Text style={styles.text}>Clear</Text>\n                  </TouchableHighlight>\n                </View>\n              </View>\n            </TouchableWithoutFeedback>\n          </BlurContent>\n\n          <View style={{ width: \"100%\", height: 1, borderBottom: \"1px solid black\", marginTop: 10 }} />\n\n          <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Custom)}>\n            <View>\n              <View style={{ display: \"flex\", flexDirection: \"row\", marginVertical: 10, justifyContent: \"center\", position: \"relative\" }}>\n                <Text style={styles.text}>Set Goals</Text>\n                <TouchableHighlight\n                  style={{ position: \"absolute\", right: 0, width: \"20%\" }}\n                  onPress={this._onClearCustom}\n                >\n                  <Text style={styles.text}>Clear</Text>\n                </TouchableHighlight>\n              </View>\n              <View>\n              {this._renderDay(\"mon\", true)}\n              {this._renderDay(\"tue\")}\n              {this._renderDay(\"wed\")}\n              {this._renderDay(\"thu\")}\n              {this._renderDay(\"fri\")}\n              {this._renderDay(\"sat\")}\n              {this._renderDay(\"sun\")}\n              </View>\n            </View>\n          </TouchableWithoutFeedback>\n\n          <TouchableHighlight style={{ marginVertical: 30 }} onPress={onSaveGoal}>\n            <View style={{ backgroundColor: \"rgb(209,63,87)\", paddingVertical: 5 }}>\n              <Text style={styles.text}>Save</Text>\n            </View>\n          </TouchableHighlight>\n        </View>\n      </TouchableWithoutFeedback>\n    )\n  }\n\n  _onClearEveryday = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearEveryday: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      everyday: null,\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null,\n      sat: null,\n      sun: null\n    });\n  }\n\n  _onClearWeekdays = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearWeekdays: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      weekdays: null,\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null\n    });\n  }\n\n  _onClearWeekends = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearWeekends: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      weekends: null,\n      sat: null,\n      sun: null\n    });\n  }\n\n  _onClickSection = goalMode => {\n    const { onChangeGoalMode } = this.props;\n    if (!onChangeGoalMode) {\n      return;\n    }\n    onChangeGoalMode(goalMode);\n  }\n\n  _onClearCustom = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearCustom: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoal({\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null,\n      sat: null,\n      sun: null\n    });\n    onChangeGoalMode(null);\n  }\n\n  _renderDay = (day, autoFocusInput = false) => {\n    const { goal } = this.props;\n    return (\n      <View style={styles.form}>\n        <View style={styles.formLabel}>\n          <Text style={styles.text}>{Days[day]}</Text>\n        </View>\n        <View style={styles.formInput}>\n          {this._renderTextInput(\n            goal[day],\n            GoalMode.Custom,\n            e => this._onSetValue(e, day),\n            autoFocusInput\n          )}\n        </View>\n        <View style={styles.clearButton} />\n      </View>\n    )\n  };\n\n  _renderTextInput = (value, goalMode, onChange, shouldAutoFocus = false) => (\n    goalMode === this.props.goalMode\n      ? <TextInput value={value} style={styles.formTextInput} onChange={onChange} autoFocus={shouldAutoFocus} keyboardType={\"numeric\"} />\n      : <Text style={styles.text}>{value !== null ? value : \"Not set\"}</Text>\n  );\n\n  _onSetValue = (event, formType) => {\n    const { onChangeGoal } = this.props;\n    if (!onChangeGoal) {\n      return;\n    }\n    const value = event && event.target && event.target.value;\n    if (!formType) {\n      return;\n    }\n    const parsedValue = value.length === 0 || isNaN(parseInt(value)) ? null : parseInt(value);\n    switch (formType) {\n      case \"everyday\":\n        onChangeGoal({\n          everyday: parsedValue,\n          mon: parsedValue,\n          tue: parsedValue,\n          wed: parsedValue,\n          thu: parsedValue,\n          fri: parsedValue,\n          sat: parsedValue,\n          sun: parsedValue\n        });\n        break;\n      case \"weekdays\":\n        onChangeGoal({\n          weekdays: parsedValue,\n          mon: parsedValue,\n          tue: parsedValue,\n          wed: parsedValue,\n          thu: parsedValue,\n          fri: parsedValue\n        });\n        break;\n      case \"weekends\":\n        onChangeGoal({\n          weekends: parsedValue,\n          sat: parsedValue,\n          sun: parsedValue\n        });\n        break;\n      default:\n        onChangeGoal({ [formType]: parsedValue });\n        break;\n    }\n  }\n\n  _unsetAllWithOverride = override => this.props.onChangeGoal && this.props.onChangeGoal({\n    everyday: null,\n    weekdays: null,\n    weekends: null,\n    ...override || {}\n  });\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: 267,\n    height: \"100%\",\n    backgroundColor: \"black\",\n    paddingVertical: 20\n  },\n  titleText: {\n    color: \"white\",\n    fontSize: 26,\n    marginVertical: 10\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  formLabel: {\n    width: \"50%\",\n    textAlign: \"left\",\n    paddingLeft: 10\n  },\n  formInput: {\n    width: \"30%\",\n    paddingRight: 10\n  },\n  clearButton: {\n    width: \"20%\"\n  },\n  formTextInput: {\n    color: \"white\",\n    textAlign: \"center\",\n    borderBottom: \"1px solid black\"\n  },\n  text: {\n    color: \"white\"\n  }\n});\n","import React from \"react\";\nimport AppContext from \"../app-context\";\nimport { GoalsScreenRenderer } from \"./goals-renderer\";\n\nclass GoalsScreenContainer extends React.Component {\n  state = {\n    goals: [],\n    id: null,\n    goalMode: null,\n    everyday: null,\n    weekdays: null,\n    weekends: null,\n    mon: null,\n    tue: null,\n    wed: null,\n    thu: null,\n    fri: null,\n    sat: null,\n    sun: null\n  };\n\n  componentDidMount() {\n    this._fetchGoals();\n  }\n\n  render = () => {\n    const {\n      goalMode,\n      everyday,\n      weekdays,\n      weekends,\n      mon,\n      tue,\n      wed,\n      thu,\n      fri,\n      sat,\n      sun\n    } = this.state;\n    return (\n      <GoalsScreenRenderer\n        goalMode={goalMode}\n        goal={{\n          everyday,\n          weekdays,\n          weekends,\n          mon,\n          tue,\n          wed,\n          thu,\n          fri,\n          sat,\n          sun\n        }}\n        onChangeGoal={this._onChangeGoal}\n        onChangeGoalMode={this._onChangeGoalMode}\n        onSaveGoal={this._onSaveGoal}\n      />\n    );\n  }\n\n  _getCurrentGoal = () => ({\n    id: this.state.id,\n    everyday: this.state.everyday,\n    weekdays: this.state.weekdays,\n    weekends: this.state.weekends,\n    mon: this.state.mon,\n    tue: this.state.tue,\n    wed: this.state.wed,\n    thu: this.state.thu,\n    fri: this.state.fri,\n    sat: this.state.sat,\n    sun: this.state.sun\n  });\n\n  _onSaveGoal = () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      remoteService.updateGoal(this._getCurrentGoal())\n    }\n  }\n\n  _fetchGoals = async () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      const goals = await remoteService.fetchGoals();\n      if (goals && goals.length > 0) {\n        this.setState({ goals, ...goals[0] });\n      }\n    }\n  }\n\n  _onChangeGoalMode = goalMode => this.setState({ goalMode });\n\n  _onChangeGoal = goal => this.setState({ ...goal });\n}\n\nexport const GoalsScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <GoalsScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppRegistry } from 'react-native';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nAppRegistry.registerComponent('App', () => App);\n\nAppRegistry.runApplication('App', {\n  initialProps: {},\n  rootTag: document.getElementById('root')\n});\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}