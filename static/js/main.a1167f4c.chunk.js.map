{"version":3,"sources":["app-context.js","auth-screen/auth-error-messages.js","utils/goal-utils.js","components/time-blocks.jsx","auth-screen/auth-screen-container.jsx","App.js","auth-screen/index.js","auth-screen/auth-screen-renderer.jsx","components/timer.jsx","timer-screen/timer-screen-renderer.jsx","timer-screen/timer-screen-container.jsx","goals-screen/goals-renderer.jsx","goals-screen/goals-container.jsx","settings-screen/settings-screen-renderer.jsx","settings-screen/settings-screen-container.jsx","log-screen/log-screen-renderer.jsx","log-screen/log-screen-container.jsx","index.js"],"names":["AppContext","React","createContext","ErrorMessage","Unexpected","PasswordMismatch","InvalidLogin","FatalError","GoalUtils","goal","parsedGoal","everyday","mon","tue","wed","thu","fri","sat","sun","weekdays","weekends","dayOfWeek","moment","format","toLowerCase","parsedGoalBlocks","parseInt","isNaN","BlockProgress","progressPercent","marks","style","position","height","width","marginRight","marginTop","backgroundColor","Math","max","ceil","map","mark","left","top","getBlockProgress","block","hours","minutes","seconds","TimeBlock","isGoal","completed","TimeBlocks","earnedBlocks","currentBlock","blockGoal","getTodaysBlockGoal","length","display","flexWrap","flexDirection","Array","from","AuthScreenContainer","firebase","global","state","error","_onSignup","email","password","authService","props","signUp","_goToHome","errorMessage","setState","_onSignin","console","log","signIn","history","replace","this","onSignup","onSignin","Component","AuthScreen","useHistory","FIREBASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseService","config","username","fetchBlocks","a","dateFormat","blocks","collection","firestore","where","get","forEach","doc","push","id","data","todaysBlocks","filter","startTime","isSame","startedBlocks","fetchGoals","goals","addTimeBlock","add","newBlock","updateTimeBlock","update","addGoal","updateGoal","setCurrentUser","user","uid","initializeApp","analytics","AuthService","operations","SignIn","SignUp","getCurrentUser","auth","currentUser","onSuccess","onError","createUserWithEmailAndPassword","then","catch","errorCode","code","message","signInWithEmailAndPassword","signOut","onAuthStateChanged","cb","_setAuthPersistence","setPersistence","Auth","Persistence","LOCAL","App","render","authLoading","className","Provider","value","remoteService","service","basename","Dimensions","alignItems","path","to","borderTop","bottom","justifyContent","window","location","search","paddingHorizontal","color","fontSize","_setCurrentUser","SignupScreenRenderer","isSignup","repeatPassword","_renderButtons","_renderSignupButtons","_renderSigninButtons","styles","button","onPress","buttonText","subButton","_onEmailChange","e","target","_onPasswordChange","_onRepeatPasswordChange","maxWidth","appTitle","subText","textInput","placeholder","onChange","autoFocus","keyboardType","autoCompleteType","secureTextEntry","StyleSheet","create","marginBottom","paddingVertical","border","Timer","intervalTimer","componentDidMount","setInterval","_onIntervalFire","componentWillUnmount","clearInterval","running","onFinish","isCountUp","onTick","result","countUpOneSecond","countDownOneSecond","n","z","join","commonStyles","small","pad","getDerivedStateFromProps","paused","TimerScreenRenderer","onTimerTick","onTimerModify","onTimerFinish","onTimerStart","onTimerStop","duration","diff","floor","asHours","asMinutes","asSeconds","blockDiff","View","paddingBottom","paddingTop","minHeight","onModify","Text","textAlign","fontStyle","fontWeight","marginVertical","TouchableOpacity","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","isWithinBlock","TimerScreenContainer","isDistracted","currentBlockId","setHours","setMinutes","setSeconds","dHours","dMinutes","dSeconds","distractions","workdayStartTime","workdayEndTime","_fetchBlocks","runningBlocks","stopped","sortedBlocks","b","sort","lastBlock","runningBlock","_fetchGoals","_startBlock","createdAt","toISOString","endTime","_logTimeBlock","_endBlock","_onTimerStop","_onTimerTick","_onTimerModify","_onTimerFinish","elapsedHours","elapsedMinutes","elapsedSeconds","updatedBlock","addedBlock","TimerScreen","Consumer","GoalMode","Days","BlurContent","blur","children","opacity","GoalsScreenRenderer","_onClearEveryday","onChangeGoal","onChangeGoalMode","_onClearWeekdays","_onClearWeekends","_onClickSection","goalMode","_onClearCustom","_renderDay","day","autoFocusInput","form","formLabel","text","formInput","_renderTextInput","_onSetValue","clearButton","shouldAutoFocus","TextInput","formTextInput","event","formType","parsedValue","_unsetAllWithOverride","override","onSaveGoal","TouchableWithoutFeedback","marginHorizontal","TouchableHighlight","borderBottom","right","container","titleText","paddingLeft","paddingRight","GoalsScreenContainer","_onChangeGoal","_onChangeGoalMode","_onSaveGoal","_getCurrentGoal","GoalsScreen","SettingsScreenRenderer","onSignOut","screenTitle","settingItem","centeredSetting","SettingsScreenContainer","_onSignOut","SettingsScreen","LogItem","earnedBlocksCount","goalCount","goalPercent","date","marginLeft","toFixed","LogScreenRenderer","days","overflow","LogScreenContainer","_fetchGoal","_getDays","startDate","endDate","dayMoment","dayKey","isBefore","isAfter","Object","keys","_getContiguousDays","dayList","currentDay","LogScreen","AppRegistry","registerComponent","runApplication","initialProps","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.a1167f4c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext({});\nexport default AppContext;\n","export const ErrorMessage = {\n  Unexpected: \"Something went wrong\",\n  PasswordMismatch: \"Please make sure the passwords match\",\n  InvalidLogin: \"Invalid login. Please try again\",\n  FatalError: \"Fatal error\"\n};\n","import moment from \"moment\";\n\nexport default class GoalUtils {\n  static getTodaysBlockGoal(goal) {\n    if (!goal) {\n      return 0;\n    }\n    let parsedGoal = goal;\n    if (goal.everyday !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        mon: goal.everyday,\n        tue: goal.everyday,\n        wed: goal.everyday,\n        thu: goal.everyday,\n        fri: goal.everyday,\n        sat: goal.everyday,\n        sun: goal.everyday\n      };\n    }\n    if (goal.weekdays !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        mon: goal.weekdays,\n        tue: goal.weekdays,\n        wed: goal.weekdays,\n        thu: goal.weekdays,\n        fri: goal.weekdays\n      };\n    }\n    if (goal.weekends !== null) {\n      parsedGoal = {\n        ...parsedGoal,\n        sat: goal.weekends,\n        sun: goal.weekends\n      }\n    }\n    const dayOfWeek = moment().format(\"ddd\").toLowerCase();\n    const parsedGoalBlocks = parseInt(parsedGoal[dayOfWeek]);\n    return isNaN(parsedGoalBlocks) ? 0 : parsedGoalBlocks;\n  }\n}\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport GoalUtils from \"../utils/goal-utils\";\n\nconst BlockProgress = ({ progressPercent, marks }) => (\n  <div style={{ position: \"relative\", height: 13, width: 13, marginRight: 2, marginTop: 2, backgroundColor: \"gray\" }}>\n    <div style={{ width: `${Math.max(Math.ceil(progressPercent), 3)}%`, backgroundColor: \"rgb(97,196,85)\", height: \"100%\" }} />\n    {marks && marks.map(mark => (\n      <div style={{ position: \"absolute\", left: `${mark}%`, height: \"100%\", width: 2, top: 0, backgroundColor: \"red\" }} />  \n    ))}\n  </div>\n);\n\nconst getBlockProgress = block => 100 - (block.hours * 60 + block.minutes + (block.seconds/60.0))/60.0 * 100;\n\nconst TimeBlock = ({ block, isGoal }) => block && !block.completed\n  ? <BlockProgress progressPercent={getBlockProgress(block)} isGoal={isGoal} />\n  : (\n    <View style={{\n      width: 13,\n      height: 13,\n      marginRight: 2,\n      marginTop: 2,\n      backgroundColor: block\n        ? \"rgb(97,196,85)\"\n        : \"gray\"\n    }} />\n  );\n\nconst TimeBlocks = ({ earnedBlocks, currentBlock, goal }) => {\n  const blockGoal = Math.max(\n    GoalUtils.getTodaysBlockGoal(goal) - earnedBlocks.length - (currentBlock ? 1 : 0),\n    0\n  );\n  return (\n    <View style={{ display: \"flex\", flexWrap: \"wrap\", flexDirection: \"row\" }}>\n      {earnedBlocks.map(block => <TimeBlock block={block} />)}\n      {currentBlock && <TimeBlock block={currentBlock} isGoal={blockGoal - 1 > 0} />}\n      {Array.from(new Array(blockGoal)).map(() => <TimeBlock isGoal />)}\n    </View>\n  );\n};\n\nexport default TimeBlocks;\n","import React from \"react\";\nimport AppContext from \"../app-context\";\nimport { useHistory } from \"react-router-dom\";\nimport { SignupScreenRenderer } from \"./auth-screen-renderer\";\nimport { ErrorMessage } from \"./auth-error-messages\";\n\nclass AuthScreenContainer extends React.Component {\n  firebase = global.firebase;\n\n  state = {\n    error: null\n  };\n\n  render() {\n    const { error } = this.state;\n    return (\n      <SignupScreenRenderer\n        onSignup={this._onSignup}\n        onSignin={this._onSignin}\n        error={error}\n      />\n    );\n  }\n\n  _onSignup = (email, password) => {\n    const { authService } = this.props;\n    if (email.length === 0 || password.length === 0) {\n      return;\n    }\n    if (authService) {\n      authService.signUp(\n        email,\n        password,\n        this._goToHome,\n        errorMessage => this.setState({ error: errorMessage })\n      );\n    }\n  };\n\n  _onSignin = (email, password) => {\n    const { authService } = this.props;\n    console.log(\">>>> signdnfjsn\", authService )\n    if (authService) {\n\n      authService.signIn(\n        email,\n        password,\n        this._goToHome,\n        () => this.setState({ error: ErrorMessage.InvalidLogin })\n      );\n    }\n  }\n\n  _goToHome = () => {\n    const { history } = this.props;\n    if (!history) {\n      this.setState({ error: ErrorMessage.FatalError });\n    }\n    history.replace(\"/\");\n  }\n}\n\nexport const AuthScreen = props => {\n  const history = useHistory();\n  return (\n    <AppContext>\n      {({ authService }) => <AuthScreenContainer {...props} authService={authService} history={history} />}\n    </AppContext>\n  );\n};\n","import React from \"react\";\nimport { View, Text, Dimensions }from \"react-native\";\nimport moment from \"moment\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport './App.css';\nimport AppContext from \"./app-context\";\nimport { TimerScreen } from \"./timer-screen\";\nimport { GoalsScreen } from \"./goals-screen\";\nimport { LogScreen } from \"./log-screen\";\nimport { AuthScreen } from \"./auth-screen\";\nimport { SettingsScreen } from \"./settings-screen\";\n\nconst FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyCBZrwH6IoMDo-jW2Ydu00z0FJMK3wQdTI\",\n  authDomain: \"timeblocks-bb1cc.firebaseapp.com\",\n  databaseURL: \"https://timeblocks-bb1cc.firebaseio.com\",\n  projectId: \"timeblocks-bb1cc\",\n  storageBucket: \"timeblocks-bb1cc.appspot.com\",\n  messagingSenderId: \"689367456633\",\n  appId: \"1:689367456633:web:6cb0b27d54e4c45f9bada8\",\n  measurementId: \"G-92KBT48GWG\"\n};\n\nclass FirebaseService {\n  firebase = global.firebase;\n\n  constructor(config, username = null) {\n    // Initialize Firebase\n    this.firebase.initializeApp(config);\n    this.firebase.analytics();\n    this.username = username;\n  }\n\n  fetchBlocks = async () => {\n    const dateFormat = \"DD MM YYYY\";\n    if (this.firebase && this.username) {\n      const blocks = [];\n      const collection = this.firebase.firestore().collection(\"blocks\")\n      const snapshot = await (this.username\n        ? collection.where(\"username\", \"==\", this.username).get()\n        : collection.get());\n      snapshot.forEach(doc => blocks.push({ id: doc.id, ...doc.data() }));\n      console.log(`Log: Fetched ${blocks.length} blocks`, blocks);\n      const todaysBlocks = blocks\n        .filter(block => moment(moment(block.startTime).format(dateFormat)).isSame(moment().format(dateFormat)));\n        console.log(`Log: Fetched ${todaysBlocks.length} today's blocks`, todaysBlocks)\n      const startedBlocks = blocks.filter(block => !block.completed);\n      const earnedBlocks = blocks.filter(block => block.completed);\n      console.log(`Log: Filtered ${startedBlocks.length} started blocks`, startedBlocks);\n      console.log(`Log: Filtered ${earnedBlocks.length} earned blocks`, earnedBlocks);\n      return { startedBlocks, earnedBlocks, todaysBlocks };\n    }\n    return null;\n  };\n\n  fetchGoals = async () => {\n    if (this.firebase && this.username) {\n      const goals = [];\n      const collection = this.firebase.firestore().collection(\"goals\")\n      const snapshot = await (this.username\n        ? collection.where(\"username\", \"==\", this.username).get()\n        : collection.get());\n      snapshot.forEach(doc => goals.push({ ...doc.data(), id: doc.id }));\n      console.log(`Log: Fetched ${goals.length} goals`, goals);\n      return goals;\n    }\n    return null;\n  };\n\n  addTimeBlock = async block => {\n    if (this.firebase && this.username) {\n      const newBlock = await this.firebase.firestore()\n        .collection(\"blocks\")\n        .add({\n          ...block,\n          username: this.username\n        });\n      console.log(\"Log: 1 new block created\", newBlock);\n      return newBlock;\n    }\n  };\n\n  updateTimeBlock = block => {\n    if (this.firebase && this.username) {\n      this.firebase.firestore()\n        .collection(\"blocks\")\n        .doc(block.id)\n        .update({ ...block, username: this.username });\n    }\n  }\n\n  addGoal = async goal => {\n    if (this.firebase && this.username) {\n      await this.firebase.firestore()\n        .collection(\"goals\")\n        .add({ ...goal, username: this.username });\n    }\n  }\n\n  updateGoal = async goal => {\n    if (this.firebase && this.username) {\n      await this.firebase.firestore()\n        .collection(\"goals\")\n        .doc(goal.id)\n        .update({ ...goal, username: this.username });\n    }\n  };\n\n  setCurrentUser = user => {\n    if (user) {\n      this.user = user;\n      this.username = user.uid;\n    }\n  };\n}\n\nclass AuthService {\n  firebase = global.firebase;\n  operations = {\n    SignIn: \"SignIn\",\n    SignUp: \"SignUp\"\n  };\n\n  constructor() {\n    this.currentUser = this.firebase.auth().currentUser;\n    this._setAuthPersistence();\n  }\n\n  getCurrentUser = () => this.firebase.auth().currentUser;\n\n  signUp = (email, password, onSuccess = () => {}, onError = () => {}) => {\n    if (this.firebase) {\n      this.firebase.auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(data => {\n          console.log(\"Log: Auth - Signup success\");\n          if (onSuccess) {\n            onSuccess(data);\n          }\n        })\n        .catch(error => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          console.log(`Error: Auth Signup - (${errorCode}) ${errorMessage}`);\n          if (onError) {\n            onError(errorMessage);\n          }\n        });\n    }\n  };\n\n  signIn = (email, password, onSuccess = () => {}, onError = () => {}) => {\n    if (this.firebase) {\n      this.firebase.auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(data => {\n          console.log(\"Log: Auth - Signin success\");\n          if (onSuccess) {\n            onSuccess(data);\n          }\n        })\n        .catch(error => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          console.log(`Error: Auth Signin - (${errorCode}) ${errorMessage}`);\n          if (onError) {\n            onError(errorMessage);\n          }\n        });\n    }\n  }\n\n  signOut = () => {\n    if (this.firebase) {\n      this.firebase.auth().signOut().then(function() {\n        console.log('Log: Auth - Signed Out');\n      }, function(error) {\n        console.error('Error: Auth - Sign Out Error', error);\n      });\n    }\n  };\n\n  onAuthStateChanged = cb => {\n    if (this.firebase) {\n      this.firebase.auth().onAuthStateChanged(user => cb(user));\n    }\n  };\n\n  _setAuthPersistence = () => {\n    if (this.firebase) {\n      this.firebase.auth()\n        .setPersistence(this.firebase.auth.Auth.Persistence.LOCAL)\n        .then(() => console.log(\"Log: Auth persistence set\"))\n        .catch(error => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          console.log(`Error: Auth Persistence - (${errorCode}) ${errorMessage}`);\n        });\n    }\n  }\n}\n\nclass App extends React.Component {\n  firebase = global.firebase;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      authLoading: true\n    };\n  }\n\n  componentWillMount() {\n    this.service = new FirebaseService(FIREBASE_CONFIG);\n    this.authService = new AuthService();\n    this.authService.onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"Auth: Logged in user\", user.uid);\n      }\n      this._setCurrentUser(user);\n      this.setState({ authLoading: false });\n    });\n  }\n\n  render = () => {\n    const { currentUser, authLoading } = this.state;\n    if (authLoading) {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <View style={{ width: \"100%\", height: \"100%\", backgroundColor: \"black\" }} />\n          </div>\n        </div>\n      );\n    }\n    return (\n      <AppContext.Provider value={{\n        remoteService: this.service,\n        authService: this.authService,\n        currentUser\n      }}>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <Router basename=\"/time-blocks\">\n              <View style={{ height: Dimensions.get(\"window\").height - 60, width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\n                <Switch>\n                  <Route path=\"/log\">\n                    <LogScreen />\n                  </Route>\n                  <Route path=\"/goals\">\n                    <GoalsScreen />\n                  </Route>\n                  <Route path=\"/settings\">\n                    <SettingsScreen />\n                  </Route>\n                  <Route path=\"/auth\">\n                    <AuthScreen />\n                  </Route>\n                  <Route path=\"/\">\n                    <TimerScreen />\n                  </Route>\n                </Switch>\n              </View>\n              {currentUser === null\n                ? <Redirect to=\"/auth\" />\n                : <Redirect to=\"/\" />\n              }\n              {currentUser !== null ? (\n                <View style={{\n                  borderTop: \"1px solid rgb(38,38,38)\",\n                  width: \"100%\",\n                  position: \"absolute\",\n                  bottom: 0,\n                  backgroundColor: \"black\",\n                  height: 60,\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}>\n                  <View style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                  }}>\n                    <Link to={`log${window.location.search}`}>\n                      <View style={{ height: \"100%\", paddingHorizontal: 10, width: 80 }}>\n                        <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                          Log\n                        </Text>\n                      </View>\n                    </Link>\n                    <Link to={`/${window.location.search}`}>\n                      <View style={{ height: \"100%\", paddingHorizontal: 10, width: 80 }}>\n                        <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                          Focus\n                        </Text>\n                      </View>\n                    </Link>\n                    <Link to={`goals${window.location.search}`}>\n                      <View style={{ height: \"100%\", paddingHorizontal: 10, width: 80 }}>\n                        <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                          Goals\n                        </Text>\n                      </View>\n                    </Link>\n                    <Link to={`settings${window.location.search}`}>\n                      <View style={{ height: \"100%\", paddingHorizontal: 10, width: 80 }}>\n                        <Text style={{ color: \"#999999\", fontSize: 14 }}>\n                          Settings\n                        </Text>\n                      </View>\n                    </Link>\n                  </View>\n                </View>\n              ) : null}\n            </Router>\n          </div>\n        </div>\n      </AppContext.Provider>\n    );\n  };\n\n  _setCurrentUser = currentUser => {\n    if (currentUser && currentUser.email) {\n      this.setState({ currentUser: currentUser.email });\n      this.service.setCurrentUser(currentUser);\n    } else {\n      this.setState({ currentUser: null });\n    }\n  };\n}\n\nexport default App;\n","export { AuthScreen } from \"./auth-screen-container\";","import React from \"react\";\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { ErrorMessage } from \"./auth-error-messages\";\n\nexport class SignupScreenRenderer extends React.Component {\n  state = {\n    isSignup: true,\n    email: null,\n    password: null,\n    repeatPassword: null,\n    errorMessage: \"\"\n  };\n\n  static getDerivedStateFromProps(props) {\n    const { error } = props;\n    if (error) {\n      return { errorMessage: error };\n    }\n    return null;\n  }\n\n  render() {\n    const { email, isSignup, errorMessage } = this.state;\n    return (\n      <View style={{ width: \"100%\", maxWidth: 267 }}>\n        <Text style={styles.appTitle}>TimeBlocks</Text>\n        <Text style={styles.subText}>\n          {isSignup\n            ? \"Create a new account\"\n            : \"Login to your account\"\n          }\n        </Text>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Email address\"\n          value={email}\n          onChange={this._onEmailChange}\n          autoFocus\n          keyboardType={\"email-address\"}\n        />\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Password\"\n          onChange={this._onPasswordChange}\n          autoCompleteType=\"password\"\n          secureTextEntry\n        />\n        {isSignup && (\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"Repeat password\"\n            onChange={this._onRepeatPasswordChange}\n            autoCompleteType=\"password\"\n            secureTextEntry\n          />\n        )}\n        <View style={{ height: 30 }}>\n          <Text style={styles.errorMessage}>\n            {errorMessage}\n          </Text>\n        </View>\n        {this._renderButtons()}\n      </View>\n    );\n  }\n\n  _renderButtons = () => this.state.isSignup\n    ? this._renderSignupButtons()\n    : this._renderSigninButtons();\n\n  _renderSignupButtons = () => (\n    <View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={this._onSignup}\n      >\n        <Text style={styles.buttonText}>Create Account</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.subButton}\n        onPress={() => this.setState({ isSignup: !this.state.isSignup })}\n      >\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  _renderSigninButtons = () => (\n    <View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={this._onSignin}\n      >\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.subButton}\n        onPress={() => this.setState({ isSignup: !this.state.isSignup })}\n      >\n        <Text style={styles.buttonText}>Create Account</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  _onSignup = () => {\n    const { onSignup } = this.props;\n    const { email, password, repeatPassword } = this.state;\n    if (!onSignup) {\n      return this.setState({ errorMessage: ErrorMessage.Unexpected });\n    }\n    if (password !== repeatPassword) {\n      return this.setState({ errorMessage: ErrorMessage.PasswordMismatch });\n    }\n    onSignup(email, password);\n    this.setState({ errorMessage: \"\" });\n  };\n\n  _onSignin = () => {\n    const { onSignin } = this.props;\n    const { email, password } = this.state;\n    if (!onSignin) {\n      return this.setState({ errorMessage: ErrorMessage.Unexpected });\n    }\n    onSignin(email, password);\n    this.setState({ errorMessage: \"\" });\n  };\n\n  _onEmailChange = e => {\n    if (e && e.target && e.target.value) {\n      this.setState({ email: e.target.value });\n    }\n    this.setState({ errorMessage: \"\" });\n  };\n\n  _onPasswordChange = e => {\n    if (e && e.target && e.target.value) {\n      this.setState({ password: e.target.value });\n    }\n    this.setState({ errorMessage: \"\" });\n  };\n\n  _onRepeatPasswordChange = e => {\n    if (e && e.target) {\n      this.setState({ repeatPassword: e.target.value });\n    }\n    this.setState({ errorMessage: \"\" });\n  };\n}\n\nconst styles = StyleSheet.create({\n  appTitle: {\n    color: \"white\",\n    fontSize: 30,\n    marginTop: 70,\n    marginBottom: 30\n  },\n  buttonText: {\n    color: \"white\"\n  },\n  subText: {\n    color: \"rgb(153, 153, 153)\"\n  },\n  textInput: {\n    color: \"white\",\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    marginTop: 20,\n    border: \"1px solid rgb(38,38,38)\"\n  },\n  button: {\n    fontSize: 16,\n    marginTop: 10,\n    paddingVertical: 10,\n    backgroundColor: \"rgb(209,63,87)\"\n  },\n  subButton: {\n    fontSize: 14,\n    marginTop: 10,\n    paddingVertical: 10\n  },\n  errorMessage: {\n    color: \"rgb(209,63,87)\",\n    marginTop: 10\n  }\n})\n","import React from \"react\";\n\nexport default class Timer extends React.Component {\n  intervalTimer = null;\n\n  constructor(props) {\n    super(props);\n    const { hours, minutes, seconds } = props;\n    this.state = {\n      hours,\n      minutes,\n      seconds,\n      running: false\n    };\n  }\n\n  componentDidMount = () => {\n    if (!this.intervalTimer) {\n      this.intervalTimer = setInterval(this._onIntervalFire, 1000);\n    }\n  };\n\n  componentWillUnmount = () => clearInterval(this.intervalTimer);\n\n  static getDerivedStateFromProps = ({ hours, minutes, seconds, running, paused }) => {\n    if (!running && !paused) {\n      return {\n        hours,\n        minutes,\n        seconds,\n        running\n      };\n    }\n    return { running };\n  };\n\n  pad(n, z) {\n    z = z || '0';\n    n = n + '';\n    return n.length >= 2 ? n : new Array(2 - n.length + 1).join(z) + n;\n  }\n\n  render() {\n    const { hours, minutes, seconds } = this.state;\n    const commonStyles = {\n      color: \"#ccc\"\n    };\n    return (\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\n        <span style={this.props.small ? { fontSize: 20, ...commonStyles } : { fontSize: 40, ...commonStyles }}>\n          {this.pad(hours)} : {this.pad(minutes)} : {this.pad(seconds)}\n        </span>\n      </div>\n    );\n  }\n\n  _onIntervalFire = () => {\n    const { hours, minutes, seconds, running } = this.state;\n    const { onFinish, isCountUp, onTick } = this.props;\n    if (!running) {\n      return;\n    }\n\n    const result = isCountUp\n      ? countUpOneSecond(hours, minutes, seconds)\n      : countDownOneSecond(hours, minutes, seconds);\n    if (!result) {\n      this.setState({ running: false });\n      onFinish && onFinish();\n    }\n\n    this.setState({\n      hours: result.hours,\n      minutes: result.minutes,\n      seconds: result.seconds\n    }, () => {\n      const { hours, minutes, seconds } = this.state;\n      onTick && onTick(hours, minutes, seconds);\n    });\n  }\n};\n\nfunction countDownOneSecond (hours, minutes, seconds) {\n  if (seconds === 0) {\n    if (minutes === 0) {\n      if (hours === 0) {\n        // Count down finished\n        return null;\n      }\n      return {\n        hours: hours - 1,\n        minutes: 59,\n        seconds: 59\n      };\n    }\n    return {\n      hours,\n      minutes: minutes - 1,\n      seconds: 59\n    };\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds: seconds - 1\n  };\n}\n\nfunction countUpOneSecond (hours, minutes, seconds) {\n  if (seconds === 59) {\n    if (minutes === 59) {\n      if (hours === 59) {\n        // Counter finished\n        return null;\n      }\n      return {\n        hours: hours + 1,\n        minutes: 0,\n        seconds: 0\n      };\n    }\n    return {\n      hours,\n      minutes: minutes + 1,\n      seconds: 0\n    };\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds: seconds + 1\n  };\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport Timer from \"../components/timer\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport GoalUtils from \"../utils/goal-utils\";\nimport { Link } from \"react-router-dom\";\n\nconst isDistracted = false;\n\nconst blockDiff = block => {\n  if (!block) {\n    return { hours: 1, minutes: 0, seconds: 0 };\n  }\n  const startTime = moment(block.startTime);\n  const duration = moment.duration(moment().diff(startTime));\n  const hours = Math.floor(duration.asHours());\n  const minutes = Math.floor(duration.asMinutes()) - (hours * 60);\n  const seconds = Math.floor(duration.asSeconds()) - (minutes * 60);\n  return { hours, minutes: 59 - minutes, seconds: 59 - seconds };\n};\n\nconst TimerScreenRenderer = ({\n  onTimerTick,\n  onTimerModify,\n  onTimerFinish,\n  onTimerStart,\n  onTimerStop,\n  running,\n  earnedBlocks,\n  currentBlock,\n  goal\n}) => {\n  const { hours, minutes, seconds } = blockDiff(currentBlock);\n  return (\n    <View style={{ display: \"flex\", flexDirection: \"column\", maxWidth: 267, backgroundColor: \"black\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n      <View style={{ paddingHorizontal: 20, border: \"1px solid rgb(38,38,38)\", paddingBottom: 15, paddingTop: 5, minHeight: 177 }}>\n        <Timer\n          hours={hours}\n          minutes={minutes}\n          seconds={seconds}\n          running={running}\n          paused={isDistracted}\n          onTick={onTimerTick}\n          onModify={onTimerModify}\n          onFinish={onTimerFinish}\n        />\n        <Text style={{ color: \"#999999\", textAlign: \"left\", fontStyle: \"oblique\", fontSize: 13 }}>\n          {\"Focus on your task for 1 hour to earn \"}\n          <Text style={{ color: \"white\", fontStyle: \"oblique\" }}>{\"1 block\"}</Text>\n          <Text style={{ fontWeight: \"bold\", color: \"white\", fontStyle: \"normal\" }}>{\" ( \"}</Text>\n          <View style={{ height: 10, width: 10, backgroundColor: \"rgb(97,196,85)\" }} />\n          <Text style={{ fontWeight: \"bold\", color: \"white\", fontStyle: \"normal\" }}>{\" )\"}</Text>\n        </Text>\n\n        <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginTop: 10 }}>\n          <Text style={{ color: \"#999999\" }}>Today's Goal ( </Text>\n          <Link to=\"/goals\" style={{ marginBottom: 5 }}>\n            <Text style={{ color: \"rgb(209,63,87)\",  }}>\n              Set\n            </Text>\n          </Link>\n          <Text style={{ color: \"#999999\" }}> )</Text>\n        </View>\n\n        <View style={{ display: \"flex\", height: 50, justifyContent: \"center\", alignItems: \"center\" }}>\n          {\n            (running || isDistracted) || (GoalUtils.getTodaysBlockGoal(goal) !== 0)\n              ? (\n                <TimeBlocks\n                  earnedBlocks={earnedBlocks}\n                  currentBlock={currentBlock}\n                  goal={goal}\n                />\n              ) : (\n                <View style={{ width: \"100%\", justifyContent: \"center\" }}>\n                  <Text style={{ color: \"#999999\" }}>No goal</Text>\n                </View>\n              )\n          }\n        </View>\n      </View>\n      <View style={{ marginVertical: 40 }}>\n        <TouchableOpacity\n          style={{ \n            backgroundColor: running || isDistracted\n              ? \"rgb(28,35,54)\"\n              : \"rgb(209,63,87)\",\n            borderRadius: 80,\n            width: 80,\n            height: 80,\n            display: \"flex\",\n            justifyContent: \"center\",\n            shadowColor: 'rgba(0,0,0, .4)',\n            shadowOffset: { height: 1, width: 1 },\n            shadowOpacity: 1,\n            shadowRadius: 1,\n            elevation: 2\n          }}\n          onPress={running || isDistracted ? onTimerStop : onTimerStart}\n        >\n          <Text style={{ fontWeight: \"bold\", marginBottom: 2, color: \"white\" }}>\n            {running || isDistracted ? \"Give up\" : \"Start\"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default TimerScreenRenderer;\n\n// _renderDistractionTimer = () => (\n//   <Timer\n//     hours={0}\n//     minutes={0}\n//     seconds={0}\n//     isCountUp\n//     small\n//     onTick={(dHours, dMinutes, dSeconds) => this.setState({ dHours, dMinutes, dSeconds })}\n//     running={isDistracted}\n//     onFinish={this._onDistractionFinish}\n//   />\n// );\n// _renderDistractions = () => (\n//   <div style={{ fontSize: 16 }}>\n//     <p style={{ fontSize: 22 }}>Distractions</p>\n//     {this.state.distractions.length === 0 && <p>No distractions</p>}\n//     {this.state.distractions.map(({ elapsedHours, elapsedMinutes, elapsedSeconds, createdAt }) => (\n//       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n//         <p>At {moment(createdAt).format('hh:mm:ss')}</p>\n//         <p>{elapsedHours} : {elapsedMinutes} : {elapsedSeconds}</p>\n//       </div>\n//     ))}\n//   </div>\n// );\n// _onLogDistraction = () => this.setState({\n//   distractions: [\n//     {\n//       createdAt: moment().toISOString(),\n//       hours: this.state.hours,\n//       minutes: this.state.minutes,\n//       seconds: this.state.seconds,\n//       elapsedHours: 0,\n//       elapsedMinutes: 0,\n//       elapsedSeconds: 0\n//     },\n//     ...this.state.distractions\n//   ]\n// });\n// _onDistractionStart = () => this.setState({ running: false, isDistracted: true });\n// _onDistractionFinish = () => {\n//   const { dHours, dMinutes, dSeconds } = this.state;\n//   this._logDistraction(dHours, dMinutes, dSeconds);\n//   this._resetDistraction();\n//   this.setState({ running: true });\n// };\n// _resetDistraction = () => this.setState({ dHours: 0, dMinutes: 0, dSeconds: 0, isDistracted: false });\n// _logDistraction = (hours, minutes, seconds) => {\n//   const { distractions } = this.state;\n//   const newDistraction = {\n//     createdAt: moment().toISOString(),\n//     hours,\n//     minutes,\n//     seconds,\n//     elapsedHours: hours,\n//     elapsedMinutes: minutes,\n//     elapsedSeconds: seconds\n//   };\n//   this.setState({ distractions: [newDistraction, ...distractions] });\n// };\n","import React from \"react\";\nimport moment from \"moment\";\nimport TimerScreenRenderer from \"./timer-screen-renderer\";\nimport AppContext from \"../app-context\";\n\nconst isWithinBlock = block => {\n  const startTime = moment(block.startTime);\n  const duration = moment.duration(moment().diff(startTime));\n  return Math.floor(duration.asHours()) < 1;\n};\n\nclass TimerScreenContainer extends React.Component {\n  state = {\n    hours: 1,\n    minutes: 0,\n    seconds: 0,\n    running: false,\n    isDistracted: false,\n    currentBlockId: null,\n    currentBlock: null,\n    setHours: 1,\n    setMinutes: 0,\n    setSeconds: 0,\n    earnedBlocks: [],\n    goal: null,\n    // Below not used\n    dHours: 0,\n    dMinutes: 0,\n    dSeconds: 0,\n    distractions: [],\n    workdayStartTime: null,\n    workdayEndTime: null\n  };\n\n  componentDidMount() {\n    this._fetchBlocks();\n    this._fetchGoals();\n  }\n\n  render() {\n    const {\n      running,\n      currentBlock,\n      earnedBlocks,\n      goal\n    } = this.state;\n    return (\n      <TimerScreenRenderer\n        onTimerStart={this._startBlock}\n        onTimerStop={this._onTimerStop}\n        onTimerTick={this._onTimerTick}\n        onTimerModify={this._onTimerModify}\n        onTimerFinish={this._onTimerFinish}\n        running={running}\n        currentBlock={currentBlock}\n        earnedBlocks={earnedBlocks}\n        goal={goal}\n      />\n    );\n  }\n\n  // _getNumHourlyBlocksBetweenTimes = (startTime, endTime) => moment.duration(moment(endTime).diff(startTime)).asHours();\n\n  _fetchBlocks = async () => {\n    const { remoteService } = this.props;\n    const { todaysBlocks } = await remoteService.fetchBlocks();\n    if (todaysBlocks) {\n      const runningBlocks = todaysBlocks\n        .filter(block => !block.stopped)\n        .filter(block => isWithinBlock(block));\n      const sortedBlocks = todaysBlocks\n        .filter(b => b.startTime !== null)\n        .sort((a, b) => moment(a.startTime) - moment(b.startTime));\n      const lastBlock = sortedBlocks[sortedBlocks.length - 1];\n\n      // If there are blocks which are:\n      // 1. Running (stopped = false)\n      // 2. Last started block is not stopped\n      // Set the last block as currentBlock and set the timer running\n      if (runningBlocks.length > 0 && !lastBlock.stopped) {\n        const runningBlock = sortedBlocks[sortedBlocks.length - 1];\n        this.setState({ currentBlock: runningBlock }, () => this.setState({ running: true }));\n      }\n      this.setState({ earnedBlocks: todaysBlocks.filter(block => block.completed) });\n    }\n  };\n\n  _fetchGoals = async () => {\n    const { remoteService } = this.props;\n    const goals = await remoteService.fetchGoals();\n    if (goals && goals.length) {\n      this.setState({ goal: goals[0] });\n    }\n  };\n\n  _startBlock = () => {\n    const { running, isDistracted, distractions } = this.state;\n    if (!isDistracted) {\n      this.setState({\n        running: !running,\n        distractions: !running ? [] : distractions,\n        currentBlock: {\n          hours: 1,\n          minutes: 0,\n          seconds: 0,\n          createdAt: moment().toISOString(),\n          startTime: moment().toISOString(),\n          endTime: null,\n          completed: false\n        }\n      }, () => this._logTimeBlock(1, 0, 0, false /** completed */, false /** stopped */));\n    }\n  };\n\n  _endBlock = (completed = false, stopped = false) => {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    this.setState({\n      running: false,\n      isDistracted: false,\n      currentBlock: null,\n      currentBlockId: null\n    });\n    this._logTimeBlock(\n      hours,\n      59 - minutes,\n      59 - seconds,\n      completed,\n      stopped\n    );\n  };\n\n  _onTimerStop = () => this._endBlock(false /* completed */, true /* stopped */);\n\n  _onTimerTick = (hours, minutes, seconds) => {\n    this.setState({\n      hours,\n      minutes,\n      seconds,\n      currentBlock: {\n        ...this.state.currentBlock,\n        hours,\n        minutes,\n        seconds\n      }\n    });\n  };\n\n  _onTimerModify = ({ hours, minutes, seconds }) => this.setState({\n    hours,\n    minutes,\n    seconds,\n    setHours: hours,\n    setMinutes: minutes,\n    setSeconds: seconds\n  });\n\n  _onTimerFinish = () => this._endBlock(true /* completed */, false /* stopped */);\n\n  _logTimeBlock = async (elapsedHours, elapsedMinutes, elapsedSeconds, completed = false, stopped=false) => {\n    const { setHours, setMinutes, setSeconds, currentBlock, goal, currentBlockId } = this.state;\n    const { remoteService } = this.props;\n    if (remoteService) {\n      if (currentBlockId) {\n        const updatedBlock = await remoteService.updateTimeBlock({\n          ...currentBlock,\n          id: currentBlockId,\n          hours: setHours,\n          minutes: setMinutes,\n          seconds: setSeconds,\n          elapsedHours,\n          elapsedMinutes,\n          elapsedSeconds,\n          goal,\n          endTime: moment().toISOString(),\n          distractions: this.state.distractions,\n          completed,\n          stopped\n        });\n        if (updatedBlock) {\n          this.setState({ currentBlockId: updatedBlock.id });\n        }\n      } else {\n        const addedBlock = await remoteService.addTimeBlock({\n          ...currentBlock,\n          hours: setHours,\n          minutes: setMinutes,\n          seconds: setSeconds,\n          elapsedHours,\n          elapsedMinutes,\n          elapsedSeconds,\n          goal,\n          endTime: moment().toISOString(),\n          distractions: this.state.distractions,\n          completed,\n          stopped\n        });\n        if (addedBlock) {\n          this.setState({ currentBlockId: addedBlock.id });\n        }\n      }\n    }\n  };\n\n  // _renderDistractions = () => (\n  //   <div style={{ fontSize: 16 }}>\n  //     <p style={{ fontSize: 22 }}>Distractions</p>\n  //     {this.state.distractions.length === 0 && <p>No distractions</p>}\n  //     {this.state.distractions.map(({ elapsedHours, elapsedMinutes, elapsedSeconds, createdAt }) => (\n  //       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n  //         <p>At {moment(createdAt).format('hh:mm:ss')}</p>\n  //         <p>{elapsedHours} : {elapsedMinutes} : {elapsedSeconds}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  // _onStartTimeChange = workdayStartTime => this.setState({ workdayStartTime });\n  // _onEndTimeChange = workdayEndTime => this.setState({ workdayEndTime });\n}\n\nexport const TimerScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <TimerScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n);\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  TouchableHighlight\n} from \"react-native\";\n\nconst GoalMode = {\n  Everyday: \"Everyday\",\n  WeekdayWeekEnd: \"WeekdayWeekend\",\n  Custom: \"Custom\"\n};\n\nconst Days = {\n  \"mon\": \"Monday\",\n  \"tue\": \"Tuesday\",\n  \"wed\": \"Wednesday\",\n  \"thu\": \"Tuesday\",\n  \"fri\": \"Friday\",\n  \"sat\": \"Saturday\",\n  \"sun\": \"Sunday\"\n};\n\nconst BlurContent = ({ blur, children }) => (\n  <View style={{ opacity: blur ? 0.3 : 1 }}>\n    {children}\n  </View>\n);\n\n\nexport class GoalsScreenRenderer extends React.Component {\n  render() {\n    const { goalMode, goal, onChangeGoalMode, onSaveGoal } = this.props;\n    return (\n      <TouchableWithoutFeedback onPress={() => onChangeGoalMode(null)}>\n        <View style={{ width: \"100%\" }}>\n          <Text style={{ color: \"rgb(204, 204, 204)\", fontSize: 30, textAlign: \"center\", marginVertical: 15, marginHorizontal: 40, fontWeight: \"bold\" }}>\n            Log\n          </Text>\n          <View style={{ paddingTop: 10, width: \"100%\", display: \"flex\", alignItems: \"center\", marginHorizontal: 5 }}>\n            <View style={{ maxWidth: 267, height: \"100%\", width: \"100%\" }}>\n              <BlurContent blur={goalMode !== GoalMode.Everyday}>\n                <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Everyday)}>\n                  <View style={styles.form}>\n                    <View style={styles.formLabel}>\n                      <Text style={styles.text}>Everyday</Text>\n                    </View>\n                    <View style={styles.formInput}>\n                      {this._renderTextInput(\n                        goal.everyday,\n                        GoalMode.Everyday,\n                        e => this._onSetValue(e, \"everyday\"),\n                        true /* shouldAutoFocus */\n                      )}\n                    </View>\n                    <TouchableHighlight\n                      style={styles.clearButton}\n                      onPress={this._onClearEveryday}\n                    >\n                      <Text style={styles.text}>Clear</Text>\n                    </TouchableHighlight>\n                  </View>\n                </TouchableWithoutFeedback>\n              </BlurContent>\n\n              <View style={{ marginTop: 10, marginBottom: 10 }}>\n                <Text>OR</Text>\n              </View>\n\n              <BlurContent blur={goalMode !== GoalMode.WeekdayWeekEnd}>\n                <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.WeekdayWeekEnd)}>\n                  <View>\n                    <View style={styles.form}>\n                      <View style={styles.formLabel}>\n                        <Text style={styles.text}>Weekdays</Text>\n                      </View>\n                      <View style={styles.formInput}>\n                        {this._renderTextInput(\n                          goal.weekdays,\n                          GoalMode.WeekdayWeekEnd,\n                          e => this._onSetValue(e, \"weekdays\"),\n                          true /* shouldAutoFocus */\n                        )}\n                      </View>\n                      <TouchableHighlight\n                        style={styles.clearButton}\n                        onPress={this._onClearWeekdays}\n                      >\n                        <Text style={styles.text}>Clear</Text>\n                      </TouchableHighlight>\n                    </View>\n                    <View style={styles.form}>\n                      <View style={styles.formLabel}>\n                        <Text style={styles.text}>Weekends</Text>\n                      </View>\n                      <View style={styles.formInput}>\n                        {this._renderTextInput(\n                          goal.weekends,\n                          GoalMode.WeekdayWeekEnd,\n                          e => this._onSetValue(e, \"weekends\")\n                        )}\n                      </View>\n                      <TouchableHighlight\n                        style={styles.clearButton}\n                        onPress={this._onClearWeekends}\n                      >\n                        <Text style={styles.text}>Clear</Text>\n                      </TouchableHighlight>\n                    </View>\n                  </View>\n                </TouchableWithoutFeedback>\n              </BlurContent>\n\n              <View style={{ width: \"100%\", height: 1, borderBottom: \"1px solid black\", marginTop: 10 }} />\n\n              <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Custom)}>\n                <View>\n                  <View style={{ display: \"flex\", flexDirection: \"row\", marginVertical: 10, justifyContent: \"center\", position: \"relative\" }}>\n                    <Text style={styles.text}>Set Goals</Text>\n                    <TouchableHighlight\n                      style={{ position: \"absolute\", right: 0, width: \"20%\" }}\n                      onPress={this._onClearCustom}\n                    >\n                      <Text style={styles.text}>Clear</Text>\n                    </TouchableHighlight>\n                  </View>\n                  <View>\n                  {this._renderDay(\"mon\", true)}\n                  {this._renderDay(\"tue\")}\n                  {this._renderDay(\"wed\")}\n                  {this._renderDay(\"thu\")}\n                  {this._renderDay(\"fri\")}\n                  {this._renderDay(\"sat\")}\n                  {this._renderDay(\"sun\")}\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n\n              <TouchableHighlight style={{ marginVertical: 30 }} onPress={onSaveGoal}>\n                <View style={{ backgroundColor: \"rgb(209,63,87)\", paddingVertical: 5 }}>\n                  <Text style={styles.text}>Save</Text>\n                </View>\n              </TouchableHighlight>\n            </View>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n\n  _onClearEveryday = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearEveryday: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      everyday: null,\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null,\n      sat: null,\n      sun: null\n    });\n  }\n\n  _onClearWeekdays = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearWeekdays: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      weekdays: null,\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null\n    });\n  }\n\n  _onClearWeekends = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearWeekends: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoalMode(null);\n    onChangeGoal({\n      weekends: null,\n      sat: null,\n      sun: null\n    });\n  }\n\n  _onClickSection = goalMode => {\n    const { onChangeGoalMode } = this.props;\n    if (!onChangeGoalMode) {\n      return;\n    }\n    onChangeGoalMode(goalMode);\n  }\n\n  _onClearCustom = () => {\n    const { onChangeGoal, onChangeGoalMode }  = this.props;\n    if (!onChangeGoal || !onChangeGoalMode) {\n      console.log(\"Log _onClearCustom: Props onChangeGoal and onChangeGoalMode are required\");\n      return;\n    }\n    onChangeGoal({\n      mon: null,\n      tue: null,\n      wed: null,\n      thu: null,\n      fri: null,\n      sat: null,\n      sun: null\n    });\n    onChangeGoalMode(null);\n  }\n\n  _renderDay = (day, autoFocusInput = false) => {\n    const { goal } = this.props;\n    return (\n      <View style={styles.form}>\n        <View style={styles.formLabel}>\n          <Text style={styles.text}>{Days[day]}</Text>\n        </View>\n        <View style={styles.formInput}>\n          {this._renderTextInput(\n            goal[day],\n            GoalMode.Custom,\n            e => this._onSetValue(e, day),\n            autoFocusInput\n          )}\n        </View>\n        <View style={styles.clearButton} />\n      </View>\n    )\n  };\n\n  _renderTextInput = (value, goalMode, onChange, shouldAutoFocus = false) => (\n    goalMode === this.props.goalMode\n      ? <TextInput value={value} style={styles.formTextInput} onChange={onChange} autoFocus={shouldAutoFocus} keyboardType={\"numeric\"} />\n      : <Text style={styles.text}>{value !== null ? value : \"Not set\"}</Text>\n  );\n\n  _onSetValue = (event, formType) => {\n    const { onChangeGoal } = this.props;\n    if (!onChangeGoal) {\n      return;\n    }\n    const value = event && event.target && event.target.value;\n    if (!formType) {\n      return;\n    }\n    const parsedValue = value.length === 0 || isNaN(parseInt(value)) ? null : parseInt(value);\n    switch (formType) {\n      case \"everyday\":\n        onChangeGoal({\n          everyday: parsedValue,\n          mon: parsedValue,\n          tue: parsedValue,\n          wed: parsedValue,\n          thu: parsedValue,\n          fri: parsedValue,\n          sat: parsedValue,\n          sun: parsedValue\n        });\n        break;\n      case \"weekdays\":\n        onChangeGoal({\n          weekdays: parsedValue,\n          mon: parsedValue,\n          tue: parsedValue,\n          wed: parsedValue,\n          thu: parsedValue,\n          fri: parsedValue\n        });\n        break;\n      case \"weekends\":\n        onChangeGoal({\n          weekends: parsedValue,\n          sat: parsedValue,\n          sun: parsedValue\n        });\n        break;\n      default:\n        onChangeGoal({ [formType]: parsedValue });\n        break;\n    }\n  }\n\n  _unsetAllWithOverride = override => this.props.onChangeGoal && this.props.onChangeGoal({\n    everyday: null,\n    weekdays: null,\n    weekends: null,\n    ...override || {}\n  });\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: 267,\n    height: \"100%\",\n    backgroundColor: \"black\",\n    paddingVertical: 20\n  },\n  titleText: {\n    color: \"white\",\n    fontSize: 26,\n    marginVertical: 10\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  formLabel: {\n    width: \"50%\",\n    textAlign: \"left\",\n    paddingLeft: 10\n  },\n  formInput: {\n    width: \"30%\",\n    paddingRight: 10\n  },\n  clearButton: {\n    width: \"20%\"\n  },\n  formTextInput: {\n    color: \"white\",\n    textAlign: \"center\",\n    borderBottom: \"1px solid black\"\n  },\n  text: {\n    color: \"white\"\n  }\n});\n\n// return (\n//   <TouchableWithoutFeedback onPress={() => onChangeGoalMode(null)}>\n//     <View style={styles.container}>\n//       <Text style={styles.titleText}>Goals</Text>\n//       <BlurContent blur={goalMode !== GoalMode.Everyday}>\n//         <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Everyday)}>\n//           <View style={styles.form}>\n//             <View style={styles.formLabel}>\n//               <Text style={styles.text}>Everyday</Text>\n//             </View>\n//             <View style={styles.formInput}>\n//               {this._renderTextInput(\n//                 goal.everyday,\n//                 GoalMode.Everyday,\n//                 e => this._onSetValue(e, \"everyday\"),\n//                 true /* shouldAutoFocus */\n//               )}\n//             </View>\n//             <TouchableHighlight\n//               style={styles.clearButton}\n//               onPress={this._onClearEveryday}\n//             >\n//               <Text style={styles.text}>Clear</Text>\n//             </TouchableHighlight>\n//           </View>\n//         </TouchableWithoutFeedback>\n//       </BlurContent>\n\n//       <View style={{ marginTop: 10, marginBottom: 10 }}>\n//         <Text>OR</Text>\n//       </View>\n\n//       <BlurContent blur={goalMode !== GoalMode.WeekdayWeekEnd}>\n//         <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.WeekdayWeekEnd)}>\n//           <View>\n//             <View style={styles.form}>\n//               <View style={styles.formLabel}>\n//                 <Text style={styles.text}>Weekdays</Text>\n//               </View>\n//               <View style={styles.formInput}>\n//                 {this._renderTextInput(\n//                   goal.weekdays,\n//                   GoalMode.WeekdayWeekEnd,\n//                   e => this._onSetValue(e, \"weekdays\"),\n//                   true /* shouldAutoFocus */\n//                 )}\n//               </View>\n//               <TouchableHighlight\n//                 style={styles.clearButton}\n//                 onPress={this._onClearWeekdays}\n//               >\n//                 <Text style={styles.text}>Clear</Text>\n//               </TouchableHighlight>\n//             </View>\n//             <View style={styles.form}>\n//               <View style={styles.formLabel}>\n//                 <Text style={styles.text}>Weekends</Text>\n//               </View>\n//               <View style={styles.formInput}>\n//                 {this._renderTextInput(\n//                   goal.weekends,\n//                   GoalMode.WeekdayWeekEnd,\n//                   e => this._onSetValue(e, \"weekends\")\n//                 )}\n//               </View>\n//               <TouchableHighlight\n//                 style={styles.clearButton}\n//                 onPress={this._onClearWeekends}\n//               >\n//                 <Text style={styles.text}>Clear</Text>\n//               </TouchableHighlight>\n//             </View>\n//           </View>\n//         </TouchableWithoutFeedback>\n//       </BlurContent>\n\n//       <View style={{ width: \"100%\", height: 1, borderBottom: \"1px solid black\", marginTop: 10 }} />\n\n//       <TouchableWithoutFeedback onPress={() => this._onClickSection(GoalMode.Custom)}>\n//         <View>\n//           <View style={{ display: \"flex\", flexDirection: \"row\", marginVertical: 10, justifyContent: \"center\", position: \"relative\" }}>\n//             <Text style={styles.text}>Set Goals</Text>\n//             <TouchableHighlight\n//               style={{ position: \"absolute\", right: 0, width: \"20%\" }}\n//               onPress={this._onClearCustom}\n//             >\n//               <Text style={styles.text}>Clear</Text>\n//             </TouchableHighlight>\n//           </View>\n//           <View>\n//           {this._renderDay(\"mon\", true)}\n//           {this._renderDay(\"tue\")}\n//           {this._renderDay(\"wed\")}\n//           {this._renderDay(\"thu\")}\n//           {this._renderDay(\"fri\")}\n//           {this._renderDay(\"sat\")}\n//           {this._renderDay(\"sun\")}\n//           </View>\n//         </View>\n//       </TouchableWithoutFeedback>\n\n//       <TouchableHighlight style={{ marginVertical: 30 }} onPress={onSaveGoal}>\n//         <View style={{ backgroundColor: \"rgb(209,63,87)\", paddingVertical: 5 }}>\n//           <Text style={styles.text}>Save</Text>\n//         </View>\n//       </TouchableHighlight>\n//     </View>\n//   </TouchableWithoutFeedback>\n// )\n","import React from \"react\";\nimport AppContext from \"../app-context\";\nimport { GoalsScreenRenderer } from \"./goals-renderer\";\n\nclass GoalsScreenContainer extends React.Component {\n  state = {\n    goals: [],\n    id: null,\n    goalMode: null,\n    everyday: null,\n    weekdays: null,\n    weekends: null,\n    mon: null,\n    tue: null,\n    wed: null,\n    thu: null,\n    fri: null,\n    sat: null,\n    sun: null\n  };\n\n  componentDidMount() {\n    this._fetchGoals();\n  }\n\n  render = () => {\n    const {\n      goalMode,\n      everyday,\n      weekdays,\n      weekends,\n      mon,\n      tue,\n      wed,\n      thu,\n      fri,\n      sat,\n      sun\n    } = this.state;\n    return (\n      <GoalsScreenRenderer\n        goalMode={goalMode}\n        goal={{\n          everyday,\n          weekdays,\n          weekends,\n          mon,\n          tue,\n          wed,\n          thu,\n          fri,\n          sat,\n          sun\n        }}\n        onChangeGoal={this._onChangeGoal}\n        onChangeGoalMode={this._onChangeGoalMode}\n        onSaveGoal={this._onSaveGoal}\n      />\n    );\n  }\n\n  _getCurrentGoal = () => ({\n    id: this.state.id,\n    everyday: this.state.everyday,\n    weekdays: this.state.weekdays,\n    weekends: this.state.weekends,\n    mon: this.state.mon,\n    tue: this.state.tue,\n    wed: this.state.wed,\n    thu: this.state.thu,\n    fri: this.state.fri,\n    sat: this.state.sat,\n    sun: this.state.sun\n  });\n\n  _onSaveGoal = () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      if (this.state.id) {\n        remoteService.updateGoal(this._getCurrentGoal());\n      } else {\n        remoteService.addGoal(this._getCurrentGoal());\n      }\n    }\n  }\n\n  _fetchGoals = async () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      const goals = await remoteService.fetchGoals();\n      if (goals && goals.length > 0) {\n        console.log(\">>>\", goals[0])\n        this.setState({ goals, ...goals[0] });\n      }\n    }\n  }\n\n  _onChangeGoalMode = goalMode => this.setState({ goalMode });\n\n  _onChangeGoal = goal => this.setState({ ...goal });\n}\n\nexport const GoalsScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <GoalsScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n);\n","import React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\n\nexport const SettingsScreenRenderer = ({ onSignOut }) => (\n  <View style={styles.container}>\n    <Text style={styles.screenTitle}>Settings</Text>\n    <View style={styles.settingItem}>\n      <View style={styles.centeredSetting}>\n        <TouchableOpacity onPress={onSignOut}>\n          <View><Text style={styles.text}>Sign out</Text></View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    maxWidth: 267\n  },\n  screenTitle: {\n    color: \"rgb(204, 204, 204)\",\n    fontSize: 30,\n    textAlign: \"center\",\n    marginVertical: 15,\n    marginHorizontal: 40,\n    fontWeight: \"bold\"\n  },\n  centeredSetting: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  },\n  text: {\n    color: \"white\"\n  }\n});\n","import React from \"react\";\nimport AppContext from \"../app-context\";\nimport { SettingsScreenRenderer } from \"./settings-screen-renderer\";\n\nclass SettingsScreenContainer extends React.Component {\n  render = () => <SettingsScreenRenderer onSignOut={this._onSignOut} />;\n\n  _onSignOut = () => {\n    const { authService } = this.props;\n    if (authService) {\n      authService.signOut();\n    }\n  }\n}\n\nexport const SettingsScreen = props => (\n  <AppContext.Consumer>\n    {({ authService }) => <SettingsScreenContainer {...props} authService={authService} />}\n  </AppContext.Consumer>\n);","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text, Dimensions } from \"react-native\";\nimport TimeBlocks from \"../components/time-blocks\";\nimport GoalUtils from \"../utils/goal-utils\";\n\nconst LogItem = ({ day, goal }) => {\n  const earnedBlocks = day.blocks.filter(block => block.completed);\n  const earnedBlocksCount = earnedBlocks.length * 1.0\n  const goalCount = GoalUtils.getTodaysBlockGoal(goal);\n  const goalPercent = day.blocks && day.blocks.length > 0\n    ? (earnedBlocksCount / (goalCount > 0 ? goalCount : 1)) * 100\n    : 0;\n  return (\n    <View style={{ height: 90, borderBottom: \"1px solid rgb(38,38,38)\", paddingTop: 10, width: \"100%\", display: \"flex\", alignItems: \"center\", marginHorizontal: 5 }}>\n      <View style={{ maxWidth: 267, height: \"100%\", width: \"100%\" }}>\n        <View style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}>\n          <Text style={{ color: \"white\", fontSize: 17 }}>{moment(day.date).format(\"D MMMM YYYY\")}</Text>\n          <Text style={{ color: \"white\", fontSize: 10 }}>Sessions: {day.blocks && day.blocks.length > 0 ? day.blocks.length : \"N/A\"}</Text>\n        </View>\n        <View style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\", justifyContent: \"space-between\", marginTop: 10 }}>\n          <View style={{ display: \"flex\", width: \"75%\" }}>\n            <TimeBlocks earnedBlocks={earnedBlocks} goal={goal} />\n          </View>\n          <View style={{ display: \"flex\", alignItems: \"center\", marginLeft: 5 }}>\n            <Text style={{ color: \"white\", fontSize: 16 }}>{goalPercent.toFixed(0)}%</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport const LogScreenRenderer = ({ days, goal }) => (\n  <View style={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: Dimensions.get(\"window\").height - 60,\n    overflow: \"scroll\",\n    width: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    paddingBottom: 60\n  }}>\n    {days.map(day => <LogItem day={day} goal={goal} />)}\n  </View>\n);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { View, Text } from \"react-native\";\nimport AppContext from \"../app-context\";\nimport { LogScreenRenderer } from \"./log-screen-renderer\";\n\nclass LogScreenContainer extends React.Component {\n  state = {\n    startedBlocks: [],\n    earnedBlocks: [],\n    goal: null\n  };\n\n  async componentDidMount() {\n    this._fetchBlocks();\n    this._fetchGoal();\n  }\n\n  render() {\n    const { startedBlocks, earnedBlocks, goal } = this.state;\n    return (\n      <View style={{ width: \"100%\" }}>\n        <Text style={{ color: \"rgb(204, 204, 204)\", fontSize: 30, textAlign: \"center\", marginVertical: 15, marginHorizontal: 40, fontWeight: \"bold\" }}>\n          Log\n        </Text>\n        <LogScreenRenderer\n          days={this._getDays([...startedBlocks, ...earnedBlocks])}\n          goal={goal}\n        />\n      </View>\n    );\n  }\n\n  _fetchBlocks = async () => {\n    const { remoteService } = this.props;\n    if (remoteService) {\n      const { startedBlocks, earnedBlocks } = await remoteService.fetchBlocks();\n      this.setState({ startedBlocks, earnedBlocks });\n    }\n  }\n\n  _fetchGoal = async () => {\n    const { remoteService } = this.props;\n    const goals = await remoteService.fetchGoals();\n    if (goals && goals.length > 0) {\n      this.setState({ goal: goals[0] });\n    }\n  };\n\n  _getDays = blocks => {\n    const days = {};\n    let startDate = null;\n    let endDate = null;\n\n    for (const block of blocks) {\n      const dayMoment = moment(block.startTime);\n      const dayKey = dayMoment.format(\"DD MM YYYY\");\n      const day = days[dayKey];\n\n      // Group blocks by day\n      if (day) {\n        day.blocks.push(block);\n      } else {\n        days[dayKey] = { date: block.startTime, blocks: [block] };\n      }\n\n      // Set lowest and highest days\n      if (!startDate) {\n        startDate = block.startTime;\n      }\n      if (!endDate) {\n        endDate = block.startTime;\n      }\n      if (dayMoment.isBefore(moment(startDate))) {\n        startDate = block.startTime;\n      }\n      if (dayMoment.isAfter(moment(startDate))) {\n        endDate = block.startTime;\n      }\n    }\n\n    const sortedDates = Object.keys(days).sort((a,b) => moment(a, \"DD MM YYY\") - moment(b, \"DD MM YYYY\"));\n    return sortedDates.map(date => days[date]);\n  }\n\n  _getContiguousDays = (startDate, endDate) => {\n    const dayList = [];\n    let currentDay = moment(startDate);\n    while (currentDay.format(\"DD MM YYYY\") !== moment(endDate).format(\"DD MM YYYY\")) {\n      dayList.push(currentDay.format(\"DD MM YYYY\"));\n      currentDay = currentDay.add(1, \"days\");\n    }\n    return dayList;\n  }\n}\n\nexport const LogScreen = props => (\n  <AppContext.Consumer>\n    {({ remoteService }) => <LogScreenContainer {...props} remoteService={remoteService} />}\n  </AppContext.Consumer>\n)\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppRegistry } from 'react-native';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nAppRegistry.registerComponent('App', () => App);\n\nAppRegistry.runApplication('App', {\n  initialProps: {},\n  rootTag: document.getElementById('root')\n});\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}